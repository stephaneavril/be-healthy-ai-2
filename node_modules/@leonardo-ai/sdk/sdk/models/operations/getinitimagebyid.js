"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInitImageByIdResponseFromJSON = exports.getInitImageByIdResponseToJSON = exports.GetInitImageByIdResponse$ = exports.GetInitImageByIdResponse$outboundSchema = exports.GetInitImageByIdResponse$inboundSchema = exports.getInitImageByIdResponseBodyFromJSON = exports.getInitImageByIdResponseBodyToJSON = exports.GetInitImageByIdResponseBody$ = exports.GetInitImageByIdResponseBody$outboundSchema = exports.GetInitImageByIdResponseBody$inboundSchema = exports.getInitImageByIdInitImagesFromJSON = exports.getInitImageByIdInitImagesToJSON = exports.GetInitImageByIdInitImages$ = exports.GetInitImageByIdInitImages$outboundSchema = exports.GetInitImageByIdInitImages$inboundSchema = exports.getInitImageByIdRequestFromJSON = exports.getInitImageByIdRequestToJSON = exports.GetInitImageByIdRequest$ = exports.GetInitImageByIdRequest$outboundSchema = exports.GetInitImageByIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.GetInitImageByIdRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.GetInitImageByIdRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetInitImageByIdRequest$;
(function (GetInitImageByIdRequest$) {
    /** @deprecated use `GetInitImageByIdRequest$inboundSchema` instead. */
    GetInitImageByIdRequest$.inboundSchema = exports.GetInitImageByIdRequest$inboundSchema;
    /** @deprecated use `GetInitImageByIdRequest$outboundSchema` instead. */
    GetInitImageByIdRequest$.outboundSchema = exports.GetInitImageByIdRequest$outboundSchema;
})(GetInitImageByIdRequest$ || (exports.GetInitImageByIdRequest$ = GetInitImageByIdRequest$ = {}));
function getInitImageByIdRequestToJSON(getInitImageByIdRequest) {
    return JSON.stringify(exports.GetInitImageByIdRequest$outboundSchema.parse(getInitImageByIdRequest));
}
exports.getInitImageByIdRequestToJSON = getInitImageByIdRequestToJSON;
function getInitImageByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetInitImageByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetInitImageByIdRequest' from JSON`);
}
exports.getInitImageByIdRequestFromJSON = getInitImageByIdRequestFromJSON;
/** @internal */
exports.GetInitImageByIdInitImages$inboundSchema = z.object({
    createdAt: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    url: z.string().optional(),
});
/** @internal */
exports.GetInitImageByIdInitImages$outboundSchema = z.object({
    createdAt: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    url: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetInitImageByIdInitImages$;
(function (GetInitImageByIdInitImages$) {
    /** @deprecated use `GetInitImageByIdInitImages$inboundSchema` instead. */
    GetInitImageByIdInitImages$.inboundSchema = exports.GetInitImageByIdInitImages$inboundSchema;
    /** @deprecated use `GetInitImageByIdInitImages$outboundSchema` instead. */
    GetInitImageByIdInitImages$.outboundSchema = exports.GetInitImageByIdInitImages$outboundSchema;
})(GetInitImageByIdInitImages$ || (exports.GetInitImageByIdInitImages$ = GetInitImageByIdInitImages$ = {}));
function getInitImageByIdInitImagesToJSON(getInitImageByIdInitImages) {
    return JSON.stringify(exports.GetInitImageByIdInitImages$outboundSchema.parse(getInitImageByIdInitImages));
}
exports.getInitImageByIdInitImagesToJSON = getInitImageByIdInitImagesToJSON;
function getInitImageByIdInitImagesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetInitImageByIdInitImages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetInitImageByIdInitImages' from JSON`);
}
exports.getInitImageByIdInitImagesFromJSON = getInitImageByIdInitImagesFromJSON;
/** @internal */
exports.GetInitImageByIdResponseBody$inboundSchema = z.object({
    init_images_by_pk: z.nullable(z.lazy(() => exports.GetInitImageByIdInitImages$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "init_images_by_pk": "initImagesByPk",
    });
});
/** @internal */
exports.GetInitImageByIdResponseBody$outboundSchema = z.object({
    initImagesByPk: z.nullable(z.lazy(() => exports.GetInitImageByIdInitImages$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        initImagesByPk: "init_images_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetInitImageByIdResponseBody$;
(function (GetInitImageByIdResponseBody$) {
    /** @deprecated use `GetInitImageByIdResponseBody$inboundSchema` instead. */
    GetInitImageByIdResponseBody$.inboundSchema = exports.GetInitImageByIdResponseBody$inboundSchema;
    /** @deprecated use `GetInitImageByIdResponseBody$outboundSchema` instead. */
    GetInitImageByIdResponseBody$.outboundSchema = exports.GetInitImageByIdResponseBody$outboundSchema;
})(GetInitImageByIdResponseBody$ || (exports.GetInitImageByIdResponseBody$ = GetInitImageByIdResponseBody$ = {}));
function getInitImageByIdResponseBodyToJSON(getInitImageByIdResponseBody) {
    return JSON.stringify(exports.GetInitImageByIdResponseBody$outboundSchema.parse(getInitImageByIdResponseBody));
}
exports.getInitImageByIdResponseBodyToJSON = getInitImageByIdResponseBodyToJSON;
function getInitImageByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetInitImageByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetInitImageByIdResponseBody' from JSON`);
}
exports.getInitImageByIdResponseBodyFromJSON = getInitImageByIdResponseBodyFromJSON;
/** @internal */
exports.GetInitImageByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.GetInitImageByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.GetInitImageByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.GetInitImageByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetInitImageByIdResponse$;
(function (GetInitImageByIdResponse$) {
    /** @deprecated use `GetInitImageByIdResponse$inboundSchema` instead. */
    GetInitImageByIdResponse$.inboundSchema = exports.GetInitImageByIdResponse$inboundSchema;
    /** @deprecated use `GetInitImageByIdResponse$outboundSchema` instead. */
    GetInitImageByIdResponse$.outboundSchema = exports.GetInitImageByIdResponse$outboundSchema;
})(GetInitImageByIdResponse$ || (exports.GetInitImageByIdResponse$ = GetInitImageByIdResponse$ = {}));
function getInitImageByIdResponseToJSON(getInitImageByIdResponse) {
    return JSON.stringify(exports.GetInitImageByIdResponse$outboundSchema.parse(getInitImageByIdResponse));
}
exports.getInitImageByIdResponseToJSON = getInitImageByIdResponseToJSON;
function getInitImageByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetInitImageByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetInitImageByIdResponse' from JSON`);
}
exports.getInitImageByIdResponseFromJSON = getInitImageByIdResponseFromJSON;
//# sourceMappingURL=getinitimagebyid.js.map