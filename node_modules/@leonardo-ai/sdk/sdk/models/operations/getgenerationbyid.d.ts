import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type GetGenerationByIdRequest = {
    /**
     * The ID of the generation to return.
     */
    id: string;
};
/**
 * columns and relationships of "generated_image_variation_generic"
 */
export type GetGenerationByIdGeneratedImageVariationGeneric = {
    id?: string | null | undefined;
    /**
     * The status of the current task.
     */
    status?: shared.JobStatus | undefined;
    /**
     * The type of variation.
     */
    transformType?: shared.VariationType | undefined;
    url?: string | null | undefined;
};
/**
 * columns and relationships of "generated_images"
 */
export type GeneratedImages = {
    /**
     * If fantasyAvatar feature was used.
     */
    fantasyAvatar?: boolean | null | undefined;
    generatedImageVariationGenerics?: Array<GetGenerationByIdGeneratedImageVariationGeneric> | undefined;
    id?: string | null | undefined;
    /**
     * If it is an image to video generation.
     */
    imageToVideo?: boolean | null | undefined;
    likeCount?: number | undefined;
    /**
     * If generation is of motion type.
     */
    motion?: boolean | null | undefined;
    /**
     * The URL of the motion MP4.
     */
    motionMp4URL?: string | null | undefined;
    /**
     * The name of the motion model.
     */
    motionModel?: string | null | undefined;
    /**
     * The motion strength.
     */
    motionStrength?: number | null | undefined;
    nsfw?: boolean | undefined;
    url?: string | undefined;
};
/**
 * Element used for the generation.
 */
export type GetGenerationByIdLoras = {
    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     */
    akUUID?: string | null | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
     */
    baseModel?: shared.SdVersions | undefined;
    /**
     * Description for the element
     */
    description?: string | null | undefined;
    /**
     * Name of the element
     */
    name?: string | null | undefined;
    /**
     * URL of the element image
     */
    urlImage?: string | null | undefined;
    /**
     * Default weight for the element
     */
    weightDefault?: number | null | undefined;
    /**
     * Maximum weight for the element
     */
    weightMax?: number | null | undefined;
    /**
     * Minimum weight for the element
     */
    weightMin?: number | null | undefined;
};
/**
 * This table captures the elements that are applied to Generations.
 */
export type GenerationElements = {
    id?: number | null | undefined;
    /**
     * Element used for the generation.
     */
    lora?: GetGenerationByIdLoras | null | undefined;
    weightApplied?: number | null | undefined;
};
/**
 * columns and relationships of "generations"
 */
export type GetGenerationByIdGenerations = {
    createdAt?: string | undefined;
    generatedImages?: Array<GeneratedImages> | undefined;
    generationElements?: Array<GenerationElements> | undefined;
    guidanceScale?: number | null | undefined;
    id?: string | null | undefined;
    imageHeight?: number | undefined;
    imageWidth?: number | undefined;
    inferenceSteps?: number | null | undefined;
    initStrength?: number | null | undefined;
    modelId?: string | null | undefined;
    negativePrompt?: string | null | undefined;
    /**
     * If photoReal feature was used.
     */
    photoReal?: boolean | null | undefined;
    /**
     * Depth of field of photoReal used. 0.55 is low, 0.5 is medium, and 0.45 is high. Default is 0.55.
     */
    photoRealStrength?: number | null | undefined;
    /**
     * The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.
     */
    presetStyle?: shared.SdGenerationStyle | null | undefined;
    prompt?: string | undefined;
    /**
     * If prompt magic was used.
     */
    promptMagic?: boolean | null | undefined;
    /**
     * Strength of prompt magic used.
     */
    promptMagicStrength?: number | null | undefined;
    /**
     * Version of prompt magic used.
     */
    promptMagicVersion?: string | null | undefined;
    public?: boolean | undefined;
    /**
     * The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified.
     */
    scheduler?: shared.SdGenerationSchedulers | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
     */
    sdVersion?: shared.SdVersions | undefined;
    /**
     * Apply a fixed seed to maintain consistency across generation sets. The maximum seed value is 2147483637 for Flux and 9999999998 for other models
     */
    seed?: number | null | undefined;
    /**
     * The status of the current task.
     */
    status?: shared.JobStatus | undefined;
    /**
     * If ultra generation mode was used.
     */
    ultra?: boolean | null | undefined;
};
/**
 * Responses for GET /generations/{id}
 */
export type GetGenerationByIdResponseBody = {
    /**
     * columns and relationships of "generations"
     */
    generationsByPk?: GetGenerationByIdGenerations | null | undefined;
};
export type GetGenerationByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /generations/{id}
     */
    object?: GetGenerationByIdResponseBody | undefined;
};
/** @internal */
export declare const GetGenerationByIdRequest$inboundSchema: z.ZodType<GetGenerationByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetGenerationByIdRequest$outboundSchema: z.ZodType<GetGenerationByIdRequest$Outbound, z.ZodTypeDef, GetGenerationByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdRequest$ {
    /** @deprecated use `GetGenerationByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdRequest$Outbound, z.ZodTypeDef, GetGenerationByIdRequest>;
    /** @deprecated use `GetGenerationByIdRequest$Outbound` instead. */
    type Outbound = GetGenerationByIdRequest$Outbound;
}
export declare function getGenerationByIdRequestToJSON(getGenerationByIdRequest: GetGenerationByIdRequest): string;
export declare function getGenerationByIdRequestFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdRequest, SDKValidationError>;
/** @internal */
export declare const GetGenerationByIdGeneratedImageVariationGeneric$inboundSchema: z.ZodType<GetGenerationByIdGeneratedImageVariationGeneric, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdGeneratedImageVariationGeneric$Outbound = {
    id?: string | null | undefined;
    status?: string | undefined;
    transformType?: string | undefined;
    url?: string | null | undefined;
};
/** @internal */
export declare const GetGenerationByIdGeneratedImageVariationGeneric$outboundSchema: z.ZodType<GetGenerationByIdGeneratedImageVariationGeneric$Outbound, z.ZodTypeDef, GetGenerationByIdGeneratedImageVariationGeneric>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdGeneratedImageVariationGeneric$ {
    /** @deprecated use `GetGenerationByIdGeneratedImageVariationGeneric$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdGeneratedImageVariationGeneric, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdGeneratedImageVariationGeneric$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdGeneratedImageVariationGeneric$Outbound, z.ZodTypeDef, GetGenerationByIdGeneratedImageVariationGeneric>;
    /** @deprecated use `GetGenerationByIdGeneratedImageVariationGeneric$Outbound` instead. */
    type Outbound = GetGenerationByIdGeneratedImageVariationGeneric$Outbound;
}
export declare function getGenerationByIdGeneratedImageVariationGenericToJSON(getGenerationByIdGeneratedImageVariationGeneric: GetGenerationByIdGeneratedImageVariationGeneric): string;
export declare function getGenerationByIdGeneratedImageVariationGenericFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdGeneratedImageVariationGeneric, SDKValidationError>;
/** @internal */
export declare const GeneratedImages$inboundSchema: z.ZodType<GeneratedImages, z.ZodTypeDef, unknown>;
/** @internal */
export type GeneratedImages$Outbound = {
    fantasyAvatar?: boolean | null | undefined;
    generated_image_variation_generics?: Array<GetGenerationByIdGeneratedImageVariationGeneric$Outbound> | undefined;
    id?: string | null | undefined;
    imageToVideo?: boolean | null | undefined;
    likeCount?: number | undefined;
    motion?: boolean | null | undefined;
    motionMP4URL?: string | null | undefined;
    motionModel?: string | null | undefined;
    motionStrength?: number | null | undefined;
    nsfw?: boolean | undefined;
    url?: string | undefined;
};
/** @internal */
export declare const GeneratedImages$outboundSchema: z.ZodType<GeneratedImages$Outbound, z.ZodTypeDef, GeneratedImages>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GeneratedImages$ {
    /** @deprecated use `GeneratedImages$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GeneratedImages, z.ZodTypeDef, unknown>;
    /** @deprecated use `GeneratedImages$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GeneratedImages$Outbound, z.ZodTypeDef, GeneratedImages>;
    /** @deprecated use `GeneratedImages$Outbound` instead. */
    type Outbound = GeneratedImages$Outbound;
}
export declare function generatedImagesToJSON(generatedImages: GeneratedImages): string;
export declare function generatedImagesFromJSON(jsonString: string): SafeParseResult<GeneratedImages, SDKValidationError>;
/** @internal */
export declare const GetGenerationByIdLoras$inboundSchema: z.ZodType<GetGenerationByIdLoras, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdLoras$Outbound = {
    akUUID?: string | null | undefined;
    baseModel?: string | undefined;
    description?: string | null | undefined;
    name?: string | null | undefined;
    urlImage?: string | null | undefined;
    weightDefault?: number | null | undefined;
    weightMax?: number | null | undefined;
    weightMin?: number | null | undefined;
};
/** @internal */
export declare const GetGenerationByIdLoras$outboundSchema: z.ZodType<GetGenerationByIdLoras$Outbound, z.ZodTypeDef, GetGenerationByIdLoras>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdLoras$ {
    /** @deprecated use `GetGenerationByIdLoras$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdLoras, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdLoras$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdLoras$Outbound, z.ZodTypeDef, GetGenerationByIdLoras>;
    /** @deprecated use `GetGenerationByIdLoras$Outbound` instead. */
    type Outbound = GetGenerationByIdLoras$Outbound;
}
export declare function getGenerationByIdLorasToJSON(getGenerationByIdLoras: GetGenerationByIdLoras): string;
export declare function getGenerationByIdLorasFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdLoras, SDKValidationError>;
/** @internal */
export declare const GenerationElements$inboundSchema: z.ZodType<GenerationElements, z.ZodTypeDef, unknown>;
/** @internal */
export type GenerationElements$Outbound = {
    id?: number | null | undefined;
    lora?: GetGenerationByIdLoras$Outbound | null | undefined;
    weightApplied?: number | null | undefined;
};
/** @internal */
export declare const GenerationElements$outboundSchema: z.ZodType<GenerationElements$Outbound, z.ZodTypeDef, GenerationElements>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GenerationElements$ {
    /** @deprecated use `GenerationElements$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GenerationElements, z.ZodTypeDef, unknown>;
    /** @deprecated use `GenerationElements$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GenerationElements$Outbound, z.ZodTypeDef, GenerationElements>;
    /** @deprecated use `GenerationElements$Outbound` instead. */
    type Outbound = GenerationElements$Outbound;
}
export declare function generationElementsToJSON(generationElements: GenerationElements): string;
export declare function generationElementsFromJSON(jsonString: string): SafeParseResult<GenerationElements, SDKValidationError>;
/** @internal */
export declare const GetGenerationByIdGenerations$inboundSchema: z.ZodType<GetGenerationByIdGenerations, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdGenerations$Outbound = {
    createdAt?: string | undefined;
    generated_images?: Array<GeneratedImages$Outbound> | undefined;
    generation_elements?: Array<GenerationElements$Outbound> | undefined;
    guidanceScale?: number | null | undefined;
    id?: string | null | undefined;
    imageHeight?: number | undefined;
    imageWidth?: number | undefined;
    inferenceSteps?: number | null | undefined;
    initStrength?: number | null | undefined;
    modelId?: string | null | undefined;
    negativePrompt?: string | null | undefined;
    photoReal?: boolean | null | undefined;
    photoRealStrength?: number | null | undefined;
    presetStyle: string | null;
    prompt?: string | undefined;
    promptMagic?: boolean | null | undefined;
    promptMagicStrength?: number | null | undefined;
    promptMagicVersion?: string | null | undefined;
    public?: boolean | undefined;
    scheduler?: string | undefined;
    sdVersion?: string | undefined;
    seed?: number | null | undefined;
    status?: string | undefined;
    ultra?: boolean | null | undefined;
};
/** @internal */
export declare const GetGenerationByIdGenerations$outboundSchema: z.ZodType<GetGenerationByIdGenerations$Outbound, z.ZodTypeDef, GetGenerationByIdGenerations>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdGenerations$ {
    /** @deprecated use `GetGenerationByIdGenerations$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdGenerations, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdGenerations$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdGenerations$Outbound, z.ZodTypeDef, GetGenerationByIdGenerations>;
    /** @deprecated use `GetGenerationByIdGenerations$Outbound` instead. */
    type Outbound = GetGenerationByIdGenerations$Outbound;
}
export declare function getGenerationByIdGenerationsToJSON(getGenerationByIdGenerations: GetGenerationByIdGenerations): string;
export declare function getGenerationByIdGenerationsFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdGenerations, SDKValidationError>;
/** @internal */
export declare const GetGenerationByIdResponseBody$inboundSchema: z.ZodType<GetGenerationByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdResponseBody$Outbound = {
    generations_by_pk?: GetGenerationByIdGenerations$Outbound | null | undefined;
};
/** @internal */
export declare const GetGenerationByIdResponseBody$outboundSchema: z.ZodType<GetGenerationByIdResponseBody$Outbound, z.ZodTypeDef, GetGenerationByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdResponseBody$ {
    /** @deprecated use `GetGenerationByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdResponseBody$Outbound, z.ZodTypeDef, GetGenerationByIdResponseBody>;
    /** @deprecated use `GetGenerationByIdResponseBody$Outbound` instead. */
    type Outbound = GetGenerationByIdResponseBody$Outbound;
}
export declare function getGenerationByIdResponseBodyToJSON(getGenerationByIdResponseBody: GetGenerationByIdResponseBody): string;
export declare function getGenerationByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const GetGenerationByIdResponse$inboundSchema: z.ZodType<GetGenerationByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGenerationByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: GetGenerationByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const GetGenerationByIdResponse$outboundSchema: z.ZodType<GetGenerationByIdResponse$Outbound, z.ZodTypeDef, GetGenerationByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGenerationByIdResponse$ {
    /** @deprecated use `GetGenerationByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGenerationByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGenerationByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGenerationByIdResponse$Outbound, z.ZodTypeDef, GetGenerationByIdResponse>;
    /** @deprecated use `GetGenerationByIdResponse$Outbound` instead. */
    type Outbound = GetGenerationByIdResponse$Outbound;
}
export declare function getGenerationByIdResponseToJSON(getGenerationByIdResponse: GetGenerationByIdResponse): string;
export declare function getGenerationByIdResponseFromJSON(jsonString: string): SafeParseResult<GetGenerationByIdResponse, SDKValidationError>;
//# sourceMappingURL=getgenerationbyid.d.ts.map