"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteGenerationByIdResponseFromJSON = exports.deleteGenerationByIdResponseToJSON = exports.DeleteGenerationByIdResponse$ = exports.DeleteGenerationByIdResponse$outboundSchema = exports.DeleteGenerationByIdResponse$inboundSchema = exports.deleteGenerationByIdResponseBodyFromJSON = exports.deleteGenerationByIdResponseBodyToJSON = exports.DeleteGenerationByIdResponseBody$ = exports.DeleteGenerationByIdResponseBody$outboundSchema = exports.DeleteGenerationByIdResponseBody$inboundSchema = exports.generationsFromJSON = exports.generationsToJSON = exports.Generations$ = exports.Generations$outboundSchema = exports.Generations$inboundSchema = exports.deleteGenerationByIdRequestFromJSON = exports.deleteGenerationByIdRequestToJSON = exports.DeleteGenerationByIdRequest$ = exports.DeleteGenerationByIdRequest$outboundSchema = exports.DeleteGenerationByIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.DeleteGenerationByIdRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.DeleteGenerationByIdRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteGenerationByIdRequest$;
(function (DeleteGenerationByIdRequest$) {
    /** @deprecated use `DeleteGenerationByIdRequest$inboundSchema` instead. */
    DeleteGenerationByIdRequest$.inboundSchema = exports.DeleteGenerationByIdRequest$inboundSchema;
    /** @deprecated use `DeleteGenerationByIdRequest$outboundSchema` instead. */
    DeleteGenerationByIdRequest$.outboundSchema = exports.DeleteGenerationByIdRequest$outboundSchema;
})(DeleteGenerationByIdRequest$ || (exports.DeleteGenerationByIdRequest$ = DeleteGenerationByIdRequest$ = {}));
function deleteGenerationByIdRequestToJSON(deleteGenerationByIdRequest) {
    return JSON.stringify(exports.DeleteGenerationByIdRequest$outboundSchema.parse(deleteGenerationByIdRequest));
}
exports.deleteGenerationByIdRequestToJSON = deleteGenerationByIdRequestToJSON;
function deleteGenerationByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteGenerationByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteGenerationByIdRequest' from JSON`);
}
exports.deleteGenerationByIdRequestFromJSON = deleteGenerationByIdRequestFromJSON;
/** @internal */
exports.Generations$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.Generations$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Generations$;
(function (Generations$) {
    /** @deprecated use `Generations$inboundSchema` instead. */
    Generations$.inboundSchema = exports.Generations$inboundSchema;
    /** @deprecated use `Generations$outboundSchema` instead. */
    Generations$.outboundSchema = exports.Generations$outboundSchema;
})(Generations$ || (exports.Generations$ = Generations$ = {}));
function generationsToJSON(generations) {
    return JSON.stringify(exports.Generations$outboundSchema.parse(generations));
}
exports.generationsToJSON = generationsToJSON;
function generationsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Generations$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Generations' from JSON`);
}
exports.generationsFromJSON = generationsFromJSON;
/** @internal */
exports.DeleteGenerationByIdResponseBody$inboundSchema = z.object({
    delete_generations_by_pk: z.nullable(z.lazy(() => exports.Generations$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "delete_generations_by_pk": "deleteGenerationsByPk",
    });
});
/** @internal */
exports.DeleteGenerationByIdResponseBody$outboundSchema = z.object({
    deleteGenerationsByPk: z.nullable(z.lazy(() => exports.Generations$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        deleteGenerationsByPk: "delete_generations_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteGenerationByIdResponseBody$;
(function (DeleteGenerationByIdResponseBody$) {
    /** @deprecated use `DeleteGenerationByIdResponseBody$inboundSchema` instead. */
    DeleteGenerationByIdResponseBody$.inboundSchema = exports.DeleteGenerationByIdResponseBody$inboundSchema;
    /** @deprecated use `DeleteGenerationByIdResponseBody$outboundSchema` instead. */
    DeleteGenerationByIdResponseBody$.outboundSchema = exports.DeleteGenerationByIdResponseBody$outboundSchema;
})(DeleteGenerationByIdResponseBody$ || (exports.DeleteGenerationByIdResponseBody$ = DeleteGenerationByIdResponseBody$ = {}));
function deleteGenerationByIdResponseBodyToJSON(deleteGenerationByIdResponseBody) {
    return JSON.stringify(exports.DeleteGenerationByIdResponseBody$outboundSchema.parse(deleteGenerationByIdResponseBody));
}
exports.deleteGenerationByIdResponseBodyToJSON = deleteGenerationByIdResponseBodyToJSON;
function deleteGenerationByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteGenerationByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteGenerationByIdResponseBody' from JSON`);
}
exports.deleteGenerationByIdResponseBodyFromJSON = deleteGenerationByIdResponseBodyFromJSON;
/** @internal */
exports.DeleteGenerationByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.DeleteGenerationByIdResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.DeleteGenerationByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.DeleteGenerationByIdResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteGenerationByIdResponse$;
(function (DeleteGenerationByIdResponse$) {
    /** @deprecated use `DeleteGenerationByIdResponse$inboundSchema` instead. */
    DeleteGenerationByIdResponse$.inboundSchema = exports.DeleteGenerationByIdResponse$inboundSchema;
    /** @deprecated use `DeleteGenerationByIdResponse$outboundSchema` instead. */
    DeleteGenerationByIdResponse$.outboundSchema = exports.DeleteGenerationByIdResponse$outboundSchema;
})(DeleteGenerationByIdResponse$ || (exports.DeleteGenerationByIdResponse$ = DeleteGenerationByIdResponse$ = {}));
function deleteGenerationByIdResponseToJSON(deleteGenerationByIdResponse) {
    return JSON.stringify(exports.DeleteGenerationByIdResponse$outboundSchema.parse(deleteGenerationByIdResponse));
}
exports.deleteGenerationByIdResponseToJSON = deleteGenerationByIdResponseToJSON;
function deleteGenerationByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteGenerationByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteGenerationByIdResponse' from JSON`);
}
exports.deleteGenerationByIdResponseFromJSON = deleteGenerationByIdResponseFromJSON;
//# sourceMappingURL=deletegenerationbyid.js.map