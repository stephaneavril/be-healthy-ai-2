import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteGenerationByIdRequest = {
    /**
     * The ID of the generation to delete.
     */
    id: string;
};
/**
 * columns and relationships of "generations"
 */
export type Generations = {
    id?: string | null | undefined;
};
/**
 * Responses for DELETE /generations/{id}
 */
export type DeleteGenerationByIdResponseBody = {
    /**
     * columns and relationships of "generations"
     */
    deleteGenerationsByPk?: Generations | null | undefined;
};
export type DeleteGenerationByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for DELETE /generations/{id}
     */
    object?: DeleteGenerationByIdResponseBody | undefined;
};
/** @internal */
export declare const DeleteGenerationByIdRequest$inboundSchema: z.ZodType<DeleteGenerationByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteGenerationByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const DeleteGenerationByIdRequest$outboundSchema: z.ZodType<DeleteGenerationByIdRequest$Outbound, z.ZodTypeDef, DeleteGenerationByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteGenerationByIdRequest$ {
    /** @deprecated use `DeleteGenerationByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteGenerationByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteGenerationByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteGenerationByIdRequest$Outbound, z.ZodTypeDef, DeleteGenerationByIdRequest>;
    /** @deprecated use `DeleteGenerationByIdRequest$Outbound` instead. */
    type Outbound = DeleteGenerationByIdRequest$Outbound;
}
export declare function deleteGenerationByIdRequestToJSON(deleteGenerationByIdRequest: DeleteGenerationByIdRequest): string;
export declare function deleteGenerationByIdRequestFromJSON(jsonString: string): SafeParseResult<DeleteGenerationByIdRequest, SDKValidationError>;
/** @internal */
export declare const Generations$inboundSchema: z.ZodType<Generations, z.ZodTypeDef, unknown>;
/** @internal */
export type Generations$Outbound = {
    id?: string | null | undefined;
};
/** @internal */
export declare const Generations$outboundSchema: z.ZodType<Generations$Outbound, z.ZodTypeDef, Generations>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Generations$ {
    /** @deprecated use `Generations$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Generations, z.ZodTypeDef, unknown>;
    /** @deprecated use `Generations$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Generations$Outbound, z.ZodTypeDef, Generations>;
    /** @deprecated use `Generations$Outbound` instead. */
    type Outbound = Generations$Outbound;
}
export declare function generationsToJSON(generations: Generations): string;
export declare function generationsFromJSON(jsonString: string): SafeParseResult<Generations, SDKValidationError>;
/** @internal */
export declare const DeleteGenerationByIdResponseBody$inboundSchema: z.ZodType<DeleteGenerationByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteGenerationByIdResponseBody$Outbound = {
    delete_generations_by_pk?: Generations$Outbound | null | undefined;
};
/** @internal */
export declare const DeleteGenerationByIdResponseBody$outboundSchema: z.ZodType<DeleteGenerationByIdResponseBody$Outbound, z.ZodTypeDef, DeleteGenerationByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteGenerationByIdResponseBody$ {
    /** @deprecated use `DeleteGenerationByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteGenerationByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteGenerationByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteGenerationByIdResponseBody$Outbound, z.ZodTypeDef, DeleteGenerationByIdResponseBody>;
    /** @deprecated use `DeleteGenerationByIdResponseBody$Outbound` instead. */
    type Outbound = DeleteGenerationByIdResponseBody$Outbound;
}
export declare function deleteGenerationByIdResponseBodyToJSON(deleteGenerationByIdResponseBody: DeleteGenerationByIdResponseBody): string;
export declare function deleteGenerationByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<DeleteGenerationByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const DeleteGenerationByIdResponse$inboundSchema: z.ZodType<DeleteGenerationByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteGenerationByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: DeleteGenerationByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const DeleteGenerationByIdResponse$outboundSchema: z.ZodType<DeleteGenerationByIdResponse$Outbound, z.ZodTypeDef, DeleteGenerationByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteGenerationByIdResponse$ {
    /** @deprecated use `DeleteGenerationByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteGenerationByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteGenerationByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteGenerationByIdResponse$Outbound, z.ZodTypeDef, DeleteGenerationByIdResponse>;
    /** @deprecated use `DeleteGenerationByIdResponse$Outbound` instead. */
    type Outbound = DeleteGenerationByIdResponse$Outbound;
}
export declare function deleteGenerationByIdResponseToJSON(deleteGenerationByIdResponse: DeleteGenerationByIdResponse): string;
export declare function deleteGenerationByIdResponseFromJSON(jsonString: string): SafeParseResult<DeleteGenerationByIdResponse, SDKValidationError>;
//# sourceMappingURL=deletegenerationbyid.d.ts.map