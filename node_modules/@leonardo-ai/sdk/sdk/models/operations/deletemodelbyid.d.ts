import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteModelByIdRequest = {
    /**
     * The ID of the model to delete.
     */
    id: string;
};
/**
 * columns and relationships of "custom_models"
 */
export type CustomModels = {
    id?: string | null | undefined;
};
/**
 * Responses for DELETE /models/{id}
 */
export type DeleteModelByIdResponseBody = {
    /**
     * columns and relationships of "custom_models"
     */
    deleteCustomModelsByPk?: CustomModels | null | undefined;
};
export type DeleteModelByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for DELETE /models/{id}
     */
    object?: DeleteModelByIdResponseBody | undefined;
};
/** @internal */
export declare const DeleteModelByIdRequest$inboundSchema: z.ZodType<DeleteModelByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteModelByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const DeleteModelByIdRequest$outboundSchema: z.ZodType<DeleteModelByIdRequest$Outbound, z.ZodTypeDef, DeleteModelByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteModelByIdRequest$ {
    /** @deprecated use `DeleteModelByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteModelByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteModelByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteModelByIdRequest$Outbound, z.ZodTypeDef, DeleteModelByIdRequest>;
    /** @deprecated use `DeleteModelByIdRequest$Outbound` instead. */
    type Outbound = DeleteModelByIdRequest$Outbound;
}
export declare function deleteModelByIdRequestToJSON(deleteModelByIdRequest: DeleteModelByIdRequest): string;
export declare function deleteModelByIdRequestFromJSON(jsonString: string): SafeParseResult<DeleteModelByIdRequest, SDKValidationError>;
/** @internal */
export declare const CustomModels$inboundSchema: z.ZodType<CustomModels, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomModels$Outbound = {
    id?: string | null | undefined;
};
/** @internal */
export declare const CustomModels$outboundSchema: z.ZodType<CustomModels$Outbound, z.ZodTypeDef, CustomModels>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomModels$ {
    /** @deprecated use `CustomModels$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomModels, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomModels$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomModels$Outbound, z.ZodTypeDef, CustomModels>;
    /** @deprecated use `CustomModels$Outbound` instead. */
    type Outbound = CustomModels$Outbound;
}
export declare function customModelsToJSON(customModels: CustomModels): string;
export declare function customModelsFromJSON(jsonString: string): SafeParseResult<CustomModels, SDKValidationError>;
/** @internal */
export declare const DeleteModelByIdResponseBody$inboundSchema: z.ZodType<DeleteModelByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteModelByIdResponseBody$Outbound = {
    delete_custom_models_by_pk?: CustomModels$Outbound | null | undefined;
};
/** @internal */
export declare const DeleteModelByIdResponseBody$outboundSchema: z.ZodType<DeleteModelByIdResponseBody$Outbound, z.ZodTypeDef, DeleteModelByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteModelByIdResponseBody$ {
    /** @deprecated use `DeleteModelByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteModelByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteModelByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteModelByIdResponseBody$Outbound, z.ZodTypeDef, DeleteModelByIdResponseBody>;
    /** @deprecated use `DeleteModelByIdResponseBody$Outbound` instead. */
    type Outbound = DeleteModelByIdResponseBody$Outbound;
}
export declare function deleteModelByIdResponseBodyToJSON(deleteModelByIdResponseBody: DeleteModelByIdResponseBody): string;
export declare function deleteModelByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<DeleteModelByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const DeleteModelByIdResponse$inboundSchema: z.ZodType<DeleteModelByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteModelByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: DeleteModelByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const DeleteModelByIdResponse$outboundSchema: z.ZodType<DeleteModelByIdResponse$Outbound, z.ZodTypeDef, DeleteModelByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteModelByIdResponse$ {
    /** @deprecated use `DeleteModelByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteModelByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteModelByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteModelByIdResponse$Outbound, z.ZodTypeDef, DeleteModelByIdResponse>;
    /** @deprecated use `DeleteModelByIdResponse$Outbound` instead. */
    type Outbound = DeleteModelByIdResponse$Outbound;
}
export declare function deleteModelByIdResponseToJSON(deleteModelByIdResponse: DeleteModelByIdResponse): string;
export declare function deleteModelByIdResponseFromJSON(jsonString: string): SafeParseResult<DeleteModelByIdResponse, SDKValidationError>;
//# sourceMappingURL=deletemodelbyid.d.ts.map