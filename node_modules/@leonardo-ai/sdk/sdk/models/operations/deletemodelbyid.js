"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteModelByIdResponseFromJSON = exports.deleteModelByIdResponseToJSON = exports.DeleteModelByIdResponse$ = exports.DeleteModelByIdResponse$outboundSchema = exports.DeleteModelByIdResponse$inboundSchema = exports.deleteModelByIdResponseBodyFromJSON = exports.deleteModelByIdResponseBodyToJSON = exports.DeleteModelByIdResponseBody$ = exports.DeleteModelByIdResponseBody$outboundSchema = exports.DeleteModelByIdResponseBody$inboundSchema = exports.customModelsFromJSON = exports.customModelsToJSON = exports.CustomModels$ = exports.CustomModels$outboundSchema = exports.CustomModels$inboundSchema = exports.deleteModelByIdRequestFromJSON = exports.deleteModelByIdRequestToJSON = exports.DeleteModelByIdRequest$ = exports.DeleteModelByIdRequest$outboundSchema = exports.DeleteModelByIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.DeleteModelByIdRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.DeleteModelByIdRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteModelByIdRequest$;
(function (DeleteModelByIdRequest$) {
    /** @deprecated use `DeleteModelByIdRequest$inboundSchema` instead. */
    DeleteModelByIdRequest$.inboundSchema = exports.DeleteModelByIdRequest$inboundSchema;
    /** @deprecated use `DeleteModelByIdRequest$outboundSchema` instead. */
    DeleteModelByIdRequest$.outboundSchema = exports.DeleteModelByIdRequest$outboundSchema;
})(DeleteModelByIdRequest$ || (exports.DeleteModelByIdRequest$ = DeleteModelByIdRequest$ = {}));
function deleteModelByIdRequestToJSON(deleteModelByIdRequest) {
    return JSON.stringify(exports.DeleteModelByIdRequest$outboundSchema.parse(deleteModelByIdRequest));
}
exports.deleteModelByIdRequestToJSON = deleteModelByIdRequestToJSON;
function deleteModelByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteModelByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteModelByIdRequest' from JSON`);
}
exports.deleteModelByIdRequestFromJSON = deleteModelByIdRequestFromJSON;
/** @internal */
exports.CustomModels$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.CustomModels$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomModels$;
(function (CustomModels$) {
    /** @deprecated use `CustomModels$inboundSchema` instead. */
    CustomModels$.inboundSchema = exports.CustomModels$inboundSchema;
    /** @deprecated use `CustomModels$outboundSchema` instead. */
    CustomModels$.outboundSchema = exports.CustomModels$outboundSchema;
})(CustomModels$ || (exports.CustomModels$ = CustomModels$ = {}));
function customModelsToJSON(customModels) {
    return JSON.stringify(exports.CustomModels$outboundSchema.parse(customModels));
}
exports.customModelsToJSON = customModelsToJSON;
function customModelsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CustomModels$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomModels' from JSON`);
}
exports.customModelsFromJSON = customModelsFromJSON;
/** @internal */
exports.DeleteModelByIdResponseBody$inboundSchema = z.object({
    delete_custom_models_by_pk: z.nullable(z.lazy(() => exports.CustomModels$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "delete_custom_models_by_pk": "deleteCustomModelsByPk",
    });
});
/** @internal */
exports.DeleteModelByIdResponseBody$outboundSchema = z.object({
    deleteCustomModelsByPk: z.nullable(z.lazy(() => exports.CustomModels$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        deleteCustomModelsByPk: "delete_custom_models_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteModelByIdResponseBody$;
(function (DeleteModelByIdResponseBody$) {
    /** @deprecated use `DeleteModelByIdResponseBody$inboundSchema` instead. */
    DeleteModelByIdResponseBody$.inboundSchema = exports.DeleteModelByIdResponseBody$inboundSchema;
    /** @deprecated use `DeleteModelByIdResponseBody$outboundSchema` instead. */
    DeleteModelByIdResponseBody$.outboundSchema = exports.DeleteModelByIdResponseBody$outboundSchema;
})(DeleteModelByIdResponseBody$ || (exports.DeleteModelByIdResponseBody$ = DeleteModelByIdResponseBody$ = {}));
function deleteModelByIdResponseBodyToJSON(deleteModelByIdResponseBody) {
    return JSON.stringify(exports.DeleteModelByIdResponseBody$outboundSchema.parse(deleteModelByIdResponseBody));
}
exports.deleteModelByIdResponseBodyToJSON = deleteModelByIdResponseBodyToJSON;
function deleteModelByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteModelByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteModelByIdResponseBody' from JSON`);
}
exports.deleteModelByIdResponseBodyFromJSON = deleteModelByIdResponseBodyFromJSON;
/** @internal */
exports.DeleteModelByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.DeleteModelByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.DeleteModelByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.DeleteModelByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteModelByIdResponse$;
(function (DeleteModelByIdResponse$) {
    /** @deprecated use `DeleteModelByIdResponse$inboundSchema` instead. */
    DeleteModelByIdResponse$.inboundSchema = exports.DeleteModelByIdResponse$inboundSchema;
    /** @deprecated use `DeleteModelByIdResponse$outboundSchema` instead. */
    DeleteModelByIdResponse$.outboundSchema = exports.DeleteModelByIdResponse$outboundSchema;
})(DeleteModelByIdResponse$ || (exports.DeleteModelByIdResponse$ = DeleteModelByIdResponse$ = {}));
function deleteModelByIdResponseToJSON(deleteModelByIdResponse) {
    return JSON.stringify(exports.DeleteModelByIdResponse$outboundSchema.parse(deleteModelByIdResponse));
}
exports.deleteModelByIdResponseToJSON = deleteModelByIdResponseToJSON;
function deleteModelByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteModelByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteModelByIdResponse' from JSON`);
}
exports.deleteModelByIdResponseFromJSON = deleteModelByIdResponseFromJSON;
//# sourceMappingURL=deletemodelbyid.js.map