"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.uploadModelAssetResponseFromJSON = exports.uploadModelAssetResponseToJSON = exports.UploadModelAssetResponse$ = exports.UploadModelAssetResponse$outboundSchema = exports.UploadModelAssetResponse$inboundSchema = exports.uploadModelAssetResponseBodyFromJSON = exports.uploadModelAssetResponseBodyToJSON = exports.UploadModelAssetResponseBody$ = exports.UploadModelAssetResponseBody$outboundSchema = exports.UploadModelAssetResponseBody$inboundSchema = exports.modelAssetUploadOutputFromJSON = exports.modelAssetUploadOutputToJSON = exports.ModelAssetUploadOutput$ = exports.ModelAssetUploadOutput$outboundSchema = exports.ModelAssetUploadOutput$inboundSchema = exports.uploadModelAssetRequestBodyFromJSON = exports.uploadModelAssetRequestBodyToJSON = exports.UploadModelAssetRequestBody$ = exports.UploadModelAssetRequestBody$outboundSchema = exports.UploadModelAssetRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.UploadModelAssetRequestBody$inboundSchema = z.object({
    modelExtension: z.string().optional(),
    name: z.nullable(z.string()).optional(),
});
/** @internal */
exports.UploadModelAssetRequestBody$outboundSchema = z.object({
    modelExtension: z.string().optional(),
    name: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UploadModelAssetRequestBody$;
(function (UploadModelAssetRequestBody$) {
    /** @deprecated use `UploadModelAssetRequestBody$inboundSchema` instead. */
    UploadModelAssetRequestBody$.inboundSchema = exports.UploadModelAssetRequestBody$inboundSchema;
    /** @deprecated use `UploadModelAssetRequestBody$outboundSchema` instead. */
    UploadModelAssetRequestBody$.outboundSchema = exports.UploadModelAssetRequestBody$outboundSchema;
})(UploadModelAssetRequestBody$ || (exports.UploadModelAssetRequestBody$ = UploadModelAssetRequestBody$ = {}));
function uploadModelAssetRequestBodyToJSON(uploadModelAssetRequestBody) {
    return JSON.stringify(exports.UploadModelAssetRequestBody$outboundSchema.parse(uploadModelAssetRequestBody));
}
exports.uploadModelAssetRequestBodyToJSON = uploadModelAssetRequestBodyToJSON;
function uploadModelAssetRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UploadModelAssetRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UploadModelAssetRequestBody' from JSON`);
}
exports.uploadModelAssetRequestBodyFromJSON = uploadModelAssetRequestBodyFromJSON;
/** @internal */
exports.ModelAssetUploadOutput$inboundSchema = z.object({
    modelFields: z.nullable(z.string()).optional(),
    modelId: z.nullable(z.string()).optional(),
    modelKey: z.nullable(z.string()).optional(),
    modelUrl: z.nullable(z.string()).optional(),
});
/** @internal */
exports.ModelAssetUploadOutput$outboundSchema = z.object({
    modelFields: z.nullable(z.string()).optional(),
    modelId: z.nullable(z.string()).optional(),
    modelKey: z.nullable(z.string()).optional(),
    modelUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ModelAssetUploadOutput$;
(function (ModelAssetUploadOutput$) {
    /** @deprecated use `ModelAssetUploadOutput$inboundSchema` instead. */
    ModelAssetUploadOutput$.inboundSchema = exports.ModelAssetUploadOutput$inboundSchema;
    /** @deprecated use `ModelAssetUploadOutput$outboundSchema` instead. */
    ModelAssetUploadOutput$.outboundSchema = exports.ModelAssetUploadOutput$outboundSchema;
})(ModelAssetUploadOutput$ || (exports.ModelAssetUploadOutput$ = ModelAssetUploadOutput$ = {}));
function modelAssetUploadOutputToJSON(modelAssetUploadOutput) {
    return JSON.stringify(exports.ModelAssetUploadOutput$outboundSchema.parse(modelAssetUploadOutput));
}
exports.modelAssetUploadOutputToJSON = modelAssetUploadOutputToJSON;
function modelAssetUploadOutputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ModelAssetUploadOutput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ModelAssetUploadOutput' from JSON`);
}
exports.modelAssetUploadOutputFromJSON = modelAssetUploadOutputFromJSON;
/** @internal */
exports.UploadModelAssetResponseBody$inboundSchema = z.object({
    uploadModelAsset: z.nullable(z.lazy(() => exports.ModelAssetUploadOutput$inboundSchema)).optional(),
});
/** @internal */
exports.UploadModelAssetResponseBody$outboundSchema = z.object({
    uploadModelAsset: z.nullable(z.lazy(() => exports.ModelAssetUploadOutput$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UploadModelAssetResponseBody$;
(function (UploadModelAssetResponseBody$) {
    /** @deprecated use `UploadModelAssetResponseBody$inboundSchema` instead. */
    UploadModelAssetResponseBody$.inboundSchema = exports.UploadModelAssetResponseBody$inboundSchema;
    /** @deprecated use `UploadModelAssetResponseBody$outboundSchema` instead. */
    UploadModelAssetResponseBody$.outboundSchema = exports.UploadModelAssetResponseBody$outboundSchema;
})(UploadModelAssetResponseBody$ || (exports.UploadModelAssetResponseBody$ = UploadModelAssetResponseBody$ = {}));
function uploadModelAssetResponseBodyToJSON(uploadModelAssetResponseBody) {
    return JSON.stringify(exports.UploadModelAssetResponseBody$outboundSchema.parse(uploadModelAssetResponseBody));
}
exports.uploadModelAssetResponseBodyToJSON = uploadModelAssetResponseBodyToJSON;
function uploadModelAssetResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UploadModelAssetResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UploadModelAssetResponseBody' from JSON`);
}
exports.uploadModelAssetResponseBodyFromJSON = uploadModelAssetResponseBodyFromJSON;
/** @internal */
exports.UploadModelAssetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.UploadModelAssetResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.UploadModelAssetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.UploadModelAssetResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UploadModelAssetResponse$;
(function (UploadModelAssetResponse$) {
    /** @deprecated use `UploadModelAssetResponse$inboundSchema` instead. */
    UploadModelAssetResponse$.inboundSchema = exports.UploadModelAssetResponse$inboundSchema;
    /** @deprecated use `UploadModelAssetResponse$outboundSchema` instead. */
    UploadModelAssetResponse$.outboundSchema = exports.UploadModelAssetResponse$outboundSchema;
})(UploadModelAssetResponse$ || (exports.UploadModelAssetResponse$ = UploadModelAssetResponse$ = {}));
function uploadModelAssetResponseToJSON(uploadModelAssetResponse) {
    return JSON.stringify(exports.UploadModelAssetResponse$outboundSchema.parse(uploadModelAssetResponse));
}
exports.uploadModelAssetResponseToJSON = uploadModelAssetResponseToJSON;
function uploadModelAssetResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UploadModelAssetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UploadModelAssetResponse' from JSON`);
}
exports.uploadModelAssetResponseFromJSON = uploadModelAssetResponseFromJSON;
//# sourceMappingURL=uploadmodelasset.js.map