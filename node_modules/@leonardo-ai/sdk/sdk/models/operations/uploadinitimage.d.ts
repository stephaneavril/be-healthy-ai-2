import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Query parameters provided in the request body as a JSON object
 */
export type UploadInitImageRequestBody = {
    /**
     * Has to be png, jpg, jpeg, or webp.
     */
    extension: string;
};
export type InitImageUploadOutput = {
    fields?: string | null | undefined;
    id?: string | null | undefined;
    key?: string | null | undefined;
    url?: string | null | undefined;
};
/**
 * Responses for POST /init-image
 */
export type UploadInitImageResponseBody = {
    uploadInitImage?: InitImageUploadOutput | null | undefined;
};
export type UploadInitImageResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /init-image
     */
    object?: UploadInitImageResponseBody | undefined;
};
/** @internal */
export declare const UploadInitImageRequestBody$inboundSchema: z.ZodType<UploadInitImageRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadInitImageRequestBody$Outbound = {
    extension: string;
};
/** @internal */
export declare const UploadInitImageRequestBody$outboundSchema: z.ZodType<UploadInitImageRequestBody$Outbound, z.ZodTypeDef, UploadInitImageRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadInitImageRequestBody$ {
    /** @deprecated use `UploadInitImageRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadInitImageRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadInitImageRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadInitImageRequestBody$Outbound, z.ZodTypeDef, UploadInitImageRequestBody>;
    /** @deprecated use `UploadInitImageRequestBody$Outbound` instead. */
    type Outbound = UploadInitImageRequestBody$Outbound;
}
export declare function uploadInitImageRequestBodyToJSON(uploadInitImageRequestBody: UploadInitImageRequestBody): string;
export declare function uploadInitImageRequestBodyFromJSON(jsonString: string): SafeParseResult<UploadInitImageRequestBody, SDKValidationError>;
/** @internal */
export declare const InitImageUploadOutput$inboundSchema: z.ZodType<InitImageUploadOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type InitImageUploadOutput$Outbound = {
    fields?: string | null | undefined;
    id?: string | null | undefined;
    key?: string | null | undefined;
    url?: string | null | undefined;
};
/** @internal */
export declare const InitImageUploadOutput$outboundSchema: z.ZodType<InitImageUploadOutput$Outbound, z.ZodTypeDef, InitImageUploadOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitImageUploadOutput$ {
    /** @deprecated use `InitImageUploadOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitImageUploadOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitImageUploadOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitImageUploadOutput$Outbound, z.ZodTypeDef, InitImageUploadOutput>;
    /** @deprecated use `InitImageUploadOutput$Outbound` instead. */
    type Outbound = InitImageUploadOutput$Outbound;
}
export declare function initImageUploadOutputToJSON(initImageUploadOutput: InitImageUploadOutput): string;
export declare function initImageUploadOutputFromJSON(jsonString: string): SafeParseResult<InitImageUploadOutput, SDKValidationError>;
/** @internal */
export declare const UploadInitImageResponseBody$inboundSchema: z.ZodType<UploadInitImageResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadInitImageResponseBody$Outbound = {
    uploadInitImage?: InitImageUploadOutput$Outbound | null | undefined;
};
/** @internal */
export declare const UploadInitImageResponseBody$outboundSchema: z.ZodType<UploadInitImageResponseBody$Outbound, z.ZodTypeDef, UploadInitImageResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadInitImageResponseBody$ {
    /** @deprecated use `UploadInitImageResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadInitImageResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadInitImageResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadInitImageResponseBody$Outbound, z.ZodTypeDef, UploadInitImageResponseBody>;
    /** @deprecated use `UploadInitImageResponseBody$Outbound` instead. */
    type Outbound = UploadInitImageResponseBody$Outbound;
}
export declare function uploadInitImageResponseBodyToJSON(uploadInitImageResponseBody: UploadInitImageResponseBody): string;
export declare function uploadInitImageResponseBodyFromJSON(jsonString: string): SafeParseResult<UploadInitImageResponseBody, SDKValidationError>;
/** @internal */
export declare const UploadInitImageResponse$inboundSchema: z.ZodType<UploadInitImageResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadInitImageResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: UploadInitImageResponseBody$Outbound | undefined;
};
/** @internal */
export declare const UploadInitImageResponse$outboundSchema: z.ZodType<UploadInitImageResponse$Outbound, z.ZodTypeDef, UploadInitImageResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadInitImageResponse$ {
    /** @deprecated use `UploadInitImageResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadInitImageResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadInitImageResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadInitImageResponse$Outbound, z.ZodTypeDef, UploadInitImageResponse>;
    /** @deprecated use `UploadInitImageResponse$Outbound` instead. */
    type Outbound = UploadInitImageResponse$Outbound;
}
export declare function uploadInitImageResponseToJSON(uploadInitImageResponse: UploadInitImageResponse): string;
export declare function uploadInitImageResponseFromJSON(jsonString: string): SafeParseResult<UploadInitImageResponse, SDKValidationError>;
//# sourceMappingURL=uploadinitimage.d.ts.map