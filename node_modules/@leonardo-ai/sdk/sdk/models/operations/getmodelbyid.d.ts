import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type GetModelByIdRequest = {
    /**
     * The ID of the custom model to return.
     */
    id: string;
};
/**
 * columns and relationships of "custom_models"
 */
export type GetModelByIdCustomModels = {
    createdAt?: string | undefined;
    description?: string | undefined;
    id?: string | null | undefined;
    instancePrompt?: string | null | undefined;
    modelHeight?: number | undefined;
    modelWidth?: number | undefined;
    name?: string | undefined;
    public?: boolean | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
     */
    sdVersion?: shared.SdVersions | undefined;
    /**
     * The status of the current task.
     */
    status?: shared.JobStatus | undefined;
    /**
     * The category the most accurately reflects the model.
     */
    type?: shared.CustomModelType | undefined;
    updatedAt?: string | undefined;
};
/**
 * Responses for GET /models/{id}
 */
export type GetModelByIdResponseBody = {
    /**
     * columns and relationships of "custom_models"
     */
    customModelsByPk?: GetModelByIdCustomModels | null | undefined;
};
export type GetModelByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /models/{id}
     */
    object?: GetModelByIdResponseBody | undefined;
};
/** @internal */
export declare const GetModelByIdRequest$inboundSchema: z.ZodType<GetModelByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetModelByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetModelByIdRequest$outboundSchema: z.ZodType<GetModelByIdRequest$Outbound, z.ZodTypeDef, GetModelByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetModelByIdRequest$ {
    /** @deprecated use `GetModelByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetModelByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetModelByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetModelByIdRequest$Outbound, z.ZodTypeDef, GetModelByIdRequest>;
    /** @deprecated use `GetModelByIdRequest$Outbound` instead. */
    type Outbound = GetModelByIdRequest$Outbound;
}
export declare function getModelByIdRequestToJSON(getModelByIdRequest: GetModelByIdRequest): string;
export declare function getModelByIdRequestFromJSON(jsonString: string): SafeParseResult<GetModelByIdRequest, SDKValidationError>;
/** @internal */
export declare const GetModelByIdCustomModels$inboundSchema: z.ZodType<GetModelByIdCustomModels, z.ZodTypeDef, unknown>;
/** @internal */
export type GetModelByIdCustomModels$Outbound = {
    createdAt?: string | undefined;
    description?: string | undefined;
    id?: string | null | undefined;
    instancePrompt?: string | null | undefined;
    modelHeight?: number | undefined;
    modelWidth?: number | undefined;
    name?: string | undefined;
    public?: boolean | undefined;
    sdVersion?: string | undefined;
    status?: string | undefined;
    type: string;
    updatedAt?: string | undefined;
};
/** @internal */
export declare const GetModelByIdCustomModels$outboundSchema: z.ZodType<GetModelByIdCustomModels$Outbound, z.ZodTypeDef, GetModelByIdCustomModels>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetModelByIdCustomModels$ {
    /** @deprecated use `GetModelByIdCustomModels$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetModelByIdCustomModels, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetModelByIdCustomModels$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetModelByIdCustomModels$Outbound, z.ZodTypeDef, GetModelByIdCustomModels>;
    /** @deprecated use `GetModelByIdCustomModels$Outbound` instead. */
    type Outbound = GetModelByIdCustomModels$Outbound;
}
export declare function getModelByIdCustomModelsToJSON(getModelByIdCustomModels: GetModelByIdCustomModels): string;
export declare function getModelByIdCustomModelsFromJSON(jsonString: string): SafeParseResult<GetModelByIdCustomModels, SDKValidationError>;
/** @internal */
export declare const GetModelByIdResponseBody$inboundSchema: z.ZodType<GetModelByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetModelByIdResponseBody$Outbound = {
    custom_models_by_pk?: GetModelByIdCustomModels$Outbound | null | undefined;
};
/** @internal */
export declare const GetModelByIdResponseBody$outboundSchema: z.ZodType<GetModelByIdResponseBody$Outbound, z.ZodTypeDef, GetModelByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetModelByIdResponseBody$ {
    /** @deprecated use `GetModelByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetModelByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetModelByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetModelByIdResponseBody$Outbound, z.ZodTypeDef, GetModelByIdResponseBody>;
    /** @deprecated use `GetModelByIdResponseBody$Outbound` instead. */
    type Outbound = GetModelByIdResponseBody$Outbound;
}
export declare function getModelByIdResponseBodyToJSON(getModelByIdResponseBody: GetModelByIdResponseBody): string;
export declare function getModelByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<GetModelByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const GetModelByIdResponse$inboundSchema: z.ZodType<GetModelByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetModelByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: GetModelByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const GetModelByIdResponse$outboundSchema: z.ZodType<GetModelByIdResponse$Outbound, z.ZodTypeDef, GetModelByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetModelByIdResponse$ {
    /** @deprecated use `GetModelByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetModelByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetModelByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetModelByIdResponse$Outbound, z.ZodTypeDef, GetModelByIdResponse>;
    /** @deprecated use `GetModelByIdResponse$Outbound` instead. */
    type Outbound = GetModelByIdResponse$Outbound;
}
export declare function getModelByIdResponseToJSON(getModelByIdResponse: GetModelByIdResponse): string;
export declare function getModelByIdResponseFromJSON(jsonString: string): SafeParseResult<GetModelByIdResponse, SDKValidationError>;
//# sourceMappingURL=getmodelbyid.d.ts.map