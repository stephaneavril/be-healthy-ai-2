"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptImproveResponseFromJSON = exports.promptImproveResponseToJSON = exports.PromptImproveResponse$ = exports.PromptImproveResponse$outboundSchema = exports.PromptImproveResponse$inboundSchema = exports.promptImproveResponseBodyFromJSON = exports.promptImproveResponseBodyToJSON = exports.PromptImproveResponseBody$ = exports.PromptImproveResponseBody$outboundSchema = exports.PromptImproveResponseBody$inboundSchema = exports.promptGenerationOutputFromJSON = exports.promptGenerationOutputToJSON = exports.PromptGenerationOutput$ = exports.PromptGenerationOutput$outboundSchema = exports.PromptGenerationOutput$inboundSchema = exports.promptImproveRequestBodyFromJSON = exports.promptImproveRequestBodyToJSON = exports.PromptImproveRequestBody$ = exports.PromptImproveRequestBody$outboundSchema = exports.PromptImproveRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.PromptImproveRequestBody$inboundSchema = z.object({
    prompt: z.string(),
    promptInstructions: z.nullable(z.string()).optional(),
});
/** @internal */
exports.PromptImproveRequestBody$outboundSchema = z.object({
    prompt: z.string(),
    promptInstructions: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptImproveRequestBody$;
(function (PromptImproveRequestBody$) {
    /** @deprecated use `PromptImproveRequestBody$inboundSchema` instead. */
    PromptImproveRequestBody$.inboundSchema = exports.PromptImproveRequestBody$inboundSchema;
    /** @deprecated use `PromptImproveRequestBody$outboundSchema` instead. */
    PromptImproveRequestBody$.outboundSchema = exports.PromptImproveRequestBody$outboundSchema;
})(PromptImproveRequestBody$ || (exports.PromptImproveRequestBody$ = PromptImproveRequestBody$ = {}));
function promptImproveRequestBodyToJSON(promptImproveRequestBody) {
    return JSON.stringify(exports.PromptImproveRequestBody$outboundSchema.parse(promptImproveRequestBody));
}
exports.promptImproveRequestBodyToJSON = promptImproveRequestBodyToJSON;
function promptImproveRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptImproveRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptImproveRequestBody' from JSON`);
}
exports.promptImproveRequestBodyFromJSON = promptImproveRequestBodyFromJSON;
/** @internal */
exports.PromptGenerationOutput$inboundSchema = z.object({
    apiCreditCost: z.number().int().default(4),
    prompt: z.string().default("The improved prompt."),
});
/** @internal */
exports.PromptGenerationOutput$outboundSchema = z.object({
    apiCreditCost: z.number().int().default(4),
    prompt: z.string().default("The improved prompt."),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptGenerationOutput$;
(function (PromptGenerationOutput$) {
    /** @deprecated use `PromptGenerationOutput$inboundSchema` instead. */
    PromptGenerationOutput$.inboundSchema = exports.PromptGenerationOutput$inboundSchema;
    /** @deprecated use `PromptGenerationOutput$outboundSchema` instead. */
    PromptGenerationOutput$.outboundSchema = exports.PromptGenerationOutput$outboundSchema;
})(PromptGenerationOutput$ || (exports.PromptGenerationOutput$ = PromptGenerationOutput$ = {}));
function promptGenerationOutputToJSON(promptGenerationOutput) {
    return JSON.stringify(exports.PromptGenerationOutput$outboundSchema.parse(promptGenerationOutput));
}
exports.promptGenerationOutputToJSON = promptGenerationOutputToJSON;
function promptGenerationOutputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptGenerationOutput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptGenerationOutput' from JSON`);
}
exports.promptGenerationOutputFromJSON = promptGenerationOutputFromJSON;
/** @internal */
exports.PromptImproveResponseBody$inboundSchema = z.object({
    promptGeneration: z.lazy(() => exports.PromptGenerationOutput$inboundSchema)
        .optional(),
});
/** @internal */
exports.PromptImproveResponseBody$outboundSchema = z.object({
    promptGeneration: z.lazy(() => exports.PromptGenerationOutput$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptImproveResponseBody$;
(function (PromptImproveResponseBody$) {
    /** @deprecated use `PromptImproveResponseBody$inboundSchema` instead. */
    PromptImproveResponseBody$.inboundSchema = exports.PromptImproveResponseBody$inboundSchema;
    /** @deprecated use `PromptImproveResponseBody$outboundSchema` instead. */
    PromptImproveResponseBody$.outboundSchema = exports.PromptImproveResponseBody$outboundSchema;
})(PromptImproveResponseBody$ || (exports.PromptImproveResponseBody$ = PromptImproveResponseBody$ = {}));
function promptImproveResponseBodyToJSON(promptImproveResponseBody) {
    return JSON.stringify(exports.PromptImproveResponseBody$outboundSchema.parse(promptImproveResponseBody));
}
exports.promptImproveResponseBodyToJSON = promptImproveResponseBodyToJSON;
function promptImproveResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptImproveResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptImproveResponseBody' from JSON`);
}
exports.promptImproveResponseBodyFromJSON = promptImproveResponseBodyFromJSON;
/** @internal */
exports.PromptImproveResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.PromptImproveResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.PromptImproveResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.PromptImproveResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptImproveResponse$;
(function (PromptImproveResponse$) {
    /** @deprecated use `PromptImproveResponse$inboundSchema` instead. */
    PromptImproveResponse$.inboundSchema = exports.PromptImproveResponse$inboundSchema;
    /** @deprecated use `PromptImproveResponse$outboundSchema` instead. */
    PromptImproveResponse$.outboundSchema = exports.PromptImproveResponse$outboundSchema;
})(PromptImproveResponse$ || (exports.PromptImproveResponse$ = PromptImproveResponse$ = {}));
function promptImproveResponseToJSON(promptImproveResponse) {
    return JSON.stringify(exports.PromptImproveResponse$outboundSchema.parse(promptImproveResponse));
}
exports.promptImproveResponseToJSON = promptImproveResponseToJSON;
function promptImproveResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptImproveResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptImproveResponse' from JSON`);
}
exports.promptImproveResponseFromJSON = promptImproveResponseFromJSON;
//# sourceMappingURL=promptimprove.js.map