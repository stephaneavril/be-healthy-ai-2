"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteElementByIdResponseFromJSON = exports.deleteElementByIdResponseToJSON = exports.DeleteElementByIdResponse$ = exports.DeleteElementByIdResponse$outboundSchema = exports.DeleteElementByIdResponse$inboundSchema = exports.deleteElementByIdResponseBodyFromJSON = exports.deleteElementByIdResponseBodyToJSON = exports.DeleteElementByIdResponseBody$ = exports.DeleteElementByIdResponseBody$outboundSchema = exports.DeleteElementByIdResponseBody$inboundSchema = exports.userLorasFromJSON = exports.userLorasToJSON = exports.UserLoras$ = exports.UserLoras$outboundSchema = exports.UserLoras$inboundSchema = exports.deleteElementByIdRequestFromJSON = exports.deleteElementByIdRequestToJSON = exports.DeleteElementByIdRequest$ = exports.DeleteElementByIdRequest$outboundSchema = exports.DeleteElementByIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.DeleteElementByIdRequest$inboundSchema = z.object({
    id: z.number().int(),
});
/** @internal */
exports.DeleteElementByIdRequest$outboundSchema = z.object({
    id: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteElementByIdRequest$;
(function (DeleteElementByIdRequest$) {
    /** @deprecated use `DeleteElementByIdRequest$inboundSchema` instead. */
    DeleteElementByIdRequest$.inboundSchema = exports.DeleteElementByIdRequest$inboundSchema;
    /** @deprecated use `DeleteElementByIdRequest$outboundSchema` instead. */
    DeleteElementByIdRequest$.outboundSchema = exports.DeleteElementByIdRequest$outboundSchema;
})(DeleteElementByIdRequest$ || (exports.DeleteElementByIdRequest$ = DeleteElementByIdRequest$ = {}));
function deleteElementByIdRequestToJSON(deleteElementByIdRequest) {
    return JSON.stringify(exports.DeleteElementByIdRequest$outboundSchema.parse(deleteElementByIdRequest));
}
exports.deleteElementByIdRequestToJSON = deleteElementByIdRequestToJSON;
function deleteElementByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteElementByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteElementByIdRequest' from JSON`);
}
exports.deleteElementByIdRequestFromJSON = deleteElementByIdRequestFromJSON;
/** @internal */
exports.UserLoras$inboundSchema = z.object({
    id: z.number().int().optional(),
});
/** @internal */
exports.UserLoras$outboundSchema = z.object({
    id: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UserLoras$;
(function (UserLoras$) {
    /** @deprecated use `UserLoras$inboundSchema` instead. */
    UserLoras$.inboundSchema = exports.UserLoras$inboundSchema;
    /** @deprecated use `UserLoras$outboundSchema` instead. */
    UserLoras$.outboundSchema = exports.UserLoras$outboundSchema;
})(UserLoras$ || (exports.UserLoras$ = UserLoras$ = {}));
function userLorasToJSON(userLoras) {
    return JSON.stringify(exports.UserLoras$outboundSchema.parse(userLoras));
}
exports.userLorasToJSON = userLorasToJSON;
function userLorasFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UserLoras$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UserLoras' from JSON`);
}
exports.userLorasFromJSON = userLorasFromJSON;
/** @internal */
exports.DeleteElementByIdResponseBody$inboundSchema = z.object({
    delete_user_loras_by_pk: z.nullable(z.lazy(() => exports.UserLoras$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "delete_user_loras_by_pk": "deleteUserLorasByPk",
    });
});
/** @internal */
exports.DeleteElementByIdResponseBody$outboundSchema = z.object({
    deleteUserLorasByPk: z.nullable(z.lazy(() => exports.UserLoras$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        deleteUserLorasByPk: "delete_user_loras_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteElementByIdResponseBody$;
(function (DeleteElementByIdResponseBody$) {
    /** @deprecated use `DeleteElementByIdResponseBody$inboundSchema` instead. */
    DeleteElementByIdResponseBody$.inboundSchema = exports.DeleteElementByIdResponseBody$inboundSchema;
    /** @deprecated use `DeleteElementByIdResponseBody$outboundSchema` instead. */
    DeleteElementByIdResponseBody$.outboundSchema = exports.DeleteElementByIdResponseBody$outboundSchema;
})(DeleteElementByIdResponseBody$ || (exports.DeleteElementByIdResponseBody$ = DeleteElementByIdResponseBody$ = {}));
function deleteElementByIdResponseBodyToJSON(deleteElementByIdResponseBody) {
    return JSON.stringify(exports.DeleteElementByIdResponseBody$outboundSchema.parse(deleteElementByIdResponseBody));
}
exports.deleteElementByIdResponseBodyToJSON = deleteElementByIdResponseBodyToJSON;
function deleteElementByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteElementByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteElementByIdResponseBody' from JSON`);
}
exports.deleteElementByIdResponseBodyFromJSON = deleteElementByIdResponseBodyFromJSON;
/** @internal */
exports.DeleteElementByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.DeleteElementByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.DeleteElementByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.DeleteElementByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteElementByIdResponse$;
(function (DeleteElementByIdResponse$) {
    /** @deprecated use `DeleteElementByIdResponse$inboundSchema` instead. */
    DeleteElementByIdResponse$.inboundSchema = exports.DeleteElementByIdResponse$inboundSchema;
    /** @deprecated use `DeleteElementByIdResponse$outboundSchema` instead. */
    DeleteElementByIdResponse$.outboundSchema = exports.DeleteElementByIdResponse$outboundSchema;
})(DeleteElementByIdResponse$ || (exports.DeleteElementByIdResponse$ = DeleteElementByIdResponse$ = {}));
function deleteElementByIdResponseToJSON(deleteElementByIdResponse) {
    return JSON.stringify(exports.DeleteElementByIdResponse$outboundSchema.parse(deleteElementByIdResponse));
}
exports.deleteElementByIdResponseToJSON = deleteElementByIdResponseToJSON;
function deleteElementByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteElementByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteElementByIdResponse' from JSON`);
}
exports.deleteElementByIdResponseFromJSON = deleteElementByIdResponseFromJSON;
//# sourceMappingURL=deleteelementbyid.js.map