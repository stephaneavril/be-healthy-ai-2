"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.delete3DModelByIdResponseFromJSON = exports.delete3DModelByIdResponseToJSON = exports.Delete3DModelByIdResponse$ = exports.Delete3DModelByIdResponse$outboundSchema = exports.Delete3DModelByIdResponse$inboundSchema = exports.delete3DModelByIdResponseBodyFromJSON = exports.delete3DModelByIdResponseBodyToJSON = exports.Delete3DModelByIdResponseBody$ = exports.Delete3DModelByIdResponseBody$outboundSchema = exports.Delete3DModelByIdResponseBody$inboundSchema = exports.modelAssetsFromJSON = exports.modelAssetsToJSON = exports.ModelAssets$ = exports.ModelAssets$outboundSchema = exports.ModelAssets$inboundSchema = exports.delete3DModelByIdRequestFromJSON = exports.delete3DModelByIdRequestToJSON = exports.Delete3DModelByIdRequest$ = exports.Delete3DModelByIdRequest$outboundSchema = exports.Delete3DModelByIdRequest$inboundSchema = exports.delete3DModelByIdRequestBodyFromJSON = exports.delete3DModelByIdRequestBodyToJSON = exports.Delete3DModelByIdRequestBody$ = exports.Delete3DModelByIdRequestBody$outboundSchema = exports.Delete3DModelByIdRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.Delete3DModelByIdRequestBody$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.Delete3DModelByIdRequestBody$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Delete3DModelByIdRequestBody$;
(function (Delete3DModelByIdRequestBody$) {
    /** @deprecated use `Delete3DModelByIdRequestBody$inboundSchema` instead. */
    Delete3DModelByIdRequestBody$.inboundSchema = exports.Delete3DModelByIdRequestBody$inboundSchema;
    /** @deprecated use `Delete3DModelByIdRequestBody$outboundSchema` instead. */
    Delete3DModelByIdRequestBody$.outboundSchema = exports.Delete3DModelByIdRequestBody$outboundSchema;
})(Delete3DModelByIdRequestBody$ || (exports.Delete3DModelByIdRequestBody$ = Delete3DModelByIdRequestBody$ = {}));
function delete3DModelByIdRequestBodyToJSON(delete3DModelByIdRequestBody) {
    return JSON.stringify(exports.Delete3DModelByIdRequestBody$outboundSchema.parse(delete3DModelByIdRequestBody));
}
exports.delete3DModelByIdRequestBodyToJSON = delete3DModelByIdRequestBodyToJSON;
function delete3DModelByIdRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Delete3DModelByIdRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Delete3DModelByIdRequestBody' from JSON`);
}
exports.delete3DModelByIdRequestBodyFromJSON = delete3DModelByIdRequestBodyFromJSON;
/** @internal */
exports.Delete3DModelByIdRequest$inboundSchema = z.object({
    RequestBody: z.lazy(() => exports.Delete3DModelByIdRequestBody$inboundSchema)
        .optional(),
    id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
exports.Delete3DModelByIdRequest$outboundSchema = z.object({
    requestBody: z.lazy(() => exports.Delete3DModelByIdRequestBody$outboundSchema)
        .optional(),
    id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Delete3DModelByIdRequest$;
(function (Delete3DModelByIdRequest$) {
    /** @deprecated use `Delete3DModelByIdRequest$inboundSchema` instead. */
    Delete3DModelByIdRequest$.inboundSchema = exports.Delete3DModelByIdRequest$inboundSchema;
    /** @deprecated use `Delete3DModelByIdRequest$outboundSchema` instead. */
    Delete3DModelByIdRequest$.outboundSchema = exports.Delete3DModelByIdRequest$outboundSchema;
})(Delete3DModelByIdRequest$ || (exports.Delete3DModelByIdRequest$ = Delete3DModelByIdRequest$ = {}));
function delete3DModelByIdRequestToJSON(delete3DModelByIdRequest) {
    return JSON.stringify(exports.Delete3DModelByIdRequest$outboundSchema.parse(delete3DModelByIdRequest));
}
exports.delete3DModelByIdRequestToJSON = delete3DModelByIdRequestToJSON;
function delete3DModelByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Delete3DModelByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Delete3DModelByIdRequest' from JSON`);
}
exports.delete3DModelByIdRequestFromJSON = delete3DModelByIdRequestFromJSON;
/** @internal */
exports.ModelAssets$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.ModelAssets$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ModelAssets$;
(function (ModelAssets$) {
    /** @deprecated use `ModelAssets$inboundSchema` instead. */
    ModelAssets$.inboundSchema = exports.ModelAssets$inboundSchema;
    /** @deprecated use `ModelAssets$outboundSchema` instead. */
    ModelAssets$.outboundSchema = exports.ModelAssets$outboundSchema;
})(ModelAssets$ || (exports.ModelAssets$ = ModelAssets$ = {}));
function modelAssetsToJSON(modelAssets) {
    return JSON.stringify(exports.ModelAssets$outboundSchema.parse(modelAssets));
}
exports.modelAssetsToJSON = modelAssetsToJSON;
function modelAssetsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ModelAssets$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ModelAssets' from JSON`);
}
exports.modelAssetsFromJSON = modelAssetsFromJSON;
/** @internal */
exports.Delete3DModelByIdResponseBody$inboundSchema = z.object({
    delete_model_assets_by_pk: z.nullable(z.lazy(() => exports.ModelAssets$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "delete_model_assets_by_pk": "deleteModelAssetsByPk",
    });
});
/** @internal */
exports.Delete3DModelByIdResponseBody$outboundSchema = z.object({
    deleteModelAssetsByPk: z.nullable(z.lazy(() => exports.ModelAssets$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        deleteModelAssetsByPk: "delete_model_assets_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Delete3DModelByIdResponseBody$;
(function (Delete3DModelByIdResponseBody$) {
    /** @deprecated use `Delete3DModelByIdResponseBody$inboundSchema` instead. */
    Delete3DModelByIdResponseBody$.inboundSchema = exports.Delete3DModelByIdResponseBody$inboundSchema;
    /** @deprecated use `Delete3DModelByIdResponseBody$outboundSchema` instead. */
    Delete3DModelByIdResponseBody$.outboundSchema = exports.Delete3DModelByIdResponseBody$outboundSchema;
})(Delete3DModelByIdResponseBody$ || (exports.Delete3DModelByIdResponseBody$ = Delete3DModelByIdResponseBody$ = {}));
function delete3DModelByIdResponseBodyToJSON(delete3DModelByIdResponseBody) {
    return JSON.stringify(exports.Delete3DModelByIdResponseBody$outboundSchema.parse(delete3DModelByIdResponseBody));
}
exports.delete3DModelByIdResponseBodyToJSON = delete3DModelByIdResponseBodyToJSON;
function delete3DModelByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Delete3DModelByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Delete3DModelByIdResponseBody' from JSON`);
}
exports.delete3DModelByIdResponseBodyFromJSON = delete3DModelByIdResponseBodyFromJSON;
/** @internal */
exports.Delete3DModelByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.Delete3DModelByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.Delete3DModelByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.Delete3DModelByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Delete3DModelByIdResponse$;
(function (Delete3DModelByIdResponse$) {
    /** @deprecated use `Delete3DModelByIdResponse$inboundSchema` instead. */
    Delete3DModelByIdResponse$.inboundSchema = exports.Delete3DModelByIdResponse$inboundSchema;
    /** @deprecated use `Delete3DModelByIdResponse$outboundSchema` instead. */
    Delete3DModelByIdResponse$.outboundSchema = exports.Delete3DModelByIdResponse$outboundSchema;
})(Delete3DModelByIdResponse$ || (exports.Delete3DModelByIdResponse$ = Delete3DModelByIdResponse$ = {}));
function delete3DModelByIdResponseToJSON(delete3DModelByIdResponse) {
    return JSON.stringify(exports.Delete3DModelByIdResponse$outboundSchema.parse(delete3DModelByIdResponse));
}
exports.delete3DModelByIdResponseToJSON = delete3DModelByIdResponseToJSON;
function delete3DModelByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Delete3DModelByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Delete3DModelByIdResponse' from JSON`);
}
exports.delete3DModelByIdResponseFromJSON = delete3DModelByIdResponseFromJSON;
//# sourceMappingURL=delete3dmodelbyid.js.map