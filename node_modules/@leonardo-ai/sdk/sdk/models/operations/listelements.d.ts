import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * columns and relationships of "elements".
 */
export type Loras = {
    /**
     * Unique identifier for the element. Elements can be found from the List Elements endpoint.
     */
    akUUID?: string | null | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
     */
    baseModel?: shared.SdVersions | undefined;
    /**
     * Name of the creator of the element
     */
    creatorName?: string | null | undefined;
    /**
     * Description for the element
     */
    description?: string | null | undefined;
    /**
     * Name of the element
     */
    name?: string | null | undefined;
    /**
     * URL of the element image
     */
    urlImage?: string | null | undefined;
    /**
     * Default weight for the element
     */
    weightDefault?: number | null | undefined;
    /**
     * Maximum weight for the element
     */
    weightMax?: number | null | undefined;
    /**
     * Minimum weight for the element
     */
    weightMin?: number | null | undefined;
};
/**
 * Responses for GET /api/rest/v1/elements.
 */
export type ListElementsResponseBody = {
    loras?: Array<Loras> | undefined;
};
export type ListElementsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /api/rest/v1/elements.
     */
    object?: ListElementsResponseBody | undefined;
};
/** @internal */
export declare const Loras$inboundSchema: z.ZodType<Loras, z.ZodTypeDef, unknown>;
/** @internal */
export type Loras$Outbound = {
    akUUID?: string | null | undefined;
    baseModel?: string | undefined;
    creatorName?: string | null | undefined;
    description?: string | null | undefined;
    name?: string | null | undefined;
    urlImage?: string | null | undefined;
    weightDefault?: number | null | undefined;
    weightMax?: number | null | undefined;
    weightMin?: number | null | undefined;
};
/** @internal */
export declare const Loras$outboundSchema: z.ZodType<Loras$Outbound, z.ZodTypeDef, Loras>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Loras$ {
    /** @deprecated use `Loras$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Loras, z.ZodTypeDef, unknown>;
    /** @deprecated use `Loras$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Loras$Outbound, z.ZodTypeDef, Loras>;
    /** @deprecated use `Loras$Outbound` instead. */
    type Outbound = Loras$Outbound;
}
export declare function lorasToJSON(loras: Loras): string;
export declare function lorasFromJSON(jsonString: string): SafeParseResult<Loras, SDKValidationError>;
/** @internal */
export declare const ListElementsResponseBody$inboundSchema: z.ZodType<ListElementsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ListElementsResponseBody$Outbound = {
    loras?: Array<Loras$Outbound> | undefined;
};
/** @internal */
export declare const ListElementsResponseBody$outboundSchema: z.ZodType<ListElementsResponseBody$Outbound, z.ZodTypeDef, ListElementsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListElementsResponseBody$ {
    /** @deprecated use `ListElementsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListElementsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListElementsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListElementsResponseBody$Outbound, z.ZodTypeDef, ListElementsResponseBody>;
    /** @deprecated use `ListElementsResponseBody$Outbound` instead. */
    type Outbound = ListElementsResponseBody$Outbound;
}
export declare function listElementsResponseBodyToJSON(listElementsResponseBody: ListElementsResponseBody): string;
export declare function listElementsResponseBodyFromJSON(jsonString: string): SafeParseResult<ListElementsResponseBody, SDKValidationError>;
/** @internal */
export declare const ListElementsResponse$inboundSchema: z.ZodType<ListElementsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ListElementsResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: ListElementsResponseBody$Outbound | undefined;
};
/** @internal */
export declare const ListElementsResponse$outboundSchema: z.ZodType<ListElementsResponse$Outbound, z.ZodTypeDef, ListElementsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListElementsResponse$ {
    /** @deprecated use `ListElementsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListElementsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListElementsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListElementsResponse$Outbound, z.ZodTypeDef, ListElementsResponse>;
    /** @deprecated use `ListElementsResponse$Outbound` instead. */
    type Outbound = ListElementsResponse$Outbound;
}
export declare function listElementsResponseToJSON(listElementsResponse: ListElementsResponse): string;
export declare function listElementsResponseFromJSON(jsonString: string): SafeParseResult<ListElementsResponse, SDKValidationError>;
//# sourceMappingURL=listelements.d.ts.map