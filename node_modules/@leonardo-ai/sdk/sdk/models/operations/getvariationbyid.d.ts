import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type GetVariationByIdRequest = {
    /**
     * "id" is required
     */
    id: string;
};
/**
 * columns and relationships of "generated_image_variation_generic"
 */
export type GeneratedImageVariationGeneric = {
    createdAt?: string | undefined;
    id?: string | null | undefined;
    /**
     * The status of the current task.
     */
    status?: shared.JobStatus | undefined;
    /**
     * The type of variation.
     */
    transformType?: shared.VariationType | undefined;
    url?: string | null | undefined;
};
/**
 * Responses for GET /variations/{id}
 */
export type GetVariationByIdResponseBody = {
    generatedImageVariationGeneric?: Array<GeneratedImageVariationGeneric> | undefined;
};
export type GetVariationByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /variations/{id}
     */
    object?: GetVariationByIdResponseBody | undefined;
};
/** @internal */
export declare const GetVariationByIdRequest$inboundSchema: z.ZodType<GetVariationByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetVariationByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetVariationByIdRequest$outboundSchema: z.ZodType<GetVariationByIdRequest$Outbound, z.ZodTypeDef, GetVariationByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetVariationByIdRequest$ {
    /** @deprecated use `GetVariationByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetVariationByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetVariationByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetVariationByIdRequest$Outbound, z.ZodTypeDef, GetVariationByIdRequest>;
    /** @deprecated use `GetVariationByIdRequest$Outbound` instead. */
    type Outbound = GetVariationByIdRequest$Outbound;
}
export declare function getVariationByIdRequestToJSON(getVariationByIdRequest: GetVariationByIdRequest): string;
export declare function getVariationByIdRequestFromJSON(jsonString: string): SafeParseResult<GetVariationByIdRequest, SDKValidationError>;
/** @internal */
export declare const GeneratedImageVariationGeneric$inboundSchema: z.ZodType<GeneratedImageVariationGeneric, z.ZodTypeDef, unknown>;
/** @internal */
export type GeneratedImageVariationGeneric$Outbound = {
    createdAt?: string | undefined;
    id?: string | null | undefined;
    status?: string | undefined;
    transformType?: string | undefined;
    url?: string | null | undefined;
};
/** @internal */
export declare const GeneratedImageVariationGeneric$outboundSchema: z.ZodType<GeneratedImageVariationGeneric$Outbound, z.ZodTypeDef, GeneratedImageVariationGeneric>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GeneratedImageVariationGeneric$ {
    /** @deprecated use `GeneratedImageVariationGeneric$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GeneratedImageVariationGeneric, z.ZodTypeDef, unknown>;
    /** @deprecated use `GeneratedImageVariationGeneric$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GeneratedImageVariationGeneric$Outbound, z.ZodTypeDef, GeneratedImageVariationGeneric>;
    /** @deprecated use `GeneratedImageVariationGeneric$Outbound` instead. */
    type Outbound = GeneratedImageVariationGeneric$Outbound;
}
export declare function generatedImageVariationGenericToJSON(generatedImageVariationGeneric: GeneratedImageVariationGeneric): string;
export declare function generatedImageVariationGenericFromJSON(jsonString: string): SafeParseResult<GeneratedImageVariationGeneric, SDKValidationError>;
/** @internal */
export declare const GetVariationByIdResponseBody$inboundSchema: z.ZodType<GetVariationByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetVariationByIdResponseBody$Outbound = {
    generated_image_variation_generic?: Array<GeneratedImageVariationGeneric$Outbound> | undefined;
};
/** @internal */
export declare const GetVariationByIdResponseBody$outboundSchema: z.ZodType<GetVariationByIdResponseBody$Outbound, z.ZodTypeDef, GetVariationByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetVariationByIdResponseBody$ {
    /** @deprecated use `GetVariationByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetVariationByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetVariationByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetVariationByIdResponseBody$Outbound, z.ZodTypeDef, GetVariationByIdResponseBody>;
    /** @deprecated use `GetVariationByIdResponseBody$Outbound` instead. */
    type Outbound = GetVariationByIdResponseBody$Outbound;
}
export declare function getVariationByIdResponseBodyToJSON(getVariationByIdResponseBody: GetVariationByIdResponseBody): string;
export declare function getVariationByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<GetVariationByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const GetVariationByIdResponse$inboundSchema: z.ZodType<GetVariationByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetVariationByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: GetVariationByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const GetVariationByIdResponse$outboundSchema: z.ZodType<GetVariationByIdResponse$Outbound, z.ZodTypeDef, GetVariationByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetVariationByIdResponse$ {
    /** @deprecated use `GetVariationByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetVariationByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetVariationByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetVariationByIdResponse$Outbound, z.ZodTypeDef, GetVariationByIdResponse>;
    /** @deprecated use `GetVariationByIdResponse$Outbound` instead. */
    type Outbound = GetVariationByIdResponse$Outbound;
}
export declare function getVariationByIdResponseToJSON(getVariationByIdResponse: GetVariationByIdResponse): string;
export declare function getVariationByIdResponseFromJSON(jsonString: string): SafeParseResult<GetVariationByIdResponse, SDKValidationError>;
//# sourceMappingURL=getvariationbyid.d.ts.map