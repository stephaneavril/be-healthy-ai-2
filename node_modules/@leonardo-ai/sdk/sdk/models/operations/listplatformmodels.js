"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listPlatformModelsResponseFromJSON = exports.listPlatformModelsResponseToJSON = exports.ListPlatformModelsResponse$ = exports.ListPlatformModelsResponse$outboundSchema = exports.ListPlatformModelsResponse$inboundSchema = exports.listPlatformModelsResponseBodyFromJSON = exports.listPlatformModelsResponseBodyToJSON = exports.ListPlatformModelsResponseBody$ = exports.ListPlatformModelsResponseBody$outboundSchema = exports.ListPlatformModelsResponseBody$inboundSchema = exports.listPlatformModelsCustomModelsFromJSON = exports.listPlatformModelsCustomModelsToJSON = exports.ListPlatformModelsCustomModels$ = exports.ListPlatformModelsCustomModels$outboundSchema = exports.ListPlatformModelsCustomModels$inboundSchema = exports.listPlatformModelsGeneratedImagesFromJSON = exports.listPlatformModelsGeneratedImagesToJSON = exports.ListPlatformModelsGeneratedImages$ = exports.ListPlatformModelsGeneratedImages$outboundSchema = exports.ListPlatformModelsGeneratedImages$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.ListPlatformModelsGeneratedImages$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    url: z.string().optional(),
});
/** @internal */
exports.ListPlatformModelsGeneratedImages$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    url: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListPlatformModelsGeneratedImages$;
(function (ListPlatformModelsGeneratedImages$) {
    /** @deprecated use `ListPlatformModelsGeneratedImages$inboundSchema` instead. */
    ListPlatformModelsGeneratedImages$.inboundSchema = exports.ListPlatformModelsGeneratedImages$inboundSchema;
    /** @deprecated use `ListPlatformModelsGeneratedImages$outboundSchema` instead. */
    ListPlatformModelsGeneratedImages$.outboundSchema = exports.ListPlatformModelsGeneratedImages$outboundSchema;
})(ListPlatformModelsGeneratedImages$ || (exports.ListPlatformModelsGeneratedImages$ = ListPlatformModelsGeneratedImages$ = {}));
function listPlatformModelsGeneratedImagesToJSON(listPlatformModelsGeneratedImages) {
    return JSON.stringify(exports.ListPlatformModelsGeneratedImages$outboundSchema.parse(listPlatformModelsGeneratedImages));
}
exports.listPlatformModelsGeneratedImagesToJSON = listPlatformModelsGeneratedImagesToJSON;
function listPlatformModelsGeneratedImagesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListPlatformModelsGeneratedImages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPlatformModelsGeneratedImages' from JSON`);
}
exports.listPlatformModelsGeneratedImagesFromJSON = listPlatformModelsGeneratedImagesFromJSON;
/** @internal */
exports.ListPlatformModelsCustomModels$inboundSchema = z.object({
    description: z.string().optional(),
    featured: z.boolean().optional(),
    generated_image: z.nullable(z.lazy(() => exports.ListPlatformModelsGeneratedImages$inboundSchema)).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.string().optional(),
    nsfw: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "generated_image": "generatedImage",
    });
});
/** @internal */
exports.ListPlatformModelsCustomModels$outboundSchema = z.object({
    description: z.string().optional(),
    featured: z.boolean().optional(),
    generatedImage: z.nullable(z.lazy(() => exports.ListPlatformModelsGeneratedImages$outboundSchema)).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.string().optional(),
    nsfw: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        generatedImage: "generated_image",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListPlatformModelsCustomModels$;
(function (ListPlatformModelsCustomModels$) {
    /** @deprecated use `ListPlatformModelsCustomModels$inboundSchema` instead. */
    ListPlatformModelsCustomModels$.inboundSchema = exports.ListPlatformModelsCustomModels$inboundSchema;
    /** @deprecated use `ListPlatformModelsCustomModels$outboundSchema` instead. */
    ListPlatformModelsCustomModels$.outboundSchema = exports.ListPlatformModelsCustomModels$outboundSchema;
})(ListPlatformModelsCustomModels$ || (exports.ListPlatformModelsCustomModels$ = ListPlatformModelsCustomModels$ = {}));
function listPlatformModelsCustomModelsToJSON(listPlatformModelsCustomModels) {
    return JSON.stringify(exports.ListPlatformModelsCustomModels$outboundSchema.parse(listPlatformModelsCustomModels));
}
exports.listPlatformModelsCustomModelsToJSON = listPlatformModelsCustomModelsToJSON;
function listPlatformModelsCustomModelsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListPlatformModelsCustomModels$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPlatformModelsCustomModels' from JSON`);
}
exports.listPlatformModelsCustomModelsFromJSON = listPlatformModelsCustomModelsFromJSON;
/** @internal */
exports.ListPlatformModelsResponseBody$inboundSchema = z.object({
    custom_models: z.array(z.lazy(() => exports.ListPlatformModelsCustomModels$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "custom_models": "customModels",
    });
});
/** @internal */
exports.ListPlatformModelsResponseBody$outboundSchema = z.object({
    customModels: z.array(z.lazy(() => exports.ListPlatformModelsCustomModels$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customModels: "custom_models",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListPlatformModelsResponseBody$;
(function (ListPlatformModelsResponseBody$) {
    /** @deprecated use `ListPlatformModelsResponseBody$inboundSchema` instead. */
    ListPlatformModelsResponseBody$.inboundSchema = exports.ListPlatformModelsResponseBody$inboundSchema;
    /** @deprecated use `ListPlatformModelsResponseBody$outboundSchema` instead. */
    ListPlatformModelsResponseBody$.outboundSchema = exports.ListPlatformModelsResponseBody$outboundSchema;
})(ListPlatformModelsResponseBody$ || (exports.ListPlatformModelsResponseBody$ = ListPlatformModelsResponseBody$ = {}));
function listPlatformModelsResponseBodyToJSON(listPlatformModelsResponseBody) {
    return JSON.stringify(exports.ListPlatformModelsResponseBody$outboundSchema.parse(listPlatformModelsResponseBody));
}
exports.listPlatformModelsResponseBodyToJSON = listPlatformModelsResponseBodyToJSON;
function listPlatformModelsResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListPlatformModelsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPlatformModelsResponseBody' from JSON`);
}
exports.listPlatformModelsResponseBodyFromJSON = listPlatformModelsResponseBodyFromJSON;
/** @internal */
exports.ListPlatformModelsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.ListPlatformModelsResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.ListPlatformModelsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.ListPlatformModelsResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListPlatformModelsResponse$;
(function (ListPlatformModelsResponse$) {
    /** @deprecated use `ListPlatformModelsResponse$inboundSchema` instead. */
    ListPlatformModelsResponse$.inboundSchema = exports.ListPlatformModelsResponse$inboundSchema;
    /** @deprecated use `ListPlatformModelsResponse$outboundSchema` instead. */
    ListPlatformModelsResponse$.outboundSchema = exports.ListPlatformModelsResponse$outboundSchema;
})(ListPlatformModelsResponse$ || (exports.ListPlatformModelsResponse$ = ListPlatformModelsResponse$ = {}));
function listPlatformModelsResponseToJSON(listPlatformModelsResponse) {
    return JSON.stringify(exports.ListPlatformModelsResponse$outboundSchema.parse(listPlatformModelsResponse));
}
exports.listPlatformModelsResponseToJSON = listPlatformModelsResponseToJSON;
function listPlatformModelsResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListPlatformModelsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPlatformModelsResponse' from JSON`);
}
exports.listPlatformModelsResponseFromJSON = listPlatformModelsResponseFromJSON;
//# sourceMappingURL=listplatformmodels.js.map