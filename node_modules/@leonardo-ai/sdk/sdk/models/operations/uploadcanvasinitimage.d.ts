import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Query parameters provided in the request body as a JSON object
 */
export type UploadCanvasInitImageRequestBody = {
    /**
     * Has to be png, jpg, jpeg, or webp.
     */
    initExtension: string;
    /**
     * Has to be png, jpg, jpeg, or webp.
     */
    maskExtension: string;
};
export type CanvasInitImageUploadOutput = {
    initFields?: string | null | undefined;
    initImageId?: string | null | undefined;
    initKey?: string | null | undefined;
    initUrl?: string | null | undefined;
    maskFields?: string | null | undefined;
    maskImageId?: string | null | undefined;
    maskKey?: string | null | undefined;
    maskUrl?: string | null | undefined;
};
/**
 * Responses for POST /canvas-init-image
 */
export type UploadCanvasInitImageResponseBody = {
    uploadCanvasInitImage?: CanvasInitImageUploadOutput | null | undefined;
};
export type UploadCanvasInitImageResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /canvas-init-image
     */
    object?: UploadCanvasInitImageResponseBody | undefined;
};
/** @internal */
export declare const UploadCanvasInitImageRequestBody$inboundSchema: z.ZodType<UploadCanvasInitImageRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadCanvasInitImageRequestBody$Outbound = {
    initExtension: string;
    maskExtension: string;
};
/** @internal */
export declare const UploadCanvasInitImageRequestBody$outboundSchema: z.ZodType<UploadCanvasInitImageRequestBody$Outbound, z.ZodTypeDef, UploadCanvasInitImageRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadCanvasInitImageRequestBody$ {
    /** @deprecated use `UploadCanvasInitImageRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadCanvasInitImageRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadCanvasInitImageRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadCanvasInitImageRequestBody$Outbound, z.ZodTypeDef, UploadCanvasInitImageRequestBody>;
    /** @deprecated use `UploadCanvasInitImageRequestBody$Outbound` instead. */
    type Outbound = UploadCanvasInitImageRequestBody$Outbound;
}
export declare function uploadCanvasInitImageRequestBodyToJSON(uploadCanvasInitImageRequestBody: UploadCanvasInitImageRequestBody): string;
export declare function uploadCanvasInitImageRequestBodyFromJSON(jsonString: string): SafeParseResult<UploadCanvasInitImageRequestBody, SDKValidationError>;
/** @internal */
export declare const CanvasInitImageUploadOutput$inboundSchema: z.ZodType<CanvasInitImageUploadOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type CanvasInitImageUploadOutput$Outbound = {
    initFields?: string | null | undefined;
    initImageId?: string | null | undefined;
    initKey?: string | null | undefined;
    initUrl?: string | null | undefined;
    maskFields?: string | null | undefined;
    maskImageId?: string | null | undefined;
    maskKey?: string | null | undefined;
    maskUrl?: string | null | undefined;
};
/** @internal */
export declare const CanvasInitImageUploadOutput$outboundSchema: z.ZodType<CanvasInitImageUploadOutput$Outbound, z.ZodTypeDef, CanvasInitImageUploadOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CanvasInitImageUploadOutput$ {
    /** @deprecated use `CanvasInitImageUploadOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CanvasInitImageUploadOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `CanvasInitImageUploadOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CanvasInitImageUploadOutput$Outbound, z.ZodTypeDef, CanvasInitImageUploadOutput>;
    /** @deprecated use `CanvasInitImageUploadOutput$Outbound` instead. */
    type Outbound = CanvasInitImageUploadOutput$Outbound;
}
export declare function canvasInitImageUploadOutputToJSON(canvasInitImageUploadOutput: CanvasInitImageUploadOutput): string;
export declare function canvasInitImageUploadOutputFromJSON(jsonString: string): SafeParseResult<CanvasInitImageUploadOutput, SDKValidationError>;
/** @internal */
export declare const UploadCanvasInitImageResponseBody$inboundSchema: z.ZodType<UploadCanvasInitImageResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadCanvasInitImageResponseBody$Outbound = {
    uploadCanvasInitImage?: CanvasInitImageUploadOutput$Outbound | null | undefined;
};
/** @internal */
export declare const UploadCanvasInitImageResponseBody$outboundSchema: z.ZodType<UploadCanvasInitImageResponseBody$Outbound, z.ZodTypeDef, UploadCanvasInitImageResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadCanvasInitImageResponseBody$ {
    /** @deprecated use `UploadCanvasInitImageResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadCanvasInitImageResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadCanvasInitImageResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadCanvasInitImageResponseBody$Outbound, z.ZodTypeDef, UploadCanvasInitImageResponseBody>;
    /** @deprecated use `UploadCanvasInitImageResponseBody$Outbound` instead. */
    type Outbound = UploadCanvasInitImageResponseBody$Outbound;
}
export declare function uploadCanvasInitImageResponseBodyToJSON(uploadCanvasInitImageResponseBody: UploadCanvasInitImageResponseBody): string;
export declare function uploadCanvasInitImageResponseBodyFromJSON(jsonString: string): SafeParseResult<UploadCanvasInitImageResponseBody, SDKValidationError>;
/** @internal */
export declare const UploadCanvasInitImageResponse$inboundSchema: z.ZodType<UploadCanvasInitImageResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadCanvasInitImageResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: UploadCanvasInitImageResponseBody$Outbound | undefined;
};
/** @internal */
export declare const UploadCanvasInitImageResponse$outboundSchema: z.ZodType<UploadCanvasInitImageResponse$Outbound, z.ZodTypeDef, UploadCanvasInitImageResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadCanvasInitImageResponse$ {
    /** @deprecated use `UploadCanvasInitImageResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadCanvasInitImageResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadCanvasInitImageResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadCanvasInitImageResponse$Outbound, z.ZodTypeDef, UploadCanvasInitImageResponse>;
    /** @deprecated use `UploadCanvasInitImageResponse$Outbound` instead. */
    type Outbound = UploadCanvasInitImageResponse$Outbound;
}
export declare function uploadCanvasInitImageResponseToJSON(uploadCanvasInitImageResponse: UploadCanvasInitImageResponse): string;
export declare function uploadCanvasInitImageResponseFromJSON(jsonString: string): SafeParseResult<UploadCanvasInitImageResponse, SDKValidationError>;
//# sourceMappingURL=uploadcanvasinitimage.d.ts.map