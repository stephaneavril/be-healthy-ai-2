import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type GetElementByIdRequest = {
    /**
     * The ID of the custom element to return.
     */
    id: number;
};
/**
 * columns and relationships of "user_loras".
 */
export type GetElementByIdUserLoras = {
    baseModel?: string | undefined;
    createdAt?: string | undefined;
    description?: string | undefined;
    focus?: string | undefined;
    id?: number | undefined;
    instancePrompt?: string | null | undefined;
    learningRate?: number | undefined;
    name?: string | undefined;
    resolution?: number | undefined;
    /**
     * The status of the current task.
     */
    status?: shared.JobStatus | undefined;
    trainTextEncoder?: boolean | undefined;
    trainingEpoch?: number | undefined;
    updatedAt?: string | undefined;
};
/**
 * Responses for GET /elements/{id}.
 */
export type GetElementByIdResponseBody = {
    /**
     * columns and relationships of "user_loras".
     */
    userLorasByPk?: GetElementByIdUserLoras | null | undefined;
};
export type GetElementByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for GET /elements/{id}.
     */
    object?: GetElementByIdResponseBody | undefined;
};
/** @internal */
export declare const GetElementByIdRequest$inboundSchema: z.ZodType<GetElementByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetElementByIdRequest$Outbound = {
    id: number;
};
/** @internal */
export declare const GetElementByIdRequest$outboundSchema: z.ZodType<GetElementByIdRequest$Outbound, z.ZodTypeDef, GetElementByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetElementByIdRequest$ {
    /** @deprecated use `GetElementByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetElementByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetElementByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetElementByIdRequest$Outbound, z.ZodTypeDef, GetElementByIdRequest>;
    /** @deprecated use `GetElementByIdRequest$Outbound` instead. */
    type Outbound = GetElementByIdRequest$Outbound;
}
export declare function getElementByIdRequestToJSON(getElementByIdRequest: GetElementByIdRequest): string;
export declare function getElementByIdRequestFromJSON(jsonString: string): SafeParseResult<GetElementByIdRequest, SDKValidationError>;
/** @internal */
export declare const GetElementByIdUserLoras$inboundSchema: z.ZodType<GetElementByIdUserLoras, z.ZodTypeDef, unknown>;
/** @internal */
export type GetElementByIdUserLoras$Outbound = {
    baseModel?: string | undefined;
    createdAt?: string | undefined;
    description?: string | undefined;
    focus?: string | undefined;
    id?: number | undefined;
    instancePrompt?: string | null | undefined;
    learningRate?: number | undefined;
    name?: string | undefined;
    resolution?: number | undefined;
    status?: string | undefined;
    trainTextEncoder?: boolean | undefined;
    trainingEpoch?: number | undefined;
    updatedAt?: string | undefined;
};
/** @internal */
export declare const GetElementByIdUserLoras$outboundSchema: z.ZodType<GetElementByIdUserLoras$Outbound, z.ZodTypeDef, GetElementByIdUserLoras>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetElementByIdUserLoras$ {
    /** @deprecated use `GetElementByIdUserLoras$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetElementByIdUserLoras, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetElementByIdUserLoras$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetElementByIdUserLoras$Outbound, z.ZodTypeDef, GetElementByIdUserLoras>;
    /** @deprecated use `GetElementByIdUserLoras$Outbound` instead. */
    type Outbound = GetElementByIdUserLoras$Outbound;
}
export declare function getElementByIdUserLorasToJSON(getElementByIdUserLoras: GetElementByIdUserLoras): string;
export declare function getElementByIdUserLorasFromJSON(jsonString: string): SafeParseResult<GetElementByIdUserLoras, SDKValidationError>;
/** @internal */
export declare const GetElementByIdResponseBody$inboundSchema: z.ZodType<GetElementByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetElementByIdResponseBody$Outbound = {
    user_loras_by_pk?: GetElementByIdUserLoras$Outbound | null | undefined;
};
/** @internal */
export declare const GetElementByIdResponseBody$outboundSchema: z.ZodType<GetElementByIdResponseBody$Outbound, z.ZodTypeDef, GetElementByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetElementByIdResponseBody$ {
    /** @deprecated use `GetElementByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetElementByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetElementByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetElementByIdResponseBody$Outbound, z.ZodTypeDef, GetElementByIdResponseBody>;
    /** @deprecated use `GetElementByIdResponseBody$Outbound` instead. */
    type Outbound = GetElementByIdResponseBody$Outbound;
}
export declare function getElementByIdResponseBodyToJSON(getElementByIdResponseBody: GetElementByIdResponseBody): string;
export declare function getElementByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<GetElementByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const GetElementByIdResponse$inboundSchema: z.ZodType<GetElementByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetElementByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: GetElementByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const GetElementByIdResponse$outboundSchema: z.ZodType<GetElementByIdResponse$Outbound, z.ZodTypeDef, GetElementByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetElementByIdResponse$ {
    /** @deprecated use `GetElementByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetElementByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetElementByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetElementByIdResponse$Outbound, z.ZodTypeDef, GetElementByIdResponse>;
    /** @deprecated use `GetElementByIdResponse$Outbound` instead. */
    type Outbound = GetElementByIdResponse$Outbound;
}
export declare function getElementByIdResponseToJSON(getElementByIdResponse: GetElementByIdResponse): string;
export declare function getElementByIdResponseFromJSON(jsonString: string): SafeParseResult<GetElementByIdResponse, SDKValidationError>;
//# sourceMappingURL=getelementbyid.d.ts.map