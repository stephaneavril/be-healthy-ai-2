import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteDatasetByIdRequest = {
    /**
     * The ID of the dataset to delete.
     */
    id: string;
};
/**
 * columns and relationships of "datasets"
 */
export type DeleteDatasetByIdDatasets = {
    id?: string | null | undefined;
};
/**
 * Responses for DELETE /datasets/{id}
 */
export type DeleteDatasetByIdResponseBody = {
    /**
     * columns and relationships of "datasets"
     */
    deleteDatasetsByPk?: DeleteDatasetByIdDatasets | null | undefined;
};
export type DeleteDatasetByIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for DELETE /datasets/{id}
     */
    object?: DeleteDatasetByIdResponseBody | undefined;
};
/** @internal */
export declare const DeleteDatasetByIdRequest$inboundSchema: z.ZodType<DeleteDatasetByIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDatasetByIdRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const DeleteDatasetByIdRequest$outboundSchema: z.ZodType<DeleteDatasetByIdRequest$Outbound, z.ZodTypeDef, DeleteDatasetByIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDatasetByIdRequest$ {
    /** @deprecated use `DeleteDatasetByIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDatasetByIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDatasetByIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDatasetByIdRequest$Outbound, z.ZodTypeDef, DeleteDatasetByIdRequest>;
    /** @deprecated use `DeleteDatasetByIdRequest$Outbound` instead. */
    type Outbound = DeleteDatasetByIdRequest$Outbound;
}
export declare function deleteDatasetByIdRequestToJSON(deleteDatasetByIdRequest: DeleteDatasetByIdRequest): string;
export declare function deleteDatasetByIdRequestFromJSON(jsonString: string): SafeParseResult<DeleteDatasetByIdRequest, SDKValidationError>;
/** @internal */
export declare const DeleteDatasetByIdDatasets$inboundSchema: z.ZodType<DeleteDatasetByIdDatasets, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDatasetByIdDatasets$Outbound = {
    id?: string | null | undefined;
};
/** @internal */
export declare const DeleteDatasetByIdDatasets$outboundSchema: z.ZodType<DeleteDatasetByIdDatasets$Outbound, z.ZodTypeDef, DeleteDatasetByIdDatasets>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDatasetByIdDatasets$ {
    /** @deprecated use `DeleteDatasetByIdDatasets$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDatasetByIdDatasets, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDatasetByIdDatasets$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDatasetByIdDatasets$Outbound, z.ZodTypeDef, DeleteDatasetByIdDatasets>;
    /** @deprecated use `DeleteDatasetByIdDatasets$Outbound` instead. */
    type Outbound = DeleteDatasetByIdDatasets$Outbound;
}
export declare function deleteDatasetByIdDatasetsToJSON(deleteDatasetByIdDatasets: DeleteDatasetByIdDatasets): string;
export declare function deleteDatasetByIdDatasetsFromJSON(jsonString: string): SafeParseResult<DeleteDatasetByIdDatasets, SDKValidationError>;
/** @internal */
export declare const DeleteDatasetByIdResponseBody$inboundSchema: z.ZodType<DeleteDatasetByIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDatasetByIdResponseBody$Outbound = {
    delete_datasets_by_pk?: DeleteDatasetByIdDatasets$Outbound | null | undefined;
};
/** @internal */
export declare const DeleteDatasetByIdResponseBody$outboundSchema: z.ZodType<DeleteDatasetByIdResponseBody$Outbound, z.ZodTypeDef, DeleteDatasetByIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDatasetByIdResponseBody$ {
    /** @deprecated use `DeleteDatasetByIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDatasetByIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDatasetByIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDatasetByIdResponseBody$Outbound, z.ZodTypeDef, DeleteDatasetByIdResponseBody>;
    /** @deprecated use `DeleteDatasetByIdResponseBody$Outbound` instead. */
    type Outbound = DeleteDatasetByIdResponseBody$Outbound;
}
export declare function deleteDatasetByIdResponseBodyToJSON(deleteDatasetByIdResponseBody: DeleteDatasetByIdResponseBody): string;
export declare function deleteDatasetByIdResponseBodyFromJSON(jsonString: string): SafeParseResult<DeleteDatasetByIdResponseBody, SDKValidationError>;
/** @internal */
export declare const DeleteDatasetByIdResponse$inboundSchema: z.ZodType<DeleteDatasetByIdResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDatasetByIdResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: DeleteDatasetByIdResponseBody$Outbound | undefined;
};
/** @internal */
export declare const DeleteDatasetByIdResponse$outboundSchema: z.ZodType<DeleteDatasetByIdResponse$Outbound, z.ZodTypeDef, DeleteDatasetByIdResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDatasetByIdResponse$ {
    /** @deprecated use `DeleteDatasetByIdResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDatasetByIdResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDatasetByIdResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDatasetByIdResponse$Outbound, z.ZodTypeDef, DeleteDatasetByIdResponse>;
    /** @deprecated use `DeleteDatasetByIdResponse$Outbound` instead. */
    type Outbound = DeleteDatasetByIdResponse$Outbound;
}
export declare function deleteDatasetByIdResponseToJSON(deleteDatasetByIdResponse: DeleteDatasetByIdResponse): string;
export declare function deleteDatasetByIdResponseFromJSON(jsonString: string): SafeParseResult<DeleteDatasetByIdResponse, SDKValidationError>;
//# sourceMappingURL=deletedatasetbyid.d.ts.map