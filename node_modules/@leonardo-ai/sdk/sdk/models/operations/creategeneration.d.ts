import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * Which type of transparency this image should use
 */
export declare enum TransparencyType {
    Disabled = "disabled",
    ForegroundOnly = "foreground_only"
}
/**
 * Query parameters to be provided in the request body as a JSON object
 */
export type CreateGenerationRequestBody = {
    /**
     * Enable to use Alchemy. Note: The appropriate Alchemy version is selected for the specified model. For example, XL models will use Alchemy V2.
     */
    alchemy?: boolean | null | undefined;
    /**
     * The ID of an initial image to use in Canvas Editor request.
     */
    canvasInitId?: string | null | undefined;
    /**
     * The ID of a mask image to use in Canvas Editor request.
     */
    canvasMaskId?: string | null | undefined;
    /**
     * Whether the generation is for the Canvas Editor feature.
     */
    canvasRequest?: boolean | null | undefined;
    /**
     * The type of request for the Canvas Editor.
     */
    canvasRequestType?: shared.CanvasRequestType | null | undefined;
    /**
     * Contrast Ratio to use with Alchemy. Must be a float between 0 and 1 inclusive.
     */
    contrastRatio?: number | null | undefined;
    /**
     * This parameter will be deprecated in September 2024. Please use the controlnets array instead.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    controlNet?: boolean | null | undefined;
    /**
     * This parameter will be deprecated in September 2024. Please use the controlnets array instead.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    controlNetType?: shared.ControlnetType | undefined;
    controlnets?: Array<shared.ControlnetInput> | null | undefined;
    elements?: Array<shared.ElementInput> | null | undefined;
    /**
     * When enabled, your prompt is expanded to include more detail.
     */
    enhancePrompt?: boolean | null | undefined;
    /**
     * When enhancePrompt is enabled, the prompt is enhanced based on the given instructions.
     */
    enhancePromptInstruction?: string | null | undefined;
    /**
     * Enable to use the Expanded Domain feature of Alchemy.
     */
    expandedDomain?: boolean | null | undefined;
    /**
     * Enable to use the Fantasy Avatar feature.
     */
    fantasyAvatar?: boolean | null | undefined;
    /**
     * How strongly the generation should reflect the prompt. 7 is recommended. Must be between 1 and 20.
     */
    guidanceScale?: number | null | undefined;
    /**
     * The input height of the images. Must be between 32 and 1536 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    height?: number | null | undefined;
    /**
     * Enable to use the High Contrast feature of Prompt Magic. Note: Controls RAW mode. Set to false to enable RAW mode.
     */
    highContrast?: boolean | null | undefined;
    /**
     * Enable to use the High Resolution feature of Prompt Magic.
     */
    highResolution?: boolean | null | undefined;
    imagePromptWeight?: number | null | undefined;
    imagePrompts?: Array<string> | null | undefined;
    /**
     * The ID of an existing image to use in image2image.
     */
    initGenerationImageId?: string | null | undefined;
    /**
     * The ID of an Init Image to use in image2image.
     */
    initImageId?: string | null | undefined;
    /**
     * How strongly the generated images should reflect the original image in image2image. Must be a float between 0.1 and 0.9.
     */
    initStrength?: number | null | undefined;
    /**
     * The model ID used for image generation. If not provided, uses sd_version to determine the version of Stable Diffusion to use. In-app, model IDs are under the Finetune Models menu. Click on the platform model or your custom model, then click View More. For platform models, you can also use the List Platform Models API.
     */
    modelId?: string | null | undefined;
    /**
     * The negative prompt used for the image generation
     */
    negativePrompt?: string | null | undefined;
    /**
     * The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.
     */
    numImages?: number | null | undefined;
    /**
     * The Step Count to use for the generation. Must be between 10 and 60. Default is 15.
     */
    numInferenceSteps?: number | null | undefined;
    /**
     * Enable the photoReal feature. Requires enabling alchemy and unspecifying modelId (for photoRealVersion V1).
     */
    photoReal?: boolean | null | undefined;
    /**
     * Depth of field of photoReal. Must be 0.55 for low, 0.5 for medium, or 0.45 for high. Defaults to 0.55 if not specified.
     */
    photoRealStrength?: number | null | undefined;
    /**
     * The version of photoReal to use. Must be v1 or v2.
     */
    photoRealVersion?: string | null | undefined;
    /**
     * The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.
     */
    presetStyle?: shared.SdGenerationStyle | null | undefined;
    /**
     * The prompt used to generate images
     */
    prompt?: string | undefined;
    /**
     * Enable to use Prompt Magic.
     */
    promptMagic?: boolean | null | undefined;
    /**
     * Strength of prompt magic. Must be a float between 0.1 and 1.0
     */
    promptMagicStrength?: number | null | undefined;
    /**
     * Prompt magic version v2 or v3, for use when promptMagic: true
     */
    promptMagicVersion?: string | null | undefined;
    /**
     * Whether the generated images should show in the community feed.
     */
    public?: boolean | null | undefined;
    /**
     * The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified.
     */
    scheduler?: shared.SdGenerationSchedulers | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
     */
    sdVersion?: shared.SdVersions | undefined;
    /**
     * Apply a fixed seed to maintain consistency across generation sets. The maximum seed value is 2147483637 for Flux and 9999999998 for other models
     */
    seed?: number | null | undefined;
    /**
     * Whether the generated images should tile on all axis.
     */
    tiling?: boolean | null | undefined;
    /**
     * Which type of transparency this image should use
     */
    transparency?: TransparencyType | null | undefined;
    /**
     * Enable to use Ultra mode. Note: can not be used with Alchemy.
     */
    ultra?: boolean | null | undefined;
    /**
     * Whether the generated images should be unzoomed (requires unzoomAmount and init_image_id to be set).
     */
    unzoom?: boolean | null | undefined;
    /**
     * How much the image should be unzoomed (requires an init_image_id and unzoom to be set to true).
     */
    unzoomAmount?: number | null | undefined;
    /**
     * How much the image should be upscaled. (Enterprise Only)
     */
    upscaleRatio?: number | null | undefined;
    userElements?: Array<shared.UserElementsInput> | null | undefined;
    /**
     * This parameter will be deprecated in September 2024. Please use the controlnets array instead.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    weighting?: number | null | undefined;
    /**
     * The input width of the images. Must be between 32 and 1536 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.
     */
    width?: number | null | undefined;
};
export type SDGenerationOutput = {
    /**
     * API Credits Cost for Image Generation. Available for Production API Users.
     */
    apiCreditCost?: number | null | undefined;
    generationId?: string | undefined;
};
/**
 * Responses for POST /generations
 */
export type CreateGenerationResponseBody = {
    sdGenerationJob?: SDGenerationOutput | null | undefined;
};
export type CreateGenerationResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /generations
     */
    object?: CreateGenerationResponseBody | undefined;
};
/** @internal */
export declare const TransparencyType$inboundSchema: z.ZodNativeEnum<typeof TransparencyType>;
/** @internal */
export declare const TransparencyType$outboundSchema: z.ZodNativeEnum<typeof TransparencyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TransparencyType$ {
    /** @deprecated use `TransparencyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof TransparencyType>;
    /** @deprecated use `TransparencyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof TransparencyType>;
}
/** @internal */
export declare const CreateGenerationRequestBody$inboundSchema: z.ZodType<CreateGenerationRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateGenerationRequestBody$Outbound = {
    alchemy: boolean | null;
    canvasInitId?: string | null | undefined;
    canvasMaskId?: string | null | undefined;
    canvasRequest?: boolean | null | undefined;
    canvasRequestType?: string | null | undefined;
    contrastRatio?: number | null | undefined;
    controlNet?: boolean | null | undefined;
    controlNetType?: string | undefined;
    controlnets?: Array<shared.ControlnetInput$Outbound> | null | undefined;
    elements?: Array<shared.ElementInput$Outbound> | null | undefined;
    enhancePrompt?: boolean | null | undefined;
    enhancePromptInstruction?: string | null | undefined;
    expandedDomain?: boolean | null | undefined;
    fantasyAvatar?: boolean | null | undefined;
    guidance_scale?: number | null | undefined;
    height: number | null;
    highContrast?: boolean | null | undefined;
    highResolution?: boolean | null | undefined;
    imagePromptWeight?: number | null | undefined;
    imagePrompts?: Array<string> | null | undefined;
    init_generation_image_id?: string | null | undefined;
    init_image_id?: string | null | undefined;
    init_strength?: number | null | undefined;
    modelId: string | null;
    negative_prompt?: string | null | undefined;
    num_images: number | null;
    num_inference_steps?: number | null | undefined;
    photoReal?: boolean | null | undefined;
    photoRealStrength?: number | null | undefined;
    photoRealVersion?: string | null | undefined;
    presetStyle: string | null;
    prompt: string;
    promptMagic?: boolean | null | undefined;
    promptMagicStrength?: number | null | undefined;
    promptMagicVersion?: string | null | undefined;
    public?: boolean | null | undefined;
    scheduler?: string | undefined;
    sd_version?: string | undefined;
    seed?: number | null | undefined;
    tiling?: boolean | null | undefined;
    transparency?: string | null | undefined;
    ultra?: boolean | null | undefined;
    unzoom?: boolean | null | undefined;
    unzoomAmount?: number | null | undefined;
    upscaleRatio?: number | null | undefined;
    userElements?: Array<shared.UserElementsInput$Outbound> | null | undefined;
    weighting?: number | null | undefined;
    width: number | null;
};
/** @internal */
export declare const CreateGenerationRequestBody$outboundSchema: z.ZodType<CreateGenerationRequestBody$Outbound, z.ZodTypeDef, CreateGenerationRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateGenerationRequestBody$ {
    /** @deprecated use `CreateGenerationRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateGenerationRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateGenerationRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateGenerationRequestBody$Outbound, z.ZodTypeDef, CreateGenerationRequestBody>;
    /** @deprecated use `CreateGenerationRequestBody$Outbound` instead. */
    type Outbound = CreateGenerationRequestBody$Outbound;
}
export declare function createGenerationRequestBodyToJSON(createGenerationRequestBody: CreateGenerationRequestBody): string;
export declare function createGenerationRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateGenerationRequestBody, SDKValidationError>;
/** @internal */
export declare const SDGenerationOutput$inboundSchema: z.ZodType<SDGenerationOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type SDGenerationOutput$Outbound = {
    apiCreditCost?: number | null | undefined;
    generationId?: string | undefined;
};
/** @internal */
export declare const SDGenerationOutput$outboundSchema: z.ZodType<SDGenerationOutput$Outbound, z.ZodTypeDef, SDGenerationOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SDGenerationOutput$ {
    /** @deprecated use `SDGenerationOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SDGenerationOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `SDGenerationOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SDGenerationOutput$Outbound, z.ZodTypeDef, SDGenerationOutput>;
    /** @deprecated use `SDGenerationOutput$Outbound` instead. */
    type Outbound = SDGenerationOutput$Outbound;
}
export declare function sdGenerationOutputToJSON(sdGenerationOutput: SDGenerationOutput): string;
export declare function sdGenerationOutputFromJSON(jsonString: string): SafeParseResult<SDGenerationOutput, SDKValidationError>;
/** @internal */
export declare const CreateGenerationResponseBody$inboundSchema: z.ZodType<CreateGenerationResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateGenerationResponseBody$Outbound = {
    sdGenerationJob?: SDGenerationOutput$Outbound | null | undefined;
};
/** @internal */
export declare const CreateGenerationResponseBody$outboundSchema: z.ZodType<CreateGenerationResponseBody$Outbound, z.ZodTypeDef, CreateGenerationResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateGenerationResponseBody$ {
    /** @deprecated use `CreateGenerationResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateGenerationResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateGenerationResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateGenerationResponseBody$Outbound, z.ZodTypeDef, CreateGenerationResponseBody>;
    /** @deprecated use `CreateGenerationResponseBody$Outbound` instead. */
    type Outbound = CreateGenerationResponseBody$Outbound;
}
export declare function createGenerationResponseBodyToJSON(createGenerationResponseBody: CreateGenerationResponseBody): string;
export declare function createGenerationResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateGenerationResponseBody, SDKValidationError>;
/** @internal */
export declare const CreateGenerationResponse$inboundSchema: z.ZodType<CreateGenerationResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateGenerationResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: CreateGenerationResponseBody$Outbound | undefined;
};
/** @internal */
export declare const CreateGenerationResponse$outboundSchema: z.ZodType<CreateGenerationResponse$Outbound, z.ZodTypeDef, CreateGenerationResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateGenerationResponse$ {
    /** @deprecated use `CreateGenerationResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateGenerationResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateGenerationResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateGenerationResponse$Outbound, z.ZodTypeDef, CreateGenerationResponse>;
    /** @deprecated use `CreateGenerationResponse$Outbound` instead. */
    type Outbound = CreateGenerationResponse$Outbound;
}
export declare function createGenerationResponseToJSON(createGenerationResponse: CreateGenerationResponse): string;
export declare function createGenerationResponseFromJSON(jsonString: string): SafeParseResult<CreateGenerationResponse, SDKValidationError>;
//# sourceMappingURL=creategeneration.d.ts.map