"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteTextureGenerationByIdResponseFromJSON = exports.deleteTextureGenerationByIdResponseToJSON = exports.DeleteTextureGenerationByIdResponse$ = exports.DeleteTextureGenerationByIdResponse$outboundSchema = exports.DeleteTextureGenerationByIdResponse$inboundSchema = exports.deleteTextureGenerationByIdResponseBodyFromJSON = exports.deleteTextureGenerationByIdResponseBodyToJSON = exports.DeleteTextureGenerationByIdResponseBody$ = exports.DeleteTextureGenerationByIdResponseBody$outboundSchema = exports.DeleteTextureGenerationByIdResponseBody$inboundSchema = exports.modelAssetTextureGenerationsFromJSON = exports.modelAssetTextureGenerationsToJSON = exports.ModelAssetTextureGenerations$ = exports.ModelAssetTextureGenerations$outboundSchema = exports.ModelAssetTextureGenerations$inboundSchema = exports.deleteTextureGenerationByIdRequestFromJSON = exports.deleteTextureGenerationByIdRequestToJSON = exports.DeleteTextureGenerationByIdRequest$ = exports.DeleteTextureGenerationByIdRequest$outboundSchema = exports.DeleteTextureGenerationByIdRequest$inboundSchema = exports.deleteTextureGenerationByIdRequestBodyFromJSON = exports.deleteTextureGenerationByIdRequestBodyToJSON = exports.DeleteTextureGenerationByIdRequestBody$ = exports.DeleteTextureGenerationByIdRequestBody$outboundSchema = exports.DeleteTextureGenerationByIdRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.DeleteTextureGenerationByIdRequestBody$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.DeleteTextureGenerationByIdRequestBody$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteTextureGenerationByIdRequestBody$;
(function (DeleteTextureGenerationByIdRequestBody$) {
    /** @deprecated use `DeleteTextureGenerationByIdRequestBody$inboundSchema` instead. */
    DeleteTextureGenerationByIdRequestBody$.inboundSchema = exports.DeleteTextureGenerationByIdRequestBody$inboundSchema;
    /** @deprecated use `DeleteTextureGenerationByIdRequestBody$outboundSchema` instead. */
    DeleteTextureGenerationByIdRequestBody$.outboundSchema = exports.DeleteTextureGenerationByIdRequestBody$outboundSchema;
})(DeleteTextureGenerationByIdRequestBody$ || (exports.DeleteTextureGenerationByIdRequestBody$ = DeleteTextureGenerationByIdRequestBody$ = {}));
function deleteTextureGenerationByIdRequestBodyToJSON(deleteTextureGenerationByIdRequestBody) {
    return JSON.stringify(exports.DeleteTextureGenerationByIdRequestBody$outboundSchema.parse(deleteTextureGenerationByIdRequestBody));
}
exports.deleteTextureGenerationByIdRequestBodyToJSON = deleteTextureGenerationByIdRequestBodyToJSON;
function deleteTextureGenerationByIdRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteTextureGenerationByIdRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTextureGenerationByIdRequestBody' from JSON`);
}
exports.deleteTextureGenerationByIdRequestBodyFromJSON = deleteTextureGenerationByIdRequestBodyFromJSON;
/** @internal */
exports.DeleteTextureGenerationByIdRequest$inboundSchema = z.object({
    RequestBody: z.lazy(() => exports.DeleteTextureGenerationByIdRequestBody$inboundSchema).optional(),
    id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
exports.DeleteTextureGenerationByIdRequest$outboundSchema = z.object({
    requestBody: z.lazy(() => exports.DeleteTextureGenerationByIdRequestBody$outboundSchema).optional(),
    id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteTextureGenerationByIdRequest$;
(function (DeleteTextureGenerationByIdRequest$) {
    /** @deprecated use `DeleteTextureGenerationByIdRequest$inboundSchema` instead. */
    DeleteTextureGenerationByIdRequest$.inboundSchema = exports.DeleteTextureGenerationByIdRequest$inboundSchema;
    /** @deprecated use `DeleteTextureGenerationByIdRequest$outboundSchema` instead. */
    DeleteTextureGenerationByIdRequest$.outboundSchema = exports.DeleteTextureGenerationByIdRequest$outboundSchema;
})(DeleteTextureGenerationByIdRequest$ || (exports.DeleteTextureGenerationByIdRequest$ = DeleteTextureGenerationByIdRequest$ = {}));
function deleteTextureGenerationByIdRequestToJSON(deleteTextureGenerationByIdRequest) {
    return JSON.stringify(exports.DeleteTextureGenerationByIdRequest$outboundSchema.parse(deleteTextureGenerationByIdRequest));
}
exports.deleteTextureGenerationByIdRequestToJSON = deleteTextureGenerationByIdRequestToJSON;
function deleteTextureGenerationByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteTextureGenerationByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTextureGenerationByIdRequest' from JSON`);
}
exports.deleteTextureGenerationByIdRequestFromJSON = deleteTextureGenerationByIdRequestFromJSON;
/** @internal */
exports.ModelAssetTextureGenerations$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.ModelAssetTextureGenerations$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ModelAssetTextureGenerations$;
(function (ModelAssetTextureGenerations$) {
    /** @deprecated use `ModelAssetTextureGenerations$inboundSchema` instead. */
    ModelAssetTextureGenerations$.inboundSchema = exports.ModelAssetTextureGenerations$inboundSchema;
    /** @deprecated use `ModelAssetTextureGenerations$outboundSchema` instead. */
    ModelAssetTextureGenerations$.outboundSchema = exports.ModelAssetTextureGenerations$outboundSchema;
})(ModelAssetTextureGenerations$ || (exports.ModelAssetTextureGenerations$ = ModelAssetTextureGenerations$ = {}));
function modelAssetTextureGenerationsToJSON(modelAssetTextureGenerations) {
    return JSON.stringify(exports.ModelAssetTextureGenerations$outboundSchema.parse(modelAssetTextureGenerations));
}
exports.modelAssetTextureGenerationsToJSON = modelAssetTextureGenerationsToJSON;
function modelAssetTextureGenerationsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ModelAssetTextureGenerations$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ModelAssetTextureGenerations' from JSON`);
}
exports.modelAssetTextureGenerationsFromJSON = modelAssetTextureGenerationsFromJSON;
/** @internal */
exports.DeleteTextureGenerationByIdResponseBody$inboundSchema = z.object({
    delete_model_asset_texture_generations_by_pk: z.nullable(z.lazy(() => exports.ModelAssetTextureGenerations$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "delete_model_asset_texture_generations_by_pk": "deleteModelAssetTextureGenerationsByPk",
    });
});
/** @internal */
exports.DeleteTextureGenerationByIdResponseBody$outboundSchema = z.object({
    deleteModelAssetTextureGenerationsByPk: z.nullable(z.lazy(() => exports.ModelAssetTextureGenerations$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        deleteModelAssetTextureGenerationsByPk: "delete_model_asset_texture_generations_by_pk",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteTextureGenerationByIdResponseBody$;
(function (DeleteTextureGenerationByIdResponseBody$) {
    /** @deprecated use `DeleteTextureGenerationByIdResponseBody$inboundSchema` instead. */
    DeleteTextureGenerationByIdResponseBody$.inboundSchema = exports.DeleteTextureGenerationByIdResponseBody$inboundSchema;
    /** @deprecated use `DeleteTextureGenerationByIdResponseBody$outboundSchema` instead. */
    DeleteTextureGenerationByIdResponseBody$.outboundSchema = exports.DeleteTextureGenerationByIdResponseBody$outboundSchema;
})(DeleteTextureGenerationByIdResponseBody$ || (exports.DeleteTextureGenerationByIdResponseBody$ = DeleteTextureGenerationByIdResponseBody$ = {}));
function deleteTextureGenerationByIdResponseBodyToJSON(deleteTextureGenerationByIdResponseBody) {
    return JSON.stringify(exports.DeleteTextureGenerationByIdResponseBody$outboundSchema.parse(deleteTextureGenerationByIdResponseBody));
}
exports.deleteTextureGenerationByIdResponseBodyToJSON = deleteTextureGenerationByIdResponseBodyToJSON;
function deleteTextureGenerationByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteTextureGenerationByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTextureGenerationByIdResponseBody' from JSON`);
}
exports.deleteTextureGenerationByIdResponseBodyFromJSON = deleteTextureGenerationByIdResponseBodyFromJSON;
/** @internal */
exports.DeleteTextureGenerationByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.DeleteTextureGenerationByIdResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.DeleteTextureGenerationByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.DeleteTextureGenerationByIdResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeleteTextureGenerationByIdResponse$;
(function (DeleteTextureGenerationByIdResponse$) {
    /** @deprecated use `DeleteTextureGenerationByIdResponse$inboundSchema` instead. */
    DeleteTextureGenerationByIdResponse$.inboundSchema = exports.DeleteTextureGenerationByIdResponse$inboundSchema;
    /** @deprecated use `DeleteTextureGenerationByIdResponse$outboundSchema` instead. */
    DeleteTextureGenerationByIdResponse$.outboundSchema = exports.DeleteTextureGenerationByIdResponse$outboundSchema;
})(DeleteTextureGenerationByIdResponse$ || (exports.DeleteTextureGenerationByIdResponse$ = DeleteTextureGenerationByIdResponse$ = {}));
function deleteTextureGenerationByIdResponseToJSON(deleteTextureGenerationByIdResponse) {
    return JSON.stringify(exports.DeleteTextureGenerationByIdResponse$outboundSchema.parse(deleteTextureGenerationByIdResponse));
}
exports.deleteTextureGenerationByIdResponseToJSON = deleteTextureGenerationByIdResponseToJSON;
function deleteTextureGenerationByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.DeleteTextureGenerationByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTextureGenerationByIdResponse' from JSON`);
}
exports.deleteTextureGenerationByIdResponseFromJSON = deleteTextureGenerationByIdResponseFromJSON;
//# sourceMappingURL=deletetexturegenerationbyid.js.map