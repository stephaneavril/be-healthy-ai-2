import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * Query parameters can also be provided in the request body as a JSON object
 */
export type PerformInpaintingLCMRequestBody = {
    /**
     * How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20.
     */
    guidance?: number | null | undefined;
    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    height?: number | null | undefined;
    /**
     * Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`
     */
    imageDataUrl: string;
    /**
     * Image data of the mask layer used for inpainting. In base64 format. Prefix: `data:image/jpeg;base64,`. Mask should be white on black where generation is applied to the white area.
     */
    maskDataUrl: string;
    /**
     * The prompt used to generate images
     */
    prompt: string;
    requestTimestamp?: string | undefined;
    /**
     * Apply a fixed seed to maintain consistency across generation sets. The maximum seed value is 2147483637 for Flux and 9999999998 for other models
     */
    seed?: number | null | undefined;
    /**
     * The number of steps to use for the generation. Must be between 4 and 16.
     */
    steps?: number | null | undefined;
    /**
     * Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1.
     */
    strength?: number | null | undefined;
    /**
     * The style to generate LCM images with.
     */
    style?: shared.LcmGenerationStyle | null | undefined;
    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    width?: number | null | undefined;
};
export type PerformInpaintingLCMLCMGenerationOutput = {
    /**
     * API credits cost, available for Production API users.
     */
    apiCreditCost?: number | null | undefined;
    imageDataUrl?: Array<string> | undefined;
    requestTimestamp?: string | undefined;
};
/**
 * Responses for POST /lcm-inpainting
 */
export type PerformInpaintingLCMResponseBody = {
    lcmGenerationJob?: PerformInpaintingLCMLCMGenerationOutput | null | undefined;
};
export type PerformInpaintingLCMResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /lcm-inpainting
     */
    object?: PerformInpaintingLCMResponseBody | undefined;
};
/** @internal */
export declare const PerformInpaintingLCMRequestBody$inboundSchema: z.ZodType<PerformInpaintingLCMRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformInpaintingLCMRequestBody$Outbound = {
    guidance?: number | null | undefined;
    height: number | null;
    imageDataUrl: string;
    maskDataUrl: string;
    prompt: string;
    requestTimestamp?: string | undefined;
    seed?: number | null | undefined;
    steps?: number | null | undefined;
    strength?: number | null | undefined;
    style?: string | null | undefined;
    width: number | null;
};
/** @internal */
export declare const PerformInpaintingLCMRequestBody$outboundSchema: z.ZodType<PerformInpaintingLCMRequestBody$Outbound, z.ZodTypeDef, PerformInpaintingLCMRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformInpaintingLCMRequestBody$ {
    /** @deprecated use `PerformInpaintingLCMRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformInpaintingLCMRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformInpaintingLCMRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformInpaintingLCMRequestBody$Outbound, z.ZodTypeDef, PerformInpaintingLCMRequestBody>;
    /** @deprecated use `PerformInpaintingLCMRequestBody$Outbound` instead. */
    type Outbound = PerformInpaintingLCMRequestBody$Outbound;
}
export declare function performInpaintingLCMRequestBodyToJSON(performInpaintingLCMRequestBody: PerformInpaintingLCMRequestBody): string;
export declare function performInpaintingLCMRequestBodyFromJSON(jsonString: string): SafeParseResult<PerformInpaintingLCMRequestBody, SDKValidationError>;
/** @internal */
export declare const PerformInpaintingLCMLCMGenerationOutput$inboundSchema: z.ZodType<PerformInpaintingLCMLCMGenerationOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformInpaintingLCMLCMGenerationOutput$Outbound = {
    apiCreditCost?: number | null | undefined;
    imageDataUrl?: Array<string> | undefined;
    requestTimestamp?: string | undefined;
};
/** @internal */
export declare const PerformInpaintingLCMLCMGenerationOutput$outboundSchema: z.ZodType<PerformInpaintingLCMLCMGenerationOutput$Outbound, z.ZodTypeDef, PerformInpaintingLCMLCMGenerationOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformInpaintingLCMLCMGenerationOutput$ {
    /** @deprecated use `PerformInpaintingLCMLCMGenerationOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformInpaintingLCMLCMGenerationOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformInpaintingLCMLCMGenerationOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformInpaintingLCMLCMGenerationOutput$Outbound, z.ZodTypeDef, PerformInpaintingLCMLCMGenerationOutput>;
    /** @deprecated use `PerformInpaintingLCMLCMGenerationOutput$Outbound` instead. */
    type Outbound = PerformInpaintingLCMLCMGenerationOutput$Outbound;
}
export declare function performInpaintingLCMLCMGenerationOutputToJSON(performInpaintingLCMLCMGenerationOutput: PerformInpaintingLCMLCMGenerationOutput): string;
export declare function performInpaintingLCMLCMGenerationOutputFromJSON(jsonString: string): SafeParseResult<PerformInpaintingLCMLCMGenerationOutput, SDKValidationError>;
/** @internal */
export declare const PerformInpaintingLCMResponseBody$inboundSchema: z.ZodType<PerformInpaintingLCMResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformInpaintingLCMResponseBody$Outbound = {
    lcmGenerationJob?: PerformInpaintingLCMLCMGenerationOutput$Outbound | null | undefined;
};
/** @internal */
export declare const PerformInpaintingLCMResponseBody$outboundSchema: z.ZodType<PerformInpaintingLCMResponseBody$Outbound, z.ZodTypeDef, PerformInpaintingLCMResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformInpaintingLCMResponseBody$ {
    /** @deprecated use `PerformInpaintingLCMResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformInpaintingLCMResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformInpaintingLCMResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformInpaintingLCMResponseBody$Outbound, z.ZodTypeDef, PerformInpaintingLCMResponseBody>;
    /** @deprecated use `PerformInpaintingLCMResponseBody$Outbound` instead. */
    type Outbound = PerformInpaintingLCMResponseBody$Outbound;
}
export declare function performInpaintingLCMResponseBodyToJSON(performInpaintingLCMResponseBody: PerformInpaintingLCMResponseBody): string;
export declare function performInpaintingLCMResponseBodyFromJSON(jsonString: string): SafeParseResult<PerformInpaintingLCMResponseBody, SDKValidationError>;
/** @internal */
export declare const PerformInpaintingLCMResponse$inboundSchema: z.ZodType<PerformInpaintingLCMResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformInpaintingLCMResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: PerformInpaintingLCMResponseBody$Outbound | undefined;
};
/** @internal */
export declare const PerformInpaintingLCMResponse$outboundSchema: z.ZodType<PerformInpaintingLCMResponse$Outbound, z.ZodTypeDef, PerformInpaintingLCMResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformInpaintingLCMResponse$ {
    /** @deprecated use `PerformInpaintingLCMResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformInpaintingLCMResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformInpaintingLCMResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformInpaintingLCMResponse$Outbound, z.ZodTypeDef, PerformInpaintingLCMResponse>;
    /** @deprecated use `PerformInpaintingLCMResponse$Outbound` instead. */
    type Outbound = PerformInpaintingLCMResponse$Outbound;
}
export declare function performInpaintingLCMResponseToJSON(performInpaintingLCMResponse: PerformInpaintingLCMResponse): string;
export declare function performInpaintingLCMResponseFromJSON(jsonString: string): SafeParseResult<PerformInpaintingLCMResponse, SDKValidationError>;
//# sourceMappingURL=performinpaintinglcm.d.ts.map