"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTextureGenerationResponseFromJSON = exports.createTextureGenerationResponseToJSON = exports.CreateTextureGenerationResponse$ = exports.CreateTextureGenerationResponse$outboundSchema = exports.CreateTextureGenerationResponse$inboundSchema = exports.createTextureGenerationResponseBodyFromJSON = exports.createTextureGenerationResponseBodyToJSON = exports.CreateTextureGenerationResponseBody$ = exports.CreateTextureGenerationResponseBody$outboundSchema = exports.CreateTextureGenerationResponseBody$inboundSchema = exports.textureGenerationJobOutputFromJSON = exports.textureGenerationJobOutputToJSON = exports.TextureGenerationJobOutput$ = exports.TextureGenerationJobOutput$outboundSchema = exports.TextureGenerationJobOutput$inboundSchema = exports.createTextureGenerationRequestBodyFromJSON = exports.createTextureGenerationRequestBodyToJSON = exports.CreateTextureGenerationRequestBody$ = exports.CreateTextureGenerationRequestBody$outboundSchema = exports.CreateTextureGenerationRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.CreateTextureGenerationRequestBody$inboundSchema = z.object({
    front_rotation_offset: z.nullable(z.number().int()).optional(),
    modelAssetId: z.string().optional(),
    negative_prompt: z.nullable(z.string()).optional(),
    preview: z.nullable(z.boolean()).optional(),
    preview_direction: z.nullable(z.string()).optional(),
    prompt: z.string().optional(),
    sd_version: z.nullable(z.string()).optional(),
    seed: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "front_rotation_offset": "frontRotationOffset",
        "negative_prompt": "negativePrompt",
        "preview_direction": "previewDirection",
        "sd_version": "sdVersion",
    });
});
/** @internal */
exports.CreateTextureGenerationRequestBody$outboundSchema = z.object({
    frontRotationOffset: z.nullable(z.number().int()).optional(),
    modelAssetId: z.string().optional(),
    negativePrompt: z.nullable(z.string()).optional(),
    preview: z.nullable(z.boolean()).optional(),
    previewDirection: z.nullable(z.string()).optional(),
    prompt: z.string().optional(),
    sdVersion: z.nullable(z.string()).optional(),
    seed: z.nullable(z.number().int()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        frontRotationOffset: "front_rotation_offset",
        negativePrompt: "negative_prompt",
        previewDirection: "preview_direction",
        sdVersion: "sd_version",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateTextureGenerationRequestBody$;
(function (CreateTextureGenerationRequestBody$) {
    /** @deprecated use `CreateTextureGenerationRequestBody$inboundSchema` instead. */
    CreateTextureGenerationRequestBody$.inboundSchema = exports.CreateTextureGenerationRequestBody$inboundSchema;
    /** @deprecated use `CreateTextureGenerationRequestBody$outboundSchema` instead. */
    CreateTextureGenerationRequestBody$.outboundSchema = exports.CreateTextureGenerationRequestBody$outboundSchema;
})(CreateTextureGenerationRequestBody$ || (exports.CreateTextureGenerationRequestBody$ = CreateTextureGenerationRequestBody$ = {}));
function createTextureGenerationRequestBodyToJSON(createTextureGenerationRequestBody) {
    return JSON.stringify(exports.CreateTextureGenerationRequestBody$outboundSchema.parse(createTextureGenerationRequestBody));
}
exports.createTextureGenerationRequestBodyToJSON = createTextureGenerationRequestBodyToJSON;
function createTextureGenerationRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateTextureGenerationRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateTextureGenerationRequestBody' from JSON`);
}
exports.createTextureGenerationRequestBodyFromJSON = createTextureGenerationRequestBodyFromJSON;
/** @internal */
exports.TextureGenerationJobOutput$inboundSchema = z.object({
    apiCreditCost: z.nullable(z.number().int()).optional(),
    id: z.string().optional(),
});
/** @internal */
exports.TextureGenerationJobOutput$outboundSchema = z.object({
    apiCreditCost: z.nullable(z.number().int()).optional(),
    id: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TextureGenerationJobOutput$;
(function (TextureGenerationJobOutput$) {
    /** @deprecated use `TextureGenerationJobOutput$inboundSchema` instead. */
    TextureGenerationJobOutput$.inboundSchema = exports.TextureGenerationJobOutput$inboundSchema;
    /** @deprecated use `TextureGenerationJobOutput$outboundSchema` instead. */
    TextureGenerationJobOutput$.outboundSchema = exports.TextureGenerationJobOutput$outboundSchema;
})(TextureGenerationJobOutput$ || (exports.TextureGenerationJobOutput$ = TextureGenerationJobOutput$ = {}));
function textureGenerationJobOutputToJSON(textureGenerationJobOutput) {
    return JSON.stringify(exports.TextureGenerationJobOutput$outboundSchema.parse(textureGenerationJobOutput));
}
exports.textureGenerationJobOutputToJSON = textureGenerationJobOutputToJSON;
function textureGenerationJobOutputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.TextureGenerationJobOutput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TextureGenerationJobOutput' from JSON`);
}
exports.textureGenerationJobOutputFromJSON = textureGenerationJobOutputFromJSON;
/** @internal */
exports.CreateTextureGenerationResponseBody$inboundSchema = z.object({
    textureGenerationJob: z.nullable(z.lazy(() => exports.TextureGenerationJobOutput$inboundSchema)).optional(),
});
/** @internal */
exports.CreateTextureGenerationResponseBody$outboundSchema = z.object({
    textureGenerationJob: z.nullable(z.lazy(() => exports.TextureGenerationJobOutput$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateTextureGenerationResponseBody$;
(function (CreateTextureGenerationResponseBody$) {
    /** @deprecated use `CreateTextureGenerationResponseBody$inboundSchema` instead. */
    CreateTextureGenerationResponseBody$.inboundSchema = exports.CreateTextureGenerationResponseBody$inboundSchema;
    /** @deprecated use `CreateTextureGenerationResponseBody$outboundSchema` instead. */
    CreateTextureGenerationResponseBody$.outboundSchema = exports.CreateTextureGenerationResponseBody$outboundSchema;
})(CreateTextureGenerationResponseBody$ || (exports.CreateTextureGenerationResponseBody$ = CreateTextureGenerationResponseBody$ = {}));
function createTextureGenerationResponseBodyToJSON(createTextureGenerationResponseBody) {
    return JSON.stringify(exports.CreateTextureGenerationResponseBody$outboundSchema.parse(createTextureGenerationResponseBody));
}
exports.createTextureGenerationResponseBodyToJSON = createTextureGenerationResponseBodyToJSON;
function createTextureGenerationResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateTextureGenerationResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateTextureGenerationResponseBody' from JSON`);
}
exports.createTextureGenerationResponseBodyFromJSON = createTextureGenerationResponseBodyFromJSON;
/** @internal */
exports.CreateTextureGenerationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.CreateTextureGenerationResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.CreateTextureGenerationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.CreateTextureGenerationResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateTextureGenerationResponse$;
(function (CreateTextureGenerationResponse$) {
    /** @deprecated use `CreateTextureGenerationResponse$inboundSchema` instead. */
    CreateTextureGenerationResponse$.inboundSchema = exports.CreateTextureGenerationResponse$inboundSchema;
    /** @deprecated use `CreateTextureGenerationResponse$outboundSchema` instead. */
    CreateTextureGenerationResponse$.outboundSchema = exports.CreateTextureGenerationResponse$outboundSchema;
})(CreateTextureGenerationResponse$ || (exports.CreateTextureGenerationResponse$ = CreateTextureGenerationResponse$ = {}));
function createTextureGenerationResponseToJSON(createTextureGenerationResponse) {
    return JSON.stringify(exports.CreateTextureGenerationResponse$outboundSchema.parse(createTextureGenerationResponse));
}
exports.createTextureGenerationResponseToJSON = createTextureGenerationResponseToJSON;
function createTextureGenerationResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateTextureGenerationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateTextureGenerationResponse' from JSON`);
}
exports.createTextureGenerationResponseFromJSON = createTextureGenerationResponseFromJSON;
//# sourceMappingURL=createtexturegeneration.js.map