"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.performInstantRefineResponseFromJSON = exports.performInstantRefineResponseToJSON = exports.PerformInstantRefineResponse$ = exports.PerformInstantRefineResponse$outboundSchema = exports.PerformInstantRefineResponse$inboundSchema = exports.performInstantRefineResponseBodyFromJSON = exports.performInstantRefineResponseBodyToJSON = exports.PerformInstantRefineResponseBody$ = exports.PerformInstantRefineResponseBody$outboundSchema = exports.PerformInstantRefineResponseBody$inboundSchema = exports.performInstantRefineLcmGenerationOutputFromJSON = exports.performInstantRefineLcmGenerationOutputToJSON = exports.PerformInstantRefineLcmGenerationOutput$ = exports.PerformInstantRefineLcmGenerationOutput$outboundSchema = exports.PerformInstantRefineLcmGenerationOutput$inboundSchema = exports.performInstantRefineRequestBodyFromJSON = exports.performInstantRefineRequestBodyToJSON = exports.PerformInstantRefineRequestBody$ = exports.PerformInstantRefineRequestBody$outboundSchema = exports.PerformInstantRefineRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.PerformInstantRefineRequestBody$inboundSchema = z.object({
    guidance: z.nullable(z.number()).optional(),
    height: z.nullable(z.number().int().default(512)),
    imageDataUrl: z.string(),
    prompt: z.string(),
    requestTimestamp: z.string().optional(),
    seed: z.nullable(z.number().int()).optional(),
    steps: z.nullable(z.number().int()).optional(),
    strength: z.nullable(z.number()).optional(),
    style: z.nullable(shared.LcmGenerationStyle$inboundSchema).optional(),
    width: z.nullable(z.number().int().default(512)),
});
/** @internal */
exports.PerformInstantRefineRequestBody$outboundSchema = z.object({
    guidance: z.nullable(z.number()).optional(),
    height: z.nullable(z.number().int().default(512)),
    imageDataUrl: z.string(),
    prompt: z.string(),
    requestTimestamp: z.string().optional(),
    seed: z.nullable(z.number().int()).optional(),
    steps: z.nullable(z.number().int()).optional(),
    strength: z.nullable(z.number()).optional(),
    style: z.nullable(shared.LcmGenerationStyle$outboundSchema).optional(),
    width: z.nullable(z.number().int().default(512)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PerformInstantRefineRequestBody$;
(function (PerformInstantRefineRequestBody$) {
    /** @deprecated use `PerformInstantRefineRequestBody$inboundSchema` instead. */
    PerformInstantRefineRequestBody$.inboundSchema = exports.PerformInstantRefineRequestBody$inboundSchema;
    /** @deprecated use `PerformInstantRefineRequestBody$outboundSchema` instead. */
    PerformInstantRefineRequestBody$.outboundSchema = exports.PerformInstantRefineRequestBody$outboundSchema;
})(PerformInstantRefineRequestBody$ || (exports.PerformInstantRefineRequestBody$ = PerformInstantRefineRequestBody$ = {}));
function performInstantRefineRequestBodyToJSON(performInstantRefineRequestBody) {
    return JSON.stringify(exports.PerformInstantRefineRequestBody$outboundSchema.parse(performInstantRefineRequestBody));
}
exports.performInstantRefineRequestBodyToJSON = performInstantRefineRequestBodyToJSON;
function performInstantRefineRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PerformInstantRefineRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PerformInstantRefineRequestBody' from JSON`);
}
exports.performInstantRefineRequestBodyFromJSON = performInstantRefineRequestBodyFromJSON;
/** @internal */
exports.PerformInstantRefineLcmGenerationOutput$inboundSchema = z.object({
    apiCreditCost: z.nullable(z.number().int()).optional(),
    imageDataUrl: z.array(z.string()).optional(),
    requestTimestamp: z.string().optional(),
});
/** @internal */
exports.PerformInstantRefineLcmGenerationOutput$outboundSchema = z.object({
    apiCreditCost: z.nullable(z.number().int()).optional(),
    imageDataUrl: z.array(z.string()).optional(),
    requestTimestamp: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PerformInstantRefineLcmGenerationOutput$;
(function (PerformInstantRefineLcmGenerationOutput$) {
    /** @deprecated use `PerformInstantRefineLcmGenerationOutput$inboundSchema` instead. */
    PerformInstantRefineLcmGenerationOutput$.inboundSchema = exports.PerformInstantRefineLcmGenerationOutput$inboundSchema;
    /** @deprecated use `PerformInstantRefineLcmGenerationOutput$outboundSchema` instead. */
    PerformInstantRefineLcmGenerationOutput$.outboundSchema = exports.PerformInstantRefineLcmGenerationOutput$outboundSchema;
})(PerformInstantRefineLcmGenerationOutput$ || (exports.PerformInstantRefineLcmGenerationOutput$ = PerformInstantRefineLcmGenerationOutput$ = {}));
function performInstantRefineLcmGenerationOutputToJSON(performInstantRefineLcmGenerationOutput) {
    return JSON.stringify(exports.PerformInstantRefineLcmGenerationOutput$outboundSchema.parse(performInstantRefineLcmGenerationOutput));
}
exports.performInstantRefineLcmGenerationOutputToJSON = performInstantRefineLcmGenerationOutputToJSON;
function performInstantRefineLcmGenerationOutputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PerformInstantRefineLcmGenerationOutput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PerformInstantRefineLcmGenerationOutput' from JSON`);
}
exports.performInstantRefineLcmGenerationOutputFromJSON = performInstantRefineLcmGenerationOutputFromJSON;
/** @internal */
exports.PerformInstantRefineResponseBody$inboundSchema = z.object({
    lcmGenerationJob: z.nullable(z.lazy(() => exports.PerformInstantRefineLcmGenerationOutput$inboundSchema)).optional(),
});
/** @internal */
exports.PerformInstantRefineResponseBody$outboundSchema = z.object({
    lcmGenerationJob: z.nullable(z.lazy(() => exports.PerformInstantRefineLcmGenerationOutput$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PerformInstantRefineResponseBody$;
(function (PerformInstantRefineResponseBody$) {
    /** @deprecated use `PerformInstantRefineResponseBody$inboundSchema` instead. */
    PerformInstantRefineResponseBody$.inboundSchema = exports.PerformInstantRefineResponseBody$inboundSchema;
    /** @deprecated use `PerformInstantRefineResponseBody$outboundSchema` instead. */
    PerformInstantRefineResponseBody$.outboundSchema = exports.PerformInstantRefineResponseBody$outboundSchema;
})(PerformInstantRefineResponseBody$ || (exports.PerformInstantRefineResponseBody$ = PerformInstantRefineResponseBody$ = {}));
function performInstantRefineResponseBodyToJSON(performInstantRefineResponseBody) {
    return JSON.stringify(exports.PerformInstantRefineResponseBody$outboundSchema.parse(performInstantRefineResponseBody));
}
exports.performInstantRefineResponseBodyToJSON = performInstantRefineResponseBodyToJSON;
function performInstantRefineResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PerformInstantRefineResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PerformInstantRefineResponseBody' from JSON`);
}
exports.performInstantRefineResponseBodyFromJSON = performInstantRefineResponseBodyFromJSON;
/** @internal */
exports.PerformInstantRefineResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.PerformInstantRefineResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.PerformInstantRefineResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.PerformInstantRefineResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PerformInstantRefineResponse$;
(function (PerformInstantRefineResponse$) {
    /** @deprecated use `PerformInstantRefineResponse$inboundSchema` instead. */
    PerformInstantRefineResponse$.inboundSchema = exports.PerformInstantRefineResponse$inboundSchema;
    /** @deprecated use `PerformInstantRefineResponse$outboundSchema` instead. */
    PerformInstantRefineResponse$.outboundSchema = exports.PerformInstantRefineResponse$outboundSchema;
})(PerformInstantRefineResponse$ || (exports.PerformInstantRefineResponse$ = PerformInstantRefineResponse$ = {}));
function performInstantRefineResponseToJSON(performInstantRefineResponse) {
    return JSON.stringify(exports.PerformInstantRefineResponse$outboundSchema.parse(performInstantRefineResponse));
}
exports.performInstantRefineResponseToJSON = performInstantRefineResponseToJSON;
function performInstantRefineResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PerformInstantRefineResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PerformInstantRefineResponse' from JSON`);
}
exports.performInstantRefineResponseFromJSON = performInstantRefineResponseFromJSON;
//# sourceMappingURL=performinstantrefine.js.map