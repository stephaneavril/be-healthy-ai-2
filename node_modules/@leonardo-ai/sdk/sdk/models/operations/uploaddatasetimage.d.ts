import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Query parameters provided in the request body as a JSON object
 */
export type UploadDatasetImageRequestBody = {
    /**
     * Has to be png, jpg, jpeg, or webp.
     */
    extension: string;
};
export type UploadDatasetImageRequest = {
    /**
     * Query parameters provided in the request body as a JSON object
     */
    requestBody: UploadDatasetImageRequestBody;
    /**
     * _"datasetId" is required
     */
    datasetId: string;
};
export type DatasetUploadOutput = {
    fields?: string | null | undefined;
    id?: string | null | undefined;
    key?: string | null | undefined;
    url?: string | null | undefined;
};
/**
 * Responses for POST /datasets/{datasetId}/upload
 */
export type UploadDatasetImageResponseBody = {
    uploadDatasetImage?: DatasetUploadOutput | null | undefined;
};
export type UploadDatasetImageResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /datasets/{datasetId}/upload
     */
    object?: UploadDatasetImageResponseBody | undefined;
};
/** @internal */
export declare const UploadDatasetImageRequestBody$inboundSchema: z.ZodType<UploadDatasetImageRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageRequestBody$Outbound = {
    extension: string;
};
/** @internal */
export declare const UploadDatasetImageRequestBody$outboundSchema: z.ZodType<UploadDatasetImageRequestBody$Outbound, z.ZodTypeDef, UploadDatasetImageRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageRequestBody$ {
    /** @deprecated use `UploadDatasetImageRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageRequestBody$Outbound, z.ZodTypeDef, UploadDatasetImageRequestBody>;
    /** @deprecated use `UploadDatasetImageRequestBody$Outbound` instead. */
    type Outbound = UploadDatasetImageRequestBody$Outbound;
}
export declare function uploadDatasetImageRequestBodyToJSON(uploadDatasetImageRequestBody: UploadDatasetImageRequestBody): string;
export declare function uploadDatasetImageRequestBodyFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageRequestBody, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageRequest$inboundSchema: z.ZodType<UploadDatasetImageRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageRequest$Outbound = {
    RequestBody: UploadDatasetImageRequestBody$Outbound;
    datasetId: string;
};
/** @internal */
export declare const UploadDatasetImageRequest$outboundSchema: z.ZodType<UploadDatasetImageRequest$Outbound, z.ZodTypeDef, UploadDatasetImageRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageRequest$ {
    /** @deprecated use `UploadDatasetImageRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageRequest$Outbound, z.ZodTypeDef, UploadDatasetImageRequest>;
    /** @deprecated use `UploadDatasetImageRequest$Outbound` instead. */
    type Outbound = UploadDatasetImageRequest$Outbound;
}
export declare function uploadDatasetImageRequestToJSON(uploadDatasetImageRequest: UploadDatasetImageRequest): string;
export declare function uploadDatasetImageRequestFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageRequest, SDKValidationError>;
/** @internal */
export declare const DatasetUploadOutput$inboundSchema: z.ZodType<DatasetUploadOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type DatasetUploadOutput$Outbound = {
    fields?: string | null | undefined;
    id?: string | null | undefined;
    key?: string | null | undefined;
    url?: string | null | undefined;
};
/** @internal */
export declare const DatasetUploadOutput$outboundSchema: z.ZodType<DatasetUploadOutput$Outbound, z.ZodTypeDef, DatasetUploadOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DatasetUploadOutput$ {
    /** @deprecated use `DatasetUploadOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DatasetUploadOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `DatasetUploadOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DatasetUploadOutput$Outbound, z.ZodTypeDef, DatasetUploadOutput>;
    /** @deprecated use `DatasetUploadOutput$Outbound` instead. */
    type Outbound = DatasetUploadOutput$Outbound;
}
export declare function datasetUploadOutputToJSON(datasetUploadOutput: DatasetUploadOutput): string;
export declare function datasetUploadOutputFromJSON(jsonString: string): SafeParseResult<DatasetUploadOutput, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageResponseBody$inboundSchema: z.ZodType<UploadDatasetImageResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageResponseBody$Outbound = {
    uploadDatasetImage?: DatasetUploadOutput$Outbound | null | undefined;
};
/** @internal */
export declare const UploadDatasetImageResponseBody$outboundSchema: z.ZodType<UploadDatasetImageResponseBody$Outbound, z.ZodTypeDef, UploadDatasetImageResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageResponseBody$ {
    /** @deprecated use `UploadDatasetImageResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageResponseBody$Outbound, z.ZodTypeDef, UploadDatasetImageResponseBody>;
    /** @deprecated use `UploadDatasetImageResponseBody$Outbound` instead. */
    type Outbound = UploadDatasetImageResponseBody$Outbound;
}
export declare function uploadDatasetImageResponseBodyToJSON(uploadDatasetImageResponseBody: UploadDatasetImageResponseBody): string;
export declare function uploadDatasetImageResponseBodyFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageResponseBody, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageResponse$inboundSchema: z.ZodType<UploadDatasetImageResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: UploadDatasetImageResponseBody$Outbound | undefined;
};
/** @internal */
export declare const UploadDatasetImageResponse$outboundSchema: z.ZodType<UploadDatasetImageResponse$Outbound, z.ZodTypeDef, UploadDatasetImageResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageResponse$ {
    /** @deprecated use `UploadDatasetImageResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageResponse$Outbound, z.ZodTypeDef, UploadDatasetImageResponse>;
    /** @deprecated use `UploadDatasetImageResponse$Outbound` instead. */
    type Outbound = UploadDatasetImageResponse$Outbound;
}
export declare function uploadDatasetImageResponseToJSON(uploadDatasetImageResponse: UploadDatasetImageResponse): string;
export declare function uploadDatasetImageResponseFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageResponse, SDKValidationError>;
//# sourceMappingURL=uploaddatasetimage.d.ts.map