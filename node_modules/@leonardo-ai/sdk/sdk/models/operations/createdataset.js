"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDatasetResponseFromJSON = exports.createDatasetResponseToJSON = exports.CreateDatasetResponse$ = exports.CreateDatasetResponse$outboundSchema = exports.CreateDatasetResponse$inboundSchema = exports.createDatasetResponseBodyFromJSON = exports.createDatasetResponseBodyToJSON = exports.CreateDatasetResponseBody$ = exports.CreateDatasetResponseBody$outboundSchema = exports.CreateDatasetResponseBody$inboundSchema = exports.datasetsFromJSON = exports.datasetsToJSON = exports.Datasets$ = exports.Datasets$outboundSchema = exports.Datasets$inboundSchema = exports.createDatasetRequestBodyFromJSON = exports.createDatasetRequestBodyToJSON = exports.CreateDatasetRequestBody$ = exports.CreateDatasetRequestBody$outboundSchema = exports.CreateDatasetRequestBody$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.CreateDatasetRequestBody$inboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    name: z.string(),
});
/** @internal */
exports.CreateDatasetRequestBody$outboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateDatasetRequestBody$;
(function (CreateDatasetRequestBody$) {
    /** @deprecated use `CreateDatasetRequestBody$inboundSchema` instead. */
    CreateDatasetRequestBody$.inboundSchema = exports.CreateDatasetRequestBody$inboundSchema;
    /** @deprecated use `CreateDatasetRequestBody$outboundSchema` instead. */
    CreateDatasetRequestBody$.outboundSchema = exports.CreateDatasetRequestBody$outboundSchema;
})(CreateDatasetRequestBody$ || (exports.CreateDatasetRequestBody$ = CreateDatasetRequestBody$ = {}));
function createDatasetRequestBodyToJSON(createDatasetRequestBody) {
    return JSON.stringify(exports.CreateDatasetRequestBody$outboundSchema.parse(createDatasetRequestBody));
}
exports.createDatasetRequestBodyToJSON = createDatasetRequestBodyToJSON;
function createDatasetRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateDatasetRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateDatasetRequestBody' from JSON`);
}
exports.createDatasetRequestBodyFromJSON = createDatasetRequestBodyFromJSON;
/** @internal */
exports.Datasets$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
exports.Datasets$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Datasets$;
(function (Datasets$) {
    /** @deprecated use `Datasets$inboundSchema` instead. */
    Datasets$.inboundSchema = exports.Datasets$inboundSchema;
    /** @deprecated use `Datasets$outboundSchema` instead. */
    Datasets$.outboundSchema = exports.Datasets$outboundSchema;
})(Datasets$ || (exports.Datasets$ = Datasets$ = {}));
function datasetsToJSON(datasets) {
    return JSON.stringify(exports.Datasets$outboundSchema.parse(datasets));
}
exports.datasetsToJSON = datasetsToJSON;
function datasetsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Datasets$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Datasets' from JSON`);
}
exports.datasetsFromJSON = datasetsFromJSON;
/** @internal */
exports.CreateDatasetResponseBody$inboundSchema = z.object({
    insert_datasets_one: z.nullable(z.lazy(() => exports.Datasets$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "insert_datasets_one": "insertDatasetsOne",
    });
});
/** @internal */
exports.CreateDatasetResponseBody$outboundSchema = z.object({
    insertDatasetsOne: z.nullable(z.lazy(() => exports.Datasets$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        insertDatasetsOne: "insert_datasets_one",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateDatasetResponseBody$;
(function (CreateDatasetResponseBody$) {
    /** @deprecated use `CreateDatasetResponseBody$inboundSchema` instead. */
    CreateDatasetResponseBody$.inboundSchema = exports.CreateDatasetResponseBody$inboundSchema;
    /** @deprecated use `CreateDatasetResponseBody$outboundSchema` instead. */
    CreateDatasetResponseBody$.outboundSchema = exports.CreateDatasetResponseBody$outboundSchema;
})(CreateDatasetResponseBody$ || (exports.CreateDatasetResponseBody$ = CreateDatasetResponseBody$ = {}));
function createDatasetResponseBodyToJSON(createDatasetResponseBody) {
    return JSON.stringify(exports.CreateDatasetResponseBody$outboundSchema.parse(createDatasetResponseBody));
}
exports.createDatasetResponseBodyToJSON = createDatasetResponseBodyToJSON;
function createDatasetResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateDatasetResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateDatasetResponseBody' from JSON`);
}
exports.createDatasetResponseBodyFromJSON = createDatasetResponseBodyFromJSON;
/** @internal */
exports.CreateDatasetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.CreateDatasetResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.CreateDatasetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.CreateDatasetResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateDatasetResponse$;
(function (CreateDatasetResponse$) {
    /** @deprecated use `CreateDatasetResponse$inboundSchema` instead. */
    CreateDatasetResponse$.inboundSchema = exports.CreateDatasetResponse$inboundSchema;
    /** @deprecated use `CreateDatasetResponse$outboundSchema` instead. */
    CreateDatasetResponse$.outboundSchema = exports.CreateDatasetResponse$outboundSchema;
})(CreateDatasetResponse$ || (exports.CreateDatasetResponse$ = CreateDatasetResponse$ = {}));
function createDatasetResponseToJSON(createDatasetResponse) {
    return JSON.stringify(exports.CreateDatasetResponse$outboundSchema.parse(createDatasetResponse));
}
exports.createDatasetResponseToJSON = createDatasetResponseToJSON;
function createDatasetResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateDatasetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateDatasetResponse' from JSON`);
}
exports.createDatasetResponseFromJSON = createDatasetResponseFromJSON;
//# sourceMappingURL=createdataset.js.map