import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5.
 */
export declare enum CreateModelSdVersions {
    V15 = "v1_5",
    V2 = "v2"
}
/**
 * Query parameters to be provided in the request body as a JSON object
 */
export type CreateModelRequestBody = {
    /**
     * The ID of the dataset to train the model on.
     */
    datasetId: string;
    /**
     * The description of the model.
     */
    description?: string | null | undefined;
    /**
     * The instance prompt to use during training.
     */
    instancePrompt: string;
    /**
     * The category the most accurately reflects the model.
     */
    modelType?: shared.CustomModelType | undefined;
    /**
     * The name of the model.
     */
    name: string;
    /**
     * Whether or not the model is NSFW.
     */
    nsfw?: boolean | null | undefined;
    /**
     * The resolution for training. Must be 512 or 768.
     */
    resolution?: number | null | undefined;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5.
     */
    sdVersion?: CreateModelSdVersions | null | undefined;
    /**
     * When training using the PIXEL_ART model type, this influences the training strength.
     */
    strength?: shared.Strength | undefined;
};
export type CreateModelSDTrainingOutput = {
    /**
     * API Credits Cost for Model Training. Available for Production API Users.
     */
    apiCreditCost?: number | null | undefined;
    customModelId?: string | undefined;
};
/**
 * Responses for POST /models
 */
export type CreateModelResponseBody = {
    sdTrainingJob?: CreateModelSDTrainingOutput | null | undefined;
};
export type CreateModelResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /models
     */
    object?: CreateModelResponseBody | undefined;
};
/** @internal */
export declare const CreateModelSdVersions$inboundSchema: z.ZodNativeEnum<typeof CreateModelSdVersions>;
/** @internal */
export declare const CreateModelSdVersions$outboundSchema: z.ZodNativeEnum<typeof CreateModelSdVersions>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateModelSdVersions$ {
    /** @deprecated use `CreateModelSdVersions$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof CreateModelSdVersions>;
    /** @deprecated use `CreateModelSdVersions$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof CreateModelSdVersions>;
}
/** @internal */
export declare const CreateModelRequestBody$inboundSchema: z.ZodType<CreateModelRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateModelRequestBody$Outbound = {
    datasetId: string;
    description: string | null;
    instance_prompt: string;
    modelType: string;
    name: string;
    nsfw: boolean | null;
    resolution: number | null;
    sd_version?: string | null | undefined;
    strength: string;
};
/** @internal */
export declare const CreateModelRequestBody$outboundSchema: z.ZodType<CreateModelRequestBody$Outbound, z.ZodTypeDef, CreateModelRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateModelRequestBody$ {
    /** @deprecated use `CreateModelRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateModelRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateModelRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateModelRequestBody$Outbound, z.ZodTypeDef, CreateModelRequestBody>;
    /** @deprecated use `CreateModelRequestBody$Outbound` instead. */
    type Outbound = CreateModelRequestBody$Outbound;
}
export declare function createModelRequestBodyToJSON(createModelRequestBody: CreateModelRequestBody): string;
export declare function createModelRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateModelRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateModelSDTrainingOutput$inboundSchema: z.ZodType<CreateModelSDTrainingOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateModelSDTrainingOutput$Outbound = {
    apiCreditCost?: number | null | undefined;
    customModelId?: string | undefined;
};
/** @internal */
export declare const CreateModelSDTrainingOutput$outboundSchema: z.ZodType<CreateModelSDTrainingOutput$Outbound, z.ZodTypeDef, CreateModelSDTrainingOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateModelSDTrainingOutput$ {
    /** @deprecated use `CreateModelSDTrainingOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateModelSDTrainingOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateModelSDTrainingOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateModelSDTrainingOutput$Outbound, z.ZodTypeDef, CreateModelSDTrainingOutput>;
    /** @deprecated use `CreateModelSDTrainingOutput$Outbound` instead. */
    type Outbound = CreateModelSDTrainingOutput$Outbound;
}
export declare function createModelSDTrainingOutputToJSON(createModelSDTrainingOutput: CreateModelSDTrainingOutput): string;
export declare function createModelSDTrainingOutputFromJSON(jsonString: string): SafeParseResult<CreateModelSDTrainingOutput, SDKValidationError>;
/** @internal */
export declare const CreateModelResponseBody$inboundSchema: z.ZodType<CreateModelResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateModelResponseBody$Outbound = {
    sdTrainingJob?: CreateModelSDTrainingOutput$Outbound | null | undefined;
};
/** @internal */
export declare const CreateModelResponseBody$outboundSchema: z.ZodType<CreateModelResponseBody$Outbound, z.ZodTypeDef, CreateModelResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateModelResponseBody$ {
    /** @deprecated use `CreateModelResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateModelResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateModelResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateModelResponseBody$Outbound, z.ZodTypeDef, CreateModelResponseBody>;
    /** @deprecated use `CreateModelResponseBody$Outbound` instead. */
    type Outbound = CreateModelResponseBody$Outbound;
}
export declare function createModelResponseBodyToJSON(createModelResponseBody: CreateModelResponseBody): string;
export declare function createModelResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateModelResponseBody, SDKValidationError>;
/** @internal */
export declare const CreateModelResponse$inboundSchema: z.ZodType<CreateModelResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateModelResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: CreateModelResponseBody$Outbound | undefined;
};
/** @internal */
export declare const CreateModelResponse$outboundSchema: z.ZodType<CreateModelResponse$Outbound, z.ZodTypeDef, CreateModelResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateModelResponse$ {
    /** @deprecated use `CreateModelResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateModelResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateModelResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateModelResponse$Outbound, z.ZodTypeDef, CreateModelResponse>;
    /** @deprecated use `CreateModelResponse$Outbound` instead. */
    type Outbound = CreateModelResponse$Outbound;
}
export declare function createModelResponseToJSON(createModelResponse: CreateModelResponse): string;
export declare function createModelResponseFromJSON(jsonString: string): SafeParseResult<CreateModelResponse, SDKValidationError>;
//# sourceMappingURL=createmodel.d.ts.map