import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Query parameters to be provided in the request body as a JSON object
 */
export type UploadDatasetImageFromGenRequestBody = {
    /**
     * The ID of the image to upload to the dataset.
     */
    generatedImageId: string;
};
export type UploadDatasetImageFromGenRequest = {
    /**
     * Query parameters to be provided in the request body as a JSON object
     */
    requestBody: UploadDatasetImageFromGenRequestBody;
    /**
     * The ID of the dataset to upload the image to.
     */
    datasetId: string;
};
export type DatasetGenUploadOutput = {
    id?: string | null | undefined;
};
/**
 * Responses for POST /datasets/{datasetId}/upload/gen
 */
export type UploadDatasetImageFromGenResponseBody = {
    uploadDatasetImageFromGen?: DatasetGenUploadOutput | null | undefined;
};
export type UploadDatasetImageFromGenResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /datasets/{datasetId}/upload/gen
     */
    object?: UploadDatasetImageFromGenResponseBody | undefined;
};
/** @internal */
export declare const UploadDatasetImageFromGenRequestBody$inboundSchema: z.ZodType<UploadDatasetImageFromGenRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageFromGenRequestBody$Outbound = {
    generatedImageId: string;
};
/** @internal */
export declare const UploadDatasetImageFromGenRequestBody$outboundSchema: z.ZodType<UploadDatasetImageFromGenRequestBody$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageFromGenRequestBody$ {
    /** @deprecated use `UploadDatasetImageFromGenRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageFromGenRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageFromGenRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageFromGenRequestBody$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenRequestBody>;
    /** @deprecated use `UploadDatasetImageFromGenRequestBody$Outbound` instead. */
    type Outbound = UploadDatasetImageFromGenRequestBody$Outbound;
}
export declare function uploadDatasetImageFromGenRequestBodyToJSON(uploadDatasetImageFromGenRequestBody: UploadDatasetImageFromGenRequestBody): string;
export declare function uploadDatasetImageFromGenRequestBodyFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageFromGenRequestBody, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageFromGenRequest$inboundSchema: z.ZodType<UploadDatasetImageFromGenRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageFromGenRequest$Outbound = {
    RequestBody: UploadDatasetImageFromGenRequestBody$Outbound;
    datasetId: string;
};
/** @internal */
export declare const UploadDatasetImageFromGenRequest$outboundSchema: z.ZodType<UploadDatasetImageFromGenRequest$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageFromGenRequest$ {
    /** @deprecated use `UploadDatasetImageFromGenRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageFromGenRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageFromGenRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageFromGenRequest$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenRequest>;
    /** @deprecated use `UploadDatasetImageFromGenRequest$Outbound` instead. */
    type Outbound = UploadDatasetImageFromGenRequest$Outbound;
}
export declare function uploadDatasetImageFromGenRequestToJSON(uploadDatasetImageFromGenRequest: UploadDatasetImageFromGenRequest): string;
export declare function uploadDatasetImageFromGenRequestFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageFromGenRequest, SDKValidationError>;
/** @internal */
export declare const DatasetGenUploadOutput$inboundSchema: z.ZodType<DatasetGenUploadOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type DatasetGenUploadOutput$Outbound = {
    id?: string | null | undefined;
};
/** @internal */
export declare const DatasetGenUploadOutput$outboundSchema: z.ZodType<DatasetGenUploadOutput$Outbound, z.ZodTypeDef, DatasetGenUploadOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DatasetGenUploadOutput$ {
    /** @deprecated use `DatasetGenUploadOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DatasetGenUploadOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `DatasetGenUploadOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DatasetGenUploadOutput$Outbound, z.ZodTypeDef, DatasetGenUploadOutput>;
    /** @deprecated use `DatasetGenUploadOutput$Outbound` instead. */
    type Outbound = DatasetGenUploadOutput$Outbound;
}
export declare function datasetGenUploadOutputToJSON(datasetGenUploadOutput: DatasetGenUploadOutput): string;
export declare function datasetGenUploadOutputFromJSON(jsonString: string): SafeParseResult<DatasetGenUploadOutput, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageFromGenResponseBody$inboundSchema: z.ZodType<UploadDatasetImageFromGenResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageFromGenResponseBody$Outbound = {
    uploadDatasetImageFromGen?: DatasetGenUploadOutput$Outbound | null | undefined;
};
/** @internal */
export declare const UploadDatasetImageFromGenResponseBody$outboundSchema: z.ZodType<UploadDatasetImageFromGenResponseBody$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageFromGenResponseBody$ {
    /** @deprecated use `UploadDatasetImageFromGenResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageFromGenResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageFromGenResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageFromGenResponseBody$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenResponseBody>;
    /** @deprecated use `UploadDatasetImageFromGenResponseBody$Outbound` instead. */
    type Outbound = UploadDatasetImageFromGenResponseBody$Outbound;
}
export declare function uploadDatasetImageFromGenResponseBodyToJSON(uploadDatasetImageFromGenResponseBody: UploadDatasetImageFromGenResponseBody): string;
export declare function uploadDatasetImageFromGenResponseBodyFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageFromGenResponseBody, SDKValidationError>;
/** @internal */
export declare const UploadDatasetImageFromGenResponse$inboundSchema: z.ZodType<UploadDatasetImageFromGenResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadDatasetImageFromGenResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: UploadDatasetImageFromGenResponseBody$Outbound | undefined;
};
/** @internal */
export declare const UploadDatasetImageFromGenResponse$outboundSchema: z.ZodType<UploadDatasetImageFromGenResponse$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadDatasetImageFromGenResponse$ {
    /** @deprecated use `UploadDatasetImageFromGenResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadDatasetImageFromGenResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadDatasetImageFromGenResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadDatasetImageFromGenResponse$Outbound, z.ZodTypeDef, UploadDatasetImageFromGenResponse>;
    /** @deprecated use `UploadDatasetImageFromGenResponse$Outbound` instead. */
    type Outbound = UploadDatasetImageFromGenResponse$Outbound;
}
export declare function uploadDatasetImageFromGenResponseToJSON(uploadDatasetImageFromGenResponse: UploadDatasetImageFromGenResponse): string;
export declare function uploadDatasetImageFromGenResponseFromJSON(jsonString: string): SafeParseResult<UploadDatasetImageFromGenResponse, SDKValidationError>;
//# sourceMappingURL=uploaddatasetimagefromgen.d.ts.map