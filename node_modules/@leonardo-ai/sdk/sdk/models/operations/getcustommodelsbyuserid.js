"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCustomModelsByUserIdResponseFromJSON = exports.getCustomModelsByUserIdResponseToJSON = exports.GetCustomModelsByUserIdResponse$ = exports.GetCustomModelsByUserIdResponse$outboundSchema = exports.GetCustomModelsByUserIdResponse$inboundSchema = exports.getCustomModelsByUserIdResponseBodyFromJSON = exports.getCustomModelsByUserIdResponseBodyToJSON = exports.GetCustomModelsByUserIdResponseBody$ = exports.GetCustomModelsByUserIdResponseBody$outboundSchema = exports.GetCustomModelsByUserIdResponseBody$inboundSchema = exports.getCustomModelsByUserIdCustomModelsFromJSON = exports.getCustomModelsByUserIdCustomModelsToJSON = exports.GetCustomModelsByUserIdCustomModels$ = exports.GetCustomModelsByUserIdCustomModels$outboundSchema = exports.GetCustomModelsByUserIdCustomModels$inboundSchema = exports.getCustomModelsByUserIdRequestFromJSON = exports.getCustomModelsByUserIdRequestToJSON = exports.GetCustomModelsByUserIdRequest$ = exports.GetCustomModelsByUserIdRequest$outboundSchema = exports.GetCustomModelsByUserIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.GetCustomModelsByUserIdRequest$inboundSchema = z.object({
    userId: z.string(),
});
/** @internal */
exports.GetCustomModelsByUserIdRequest$outboundSchema = z.object({
    userId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCustomModelsByUserIdRequest$;
(function (GetCustomModelsByUserIdRequest$) {
    /** @deprecated use `GetCustomModelsByUserIdRequest$inboundSchema` instead. */
    GetCustomModelsByUserIdRequest$.inboundSchema = exports.GetCustomModelsByUserIdRequest$inboundSchema;
    /** @deprecated use `GetCustomModelsByUserIdRequest$outboundSchema` instead. */
    GetCustomModelsByUserIdRequest$.outboundSchema = exports.GetCustomModelsByUserIdRequest$outboundSchema;
})(GetCustomModelsByUserIdRequest$ || (exports.GetCustomModelsByUserIdRequest$ = GetCustomModelsByUserIdRequest$ = {}));
function getCustomModelsByUserIdRequestToJSON(getCustomModelsByUserIdRequest) {
    return JSON.stringify(exports.GetCustomModelsByUserIdRequest$outboundSchema.parse(getCustomModelsByUserIdRequest));
}
exports.getCustomModelsByUserIdRequestToJSON = getCustomModelsByUserIdRequestToJSON;
function getCustomModelsByUserIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCustomModelsByUserIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomModelsByUserIdRequest' from JSON`);
}
exports.getCustomModelsByUserIdRequestFromJSON = getCustomModelsByUserIdRequestFromJSON;
/** @internal */
exports.GetCustomModelsByUserIdCustomModels$inboundSchema = z.object({
    createdAt: z.string().optional(),
    description: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    instancePrompt: z.nullable(z.string()).optional(),
    modelHeight: z.number().int().optional(),
    modelWidth: z.number().int().optional(),
    name: z.string().optional(),
    public: z.boolean().optional(),
    sdVersion: shared.SdVersions$inboundSchema.optional(),
    status: shared.JobStatus$inboundSchema.optional(),
    type: shared.CustomModelType$inboundSchema.default(shared.CustomModelType.General),
    updatedAt: z.string().optional(),
});
/** @internal */
exports.GetCustomModelsByUserIdCustomModels$outboundSchema = z.object({
    createdAt: z.string().optional(),
    description: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    instancePrompt: z.nullable(z.string()).optional(),
    modelHeight: z.number().int().optional(),
    modelWidth: z.number().int().optional(),
    name: z.string().optional(),
    public: z.boolean().optional(),
    sdVersion: shared.SdVersions$outboundSchema.optional(),
    status: shared.JobStatus$outboundSchema.optional(),
    type: shared.CustomModelType$outboundSchema.default(shared.CustomModelType.General),
    updatedAt: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCustomModelsByUserIdCustomModels$;
(function (GetCustomModelsByUserIdCustomModels$) {
    /** @deprecated use `GetCustomModelsByUserIdCustomModels$inboundSchema` instead. */
    GetCustomModelsByUserIdCustomModels$.inboundSchema = exports.GetCustomModelsByUserIdCustomModels$inboundSchema;
    /** @deprecated use `GetCustomModelsByUserIdCustomModels$outboundSchema` instead. */
    GetCustomModelsByUserIdCustomModels$.outboundSchema = exports.GetCustomModelsByUserIdCustomModels$outboundSchema;
})(GetCustomModelsByUserIdCustomModels$ || (exports.GetCustomModelsByUserIdCustomModels$ = GetCustomModelsByUserIdCustomModels$ = {}));
function getCustomModelsByUserIdCustomModelsToJSON(getCustomModelsByUserIdCustomModels) {
    return JSON.stringify(exports.GetCustomModelsByUserIdCustomModels$outboundSchema.parse(getCustomModelsByUserIdCustomModels));
}
exports.getCustomModelsByUserIdCustomModelsToJSON = getCustomModelsByUserIdCustomModelsToJSON;
function getCustomModelsByUserIdCustomModelsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCustomModelsByUserIdCustomModels$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomModelsByUserIdCustomModels' from JSON`);
}
exports.getCustomModelsByUserIdCustomModelsFromJSON = getCustomModelsByUserIdCustomModelsFromJSON;
/** @internal */
exports.GetCustomModelsByUserIdResponseBody$inboundSchema = z.object({
    custom_models: z.nullable(z.array(z.lazy(() => exports.GetCustomModelsByUserIdCustomModels$inboundSchema))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "custom_models": "customModels",
    });
});
/** @internal */
exports.GetCustomModelsByUserIdResponseBody$outboundSchema = z.object({
    customModels: z.nullable(z.array(z.lazy(() => exports.GetCustomModelsByUserIdCustomModels$outboundSchema))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        customModels: "custom_models",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCustomModelsByUserIdResponseBody$;
(function (GetCustomModelsByUserIdResponseBody$) {
    /** @deprecated use `GetCustomModelsByUserIdResponseBody$inboundSchema` instead. */
    GetCustomModelsByUserIdResponseBody$.inboundSchema = exports.GetCustomModelsByUserIdResponseBody$inboundSchema;
    /** @deprecated use `GetCustomModelsByUserIdResponseBody$outboundSchema` instead. */
    GetCustomModelsByUserIdResponseBody$.outboundSchema = exports.GetCustomModelsByUserIdResponseBody$outboundSchema;
})(GetCustomModelsByUserIdResponseBody$ || (exports.GetCustomModelsByUserIdResponseBody$ = GetCustomModelsByUserIdResponseBody$ = {}));
function getCustomModelsByUserIdResponseBodyToJSON(getCustomModelsByUserIdResponseBody) {
    return JSON.stringify(exports.GetCustomModelsByUserIdResponseBody$outboundSchema.parse(getCustomModelsByUserIdResponseBody));
}
exports.getCustomModelsByUserIdResponseBodyToJSON = getCustomModelsByUserIdResponseBodyToJSON;
function getCustomModelsByUserIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCustomModelsByUserIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomModelsByUserIdResponseBody' from JSON`);
}
exports.getCustomModelsByUserIdResponseBodyFromJSON = getCustomModelsByUserIdResponseBodyFromJSON;
/** @internal */
exports.GetCustomModelsByUserIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.GetCustomModelsByUserIdResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.GetCustomModelsByUserIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.GetCustomModelsByUserIdResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCustomModelsByUserIdResponse$;
(function (GetCustomModelsByUserIdResponse$) {
    /** @deprecated use `GetCustomModelsByUserIdResponse$inboundSchema` instead. */
    GetCustomModelsByUserIdResponse$.inboundSchema = exports.GetCustomModelsByUserIdResponse$inboundSchema;
    /** @deprecated use `GetCustomModelsByUserIdResponse$outboundSchema` instead. */
    GetCustomModelsByUserIdResponse$.outboundSchema = exports.GetCustomModelsByUserIdResponse$outboundSchema;
})(GetCustomModelsByUserIdResponse$ || (exports.GetCustomModelsByUserIdResponse$ = GetCustomModelsByUserIdResponse$ = {}));
function getCustomModelsByUserIdResponseToJSON(getCustomModelsByUserIdResponse) {
    return JSON.stringify(exports.GetCustomModelsByUserIdResponse$outboundSchema.parse(getCustomModelsByUserIdResponse));
}
exports.getCustomModelsByUserIdResponseToJSON = getCustomModelsByUserIdResponseToJSON;
function getCustomModelsByUserIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCustomModelsByUserIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomModelsByUserIdResponse' from JSON`);
}
exports.getCustomModelsByUserIdResponseFromJSON = getCustomModelsByUserIdResponseFromJSON;
//# sourceMappingURL=getcustommodelsbyuserid.js.map