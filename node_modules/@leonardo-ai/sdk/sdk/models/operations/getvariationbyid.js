"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVariationByIdResponseFromJSON = exports.getVariationByIdResponseToJSON = exports.GetVariationByIdResponse$ = exports.GetVariationByIdResponse$outboundSchema = exports.GetVariationByIdResponse$inboundSchema = exports.getVariationByIdResponseBodyFromJSON = exports.getVariationByIdResponseBodyToJSON = exports.GetVariationByIdResponseBody$ = exports.GetVariationByIdResponseBody$outboundSchema = exports.GetVariationByIdResponseBody$inboundSchema = exports.generatedImageVariationGenericFromJSON = exports.generatedImageVariationGenericToJSON = exports.GeneratedImageVariationGeneric$ = exports.GeneratedImageVariationGeneric$outboundSchema = exports.GeneratedImageVariationGeneric$inboundSchema = exports.getVariationByIdRequestFromJSON = exports.getVariationByIdRequestToJSON = exports.GetVariationByIdRequest$ = exports.GetVariationByIdRequest$outboundSchema = exports.GetVariationByIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.GetVariationByIdRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.GetVariationByIdRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetVariationByIdRequest$;
(function (GetVariationByIdRequest$) {
    /** @deprecated use `GetVariationByIdRequest$inboundSchema` instead. */
    GetVariationByIdRequest$.inboundSchema = exports.GetVariationByIdRequest$inboundSchema;
    /** @deprecated use `GetVariationByIdRequest$outboundSchema` instead. */
    GetVariationByIdRequest$.outboundSchema = exports.GetVariationByIdRequest$outboundSchema;
})(GetVariationByIdRequest$ || (exports.GetVariationByIdRequest$ = GetVariationByIdRequest$ = {}));
function getVariationByIdRequestToJSON(getVariationByIdRequest) {
    return JSON.stringify(exports.GetVariationByIdRequest$outboundSchema.parse(getVariationByIdRequest));
}
exports.getVariationByIdRequestToJSON = getVariationByIdRequestToJSON;
function getVariationByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetVariationByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetVariationByIdRequest' from JSON`);
}
exports.getVariationByIdRequestFromJSON = getVariationByIdRequestFromJSON;
/** @internal */
exports.GeneratedImageVariationGeneric$inboundSchema = z.object({
    createdAt: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    status: shared.JobStatus$inboundSchema.optional(),
    transformType: shared.VariationType$inboundSchema.optional(),
    url: z.nullable(z.string()).optional(),
});
/** @internal */
exports.GeneratedImageVariationGeneric$outboundSchema = z.object({
    createdAt: z.string().optional(),
    id: z.nullable(z.string()).optional(),
    status: shared.JobStatus$outboundSchema.optional(),
    transformType: shared.VariationType$outboundSchema.optional(),
    url: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GeneratedImageVariationGeneric$;
(function (GeneratedImageVariationGeneric$) {
    /** @deprecated use `GeneratedImageVariationGeneric$inboundSchema` instead. */
    GeneratedImageVariationGeneric$.inboundSchema = exports.GeneratedImageVariationGeneric$inboundSchema;
    /** @deprecated use `GeneratedImageVariationGeneric$outboundSchema` instead. */
    GeneratedImageVariationGeneric$.outboundSchema = exports.GeneratedImageVariationGeneric$outboundSchema;
})(GeneratedImageVariationGeneric$ || (exports.GeneratedImageVariationGeneric$ = GeneratedImageVariationGeneric$ = {}));
function generatedImageVariationGenericToJSON(generatedImageVariationGeneric) {
    return JSON.stringify(exports.GeneratedImageVariationGeneric$outboundSchema.parse(generatedImageVariationGeneric));
}
exports.generatedImageVariationGenericToJSON = generatedImageVariationGenericToJSON;
function generatedImageVariationGenericFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GeneratedImageVariationGeneric$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GeneratedImageVariationGeneric' from JSON`);
}
exports.generatedImageVariationGenericFromJSON = generatedImageVariationGenericFromJSON;
/** @internal */
exports.GetVariationByIdResponseBody$inboundSchema = z.object({
    generated_image_variation_generic: z.array(z.lazy(() => exports.GeneratedImageVariationGeneric$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "generated_image_variation_generic": "generatedImageVariationGeneric",
    });
});
/** @internal */
exports.GetVariationByIdResponseBody$outboundSchema = z.object({
    generatedImageVariationGeneric: z.array(z.lazy(() => exports.GeneratedImageVariationGeneric$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        generatedImageVariationGeneric: "generated_image_variation_generic",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetVariationByIdResponseBody$;
(function (GetVariationByIdResponseBody$) {
    /** @deprecated use `GetVariationByIdResponseBody$inboundSchema` instead. */
    GetVariationByIdResponseBody$.inboundSchema = exports.GetVariationByIdResponseBody$inboundSchema;
    /** @deprecated use `GetVariationByIdResponseBody$outboundSchema` instead. */
    GetVariationByIdResponseBody$.outboundSchema = exports.GetVariationByIdResponseBody$outboundSchema;
})(GetVariationByIdResponseBody$ || (exports.GetVariationByIdResponseBody$ = GetVariationByIdResponseBody$ = {}));
function getVariationByIdResponseBodyToJSON(getVariationByIdResponseBody) {
    return JSON.stringify(exports.GetVariationByIdResponseBody$outboundSchema.parse(getVariationByIdResponseBody));
}
exports.getVariationByIdResponseBodyToJSON = getVariationByIdResponseBodyToJSON;
function getVariationByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetVariationByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetVariationByIdResponseBody' from JSON`);
}
exports.getVariationByIdResponseBodyFromJSON = getVariationByIdResponseBodyFromJSON;
/** @internal */
exports.GetVariationByIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.GetVariationByIdResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.GetVariationByIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.GetVariationByIdResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetVariationByIdResponse$;
(function (GetVariationByIdResponse$) {
    /** @deprecated use `GetVariationByIdResponse$inboundSchema` instead. */
    GetVariationByIdResponse$.inboundSchema = exports.GetVariationByIdResponse$inboundSchema;
    /** @deprecated use `GetVariationByIdResponse$outboundSchema` instead. */
    GetVariationByIdResponse$.outboundSchema = exports.GetVariationByIdResponse$outboundSchema;
})(GetVariationByIdResponse$ || (exports.GetVariationByIdResponse$ = GetVariationByIdResponse$ = {}));
function getVariationByIdResponseToJSON(getVariationByIdResponse) {
    return JSON.stringify(exports.GetVariationByIdResponse$outboundSchema.parse(getVariationByIdResponse));
}
exports.getVariationByIdResponseToJSON = getVariationByIdResponseToJSON;
function getVariationByIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetVariationByIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetVariationByIdResponse' from JSON`);
}
exports.getVariationByIdResponseFromJSON = getVariationByIdResponseFromJSON;
//# sourceMappingURL=getvariationbyid.js.map