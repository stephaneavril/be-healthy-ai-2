"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGenerationsByUserIdResponseFromJSON = exports.getGenerationsByUserIdResponseToJSON = exports.GetGenerationsByUserIdResponse$ = exports.GetGenerationsByUserIdResponse$outboundSchema = exports.GetGenerationsByUserIdResponse$inboundSchema = exports.getGenerationsByUserIdResponseBodyFromJSON = exports.getGenerationsByUserIdResponseBodyToJSON = exports.GetGenerationsByUserIdResponseBody$ = exports.GetGenerationsByUserIdResponseBody$outboundSchema = exports.GetGenerationsByUserIdResponseBody$inboundSchema = exports.getGenerationsByUserIdGenerationsFromJSON = exports.getGenerationsByUserIdGenerationsToJSON = exports.GetGenerationsByUserIdGenerations$ = exports.GetGenerationsByUserIdGenerations$outboundSchema = exports.GetGenerationsByUserIdGenerations$inboundSchema = exports.getGenerationsByUserIdGenerationElementsFromJSON = exports.getGenerationsByUserIdGenerationElementsToJSON = exports.GetGenerationsByUserIdGenerationElements$ = exports.GetGenerationsByUserIdGenerationElements$outboundSchema = exports.GetGenerationsByUserIdGenerationElements$inboundSchema = exports.elementsFromJSON = exports.elementsToJSON = exports.Elements$ = exports.Elements$outboundSchema = exports.Elements$inboundSchema = exports.getGenerationsByUserIdGeneratedImagesFromJSON = exports.getGenerationsByUserIdGeneratedImagesToJSON = exports.GetGenerationsByUserIdGeneratedImages$ = exports.GetGenerationsByUserIdGeneratedImages$outboundSchema = exports.GetGenerationsByUserIdGeneratedImages$inboundSchema = exports.getGenerationsByUserIdGeneratedImageVariationGenericFromJSON = exports.getGenerationsByUserIdGeneratedImageVariationGenericToJSON = exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$ = exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema = exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema = exports.getGenerationsByUserIdRequestFromJSON = exports.getGenerationsByUserIdRequestToJSON = exports.GetGenerationsByUserIdRequest$ = exports.GetGenerationsByUserIdRequest$outboundSchema = exports.GetGenerationsByUserIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.GetGenerationsByUserIdRequest$inboundSchema = z.object({
    limit: z.number().int().default(10),
    offset: z.number().int().default(0),
    userId: z.string(),
});
/** @internal */
exports.GetGenerationsByUserIdRequest$outboundSchema = z.object({
    limit: z.number().int().default(10),
    offset: z.number().int().default(0),
    userId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdRequest$;
(function (GetGenerationsByUserIdRequest$) {
    /** @deprecated use `GetGenerationsByUserIdRequest$inboundSchema` instead. */
    GetGenerationsByUserIdRequest$.inboundSchema = exports.GetGenerationsByUserIdRequest$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdRequest$outboundSchema` instead. */
    GetGenerationsByUserIdRequest$.outboundSchema = exports.GetGenerationsByUserIdRequest$outboundSchema;
})(GetGenerationsByUserIdRequest$ || (exports.GetGenerationsByUserIdRequest$ = GetGenerationsByUserIdRequest$ = {}));
function getGenerationsByUserIdRequestToJSON(getGenerationsByUserIdRequest) {
    return JSON.stringify(exports.GetGenerationsByUserIdRequest$outboundSchema.parse(getGenerationsByUserIdRequest));
}
exports.getGenerationsByUserIdRequestToJSON = getGenerationsByUserIdRequestToJSON;
function getGenerationsByUserIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdRequest' from JSON`);
}
exports.getGenerationsByUserIdRequestFromJSON = getGenerationsByUserIdRequestFromJSON;
/** @internal */
exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    status: shared.JobStatus$inboundSchema.optional(),
    transformType: shared.VariationType$inboundSchema.optional(),
    url: z.nullable(z.string()).optional(),
});
/** @internal */
exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    status: shared.JobStatus$outboundSchema.optional(),
    transformType: shared.VariationType$outboundSchema.optional(),
    url: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdGeneratedImageVariationGeneric$;
(function (GetGenerationsByUserIdGeneratedImageVariationGeneric$) {
    /** @deprecated use `GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema` instead. */
    GetGenerationsByUserIdGeneratedImageVariationGeneric$.inboundSchema = exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema` instead. */
    GetGenerationsByUserIdGeneratedImageVariationGeneric$.outboundSchema = exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema;
})(GetGenerationsByUserIdGeneratedImageVariationGeneric$ || (exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$ = GetGenerationsByUserIdGeneratedImageVariationGeneric$ = {}));
function getGenerationsByUserIdGeneratedImageVariationGenericToJSON(getGenerationsByUserIdGeneratedImageVariationGeneric) {
    return JSON.stringify(exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema.parse(getGenerationsByUserIdGeneratedImageVariationGeneric));
}
exports.getGenerationsByUserIdGeneratedImageVariationGenericToJSON = getGenerationsByUserIdGeneratedImageVariationGenericToJSON;
function getGenerationsByUserIdGeneratedImageVariationGenericFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdGeneratedImageVariationGeneric' from JSON`);
}
exports.getGenerationsByUserIdGeneratedImageVariationGenericFromJSON = getGenerationsByUserIdGeneratedImageVariationGenericFromJSON;
/** @internal */
exports.GetGenerationsByUserIdGeneratedImages$inboundSchema = z.object({
    generated_image_variation_generics: z.array(z.lazy(() => exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$inboundSchema)).optional(),
    id: z.nullable(z.string()).optional(),
    imageToVideo: z.nullable(z.boolean()).optional(),
    likeCount: z.number().int().optional(),
    motion: z.nullable(z.boolean()).optional(),
    motionMP4URL: z.nullable(z.string()).optional(),
    motionModel: z.nullable(z.string()).optional(),
    motionStrength: z.nullable(z.number().int()).optional(),
    nsfw: z.boolean().optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "generated_image_variation_generics": "generatedImageVariationGenerics",
        "motionMP4URL": "motionMp4URL",
    });
});
/** @internal */
exports.GetGenerationsByUserIdGeneratedImages$outboundSchema = z.object({
    generatedImageVariationGenerics: z.array(z.lazy(() => exports.GetGenerationsByUserIdGeneratedImageVariationGeneric$outboundSchema)).optional(),
    id: z.nullable(z.string()).optional(),
    imageToVideo: z.nullable(z.boolean()).optional(),
    likeCount: z.number().int().optional(),
    motion: z.nullable(z.boolean()).optional(),
    motionMp4URL: z.nullable(z.string()).optional(),
    motionModel: z.nullable(z.string()).optional(),
    motionStrength: z.nullable(z.number().int()).optional(),
    nsfw: z.boolean().optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        generatedImageVariationGenerics: "generated_image_variation_generics",
        motionMp4URL: "motionMP4URL",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdGeneratedImages$;
(function (GetGenerationsByUserIdGeneratedImages$) {
    /** @deprecated use `GetGenerationsByUserIdGeneratedImages$inboundSchema` instead. */
    GetGenerationsByUserIdGeneratedImages$.inboundSchema = exports.GetGenerationsByUserIdGeneratedImages$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdGeneratedImages$outboundSchema` instead. */
    GetGenerationsByUserIdGeneratedImages$.outboundSchema = exports.GetGenerationsByUserIdGeneratedImages$outboundSchema;
})(GetGenerationsByUserIdGeneratedImages$ || (exports.GetGenerationsByUserIdGeneratedImages$ = GetGenerationsByUserIdGeneratedImages$ = {}));
function getGenerationsByUserIdGeneratedImagesToJSON(getGenerationsByUserIdGeneratedImages) {
    return JSON.stringify(exports.GetGenerationsByUserIdGeneratedImages$outboundSchema.parse(getGenerationsByUserIdGeneratedImages));
}
exports.getGenerationsByUserIdGeneratedImagesToJSON = getGenerationsByUserIdGeneratedImagesToJSON;
function getGenerationsByUserIdGeneratedImagesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdGeneratedImages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdGeneratedImages' from JSON`);
}
exports.getGenerationsByUserIdGeneratedImagesFromJSON = getGenerationsByUserIdGeneratedImagesFromJSON;
/** @internal */
exports.Elements$inboundSchema = z.object({
    akUUID: z.nullable(z.string()).optional(),
    baseModel: shared.SdVersions$inboundSchema.optional(),
    description: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    urlImage: z.nullable(z.string()).optional(),
    weightDefault: z.nullable(z.number().int()).optional(),
    weightMax: z.nullable(z.number().int()).optional(),
    weightMin: z.nullable(z.number().int()).optional(),
});
/** @internal */
exports.Elements$outboundSchema = z.object({
    akUUID: z.nullable(z.string()).optional(),
    baseModel: shared.SdVersions$outboundSchema.optional(),
    description: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    urlImage: z.nullable(z.string()).optional(),
    weightDefault: z.nullable(z.number().int()).optional(),
    weightMax: z.nullable(z.number().int()).optional(),
    weightMin: z.nullable(z.number().int()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Elements$;
(function (Elements$) {
    /** @deprecated use `Elements$inboundSchema` instead. */
    Elements$.inboundSchema = exports.Elements$inboundSchema;
    /** @deprecated use `Elements$outboundSchema` instead. */
    Elements$.outboundSchema = exports.Elements$outboundSchema;
})(Elements$ || (exports.Elements$ = Elements$ = {}));
function elementsToJSON(elements) {
    return JSON.stringify(exports.Elements$outboundSchema.parse(elements));
}
exports.elementsToJSON = elementsToJSON;
function elementsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Elements$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Elements' from JSON`);
}
exports.elementsFromJSON = elementsFromJSON;
/** @internal */
exports.GetGenerationsByUserIdGenerationElements$inboundSchema = z.object({
    id: z.nullable(z.number().int()).optional(),
    lora: z.nullable(z.lazy(() => exports.Elements$inboundSchema)).optional(),
    weightApplied: z.nullable(z.number()).optional(),
});
/** @internal */
exports.GetGenerationsByUserIdGenerationElements$outboundSchema = z.object({
    id: z.nullable(z.number().int()).optional(),
    lora: z.nullable(z.lazy(() => exports.Elements$outboundSchema)).optional(),
    weightApplied: z.nullable(z.number()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdGenerationElements$;
(function (GetGenerationsByUserIdGenerationElements$) {
    /** @deprecated use `GetGenerationsByUserIdGenerationElements$inboundSchema` instead. */
    GetGenerationsByUserIdGenerationElements$.inboundSchema = exports.GetGenerationsByUserIdGenerationElements$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdGenerationElements$outboundSchema` instead. */
    GetGenerationsByUserIdGenerationElements$.outboundSchema = exports.GetGenerationsByUserIdGenerationElements$outboundSchema;
})(GetGenerationsByUserIdGenerationElements$ || (exports.GetGenerationsByUserIdGenerationElements$ = GetGenerationsByUserIdGenerationElements$ = {}));
function getGenerationsByUserIdGenerationElementsToJSON(getGenerationsByUserIdGenerationElements) {
    return JSON.stringify(exports.GetGenerationsByUserIdGenerationElements$outboundSchema.parse(getGenerationsByUserIdGenerationElements));
}
exports.getGenerationsByUserIdGenerationElementsToJSON = getGenerationsByUserIdGenerationElementsToJSON;
function getGenerationsByUserIdGenerationElementsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdGenerationElements$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdGenerationElements' from JSON`);
}
exports.getGenerationsByUserIdGenerationElementsFromJSON = getGenerationsByUserIdGenerationElementsFromJSON;
/** @internal */
exports.GetGenerationsByUserIdGenerations$inboundSchema = z.object({
    createdAt: z.string().optional(),
    generated_images: z.array(z.lazy(() => exports.GetGenerationsByUserIdGeneratedImages$inboundSchema)).optional(),
    generation_elements: z.array(z.lazy(() => exports.GetGenerationsByUserIdGenerationElements$inboundSchema)).optional(),
    guidanceScale: z.nullable(z.number()).optional(),
    id: z.nullable(z.string()).optional(),
    imageHeight: z.number().int().optional(),
    imageWidth: z.number().int().optional(),
    inferenceSteps: z.nullable(z.number().int()).optional(),
    initStrength: z.nullable(z.number()).optional(),
    modelId: z.nullable(z.string()).optional(),
    negativePrompt: z.nullable(z.string()).optional(),
    photoReal: z.nullable(z.boolean()).optional(),
    photoRealStrength: z.nullable(z.number()).optional(),
    presetStyle: z.nullable(shared.SdGenerationStyle$inboundSchema.default(shared.SdGenerationStyle.Dynamic)),
    prompt: z.string().optional(),
    promptMagic: z.nullable(z.boolean()).optional(),
    promptMagicStrength: z.nullable(z.number()).optional(),
    promptMagicVersion: z.nullable(z.string()).optional(),
    public: z.boolean().optional(),
    scheduler: shared.SdGenerationSchedulers$inboundSchema.optional(),
    sdVersion: shared.SdVersions$inboundSchema.optional(),
    seed: z.nullable(z.number().int()).optional(),
    status: shared.JobStatus$inboundSchema.optional(),
    ultra: z.nullable(z.boolean()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "generated_images": "generatedImages",
        "generation_elements": "generationElements",
    });
});
/** @internal */
exports.GetGenerationsByUserIdGenerations$outboundSchema = z.object({
    createdAt: z.string().optional(),
    generatedImages: z.array(z.lazy(() => exports.GetGenerationsByUserIdGeneratedImages$outboundSchema)).optional(),
    generationElements: z.array(z.lazy(() => exports.GetGenerationsByUserIdGenerationElements$outboundSchema)).optional(),
    guidanceScale: z.nullable(z.number()).optional(),
    id: z.nullable(z.string()).optional(),
    imageHeight: z.number().int().optional(),
    imageWidth: z.number().int().optional(),
    inferenceSteps: z.nullable(z.number().int()).optional(),
    initStrength: z.nullable(z.number()).optional(),
    modelId: z.nullable(z.string()).optional(),
    negativePrompt: z.nullable(z.string()).optional(),
    photoReal: z.nullable(z.boolean()).optional(),
    photoRealStrength: z.nullable(z.number()).optional(),
    presetStyle: z.nullable(shared.SdGenerationStyle$outboundSchema.default(shared.SdGenerationStyle.Dynamic)),
    prompt: z.string().optional(),
    promptMagic: z.nullable(z.boolean()).optional(),
    promptMagicStrength: z.nullable(z.number()).optional(),
    promptMagicVersion: z.nullable(z.string()).optional(),
    public: z.boolean().optional(),
    scheduler: shared.SdGenerationSchedulers$outboundSchema.optional(),
    sdVersion: shared.SdVersions$outboundSchema.optional(),
    seed: z.nullable(z.number().int()).optional(),
    status: shared.JobStatus$outboundSchema.optional(),
    ultra: z.nullable(z.boolean()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        generatedImages: "generated_images",
        generationElements: "generation_elements",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdGenerations$;
(function (GetGenerationsByUserIdGenerations$) {
    /** @deprecated use `GetGenerationsByUserIdGenerations$inboundSchema` instead. */
    GetGenerationsByUserIdGenerations$.inboundSchema = exports.GetGenerationsByUserIdGenerations$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdGenerations$outboundSchema` instead. */
    GetGenerationsByUserIdGenerations$.outboundSchema = exports.GetGenerationsByUserIdGenerations$outboundSchema;
})(GetGenerationsByUserIdGenerations$ || (exports.GetGenerationsByUserIdGenerations$ = GetGenerationsByUserIdGenerations$ = {}));
function getGenerationsByUserIdGenerationsToJSON(getGenerationsByUserIdGenerations) {
    return JSON.stringify(exports.GetGenerationsByUserIdGenerations$outboundSchema.parse(getGenerationsByUserIdGenerations));
}
exports.getGenerationsByUserIdGenerationsToJSON = getGenerationsByUserIdGenerationsToJSON;
function getGenerationsByUserIdGenerationsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdGenerations$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdGenerations' from JSON`);
}
exports.getGenerationsByUserIdGenerationsFromJSON = getGenerationsByUserIdGenerationsFromJSON;
/** @internal */
exports.GetGenerationsByUserIdResponseBody$inboundSchema = z.object({
    generations: z.array(z.lazy(() => exports.GetGenerationsByUserIdGenerations$inboundSchema)).optional(),
});
/** @internal */
exports.GetGenerationsByUserIdResponseBody$outboundSchema = z.object({
    generations: z.array(z.lazy(() => exports.GetGenerationsByUserIdGenerations$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdResponseBody$;
(function (GetGenerationsByUserIdResponseBody$) {
    /** @deprecated use `GetGenerationsByUserIdResponseBody$inboundSchema` instead. */
    GetGenerationsByUserIdResponseBody$.inboundSchema = exports.GetGenerationsByUserIdResponseBody$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdResponseBody$outboundSchema` instead. */
    GetGenerationsByUserIdResponseBody$.outboundSchema = exports.GetGenerationsByUserIdResponseBody$outboundSchema;
})(GetGenerationsByUserIdResponseBody$ || (exports.GetGenerationsByUserIdResponseBody$ = GetGenerationsByUserIdResponseBody$ = {}));
function getGenerationsByUserIdResponseBodyToJSON(getGenerationsByUserIdResponseBody) {
    return JSON.stringify(exports.GetGenerationsByUserIdResponseBody$outboundSchema.parse(getGenerationsByUserIdResponseBody));
}
exports.getGenerationsByUserIdResponseBodyToJSON = getGenerationsByUserIdResponseBodyToJSON;
function getGenerationsByUserIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdResponseBody' from JSON`);
}
exports.getGenerationsByUserIdResponseBodyFromJSON = getGenerationsByUserIdResponseBodyFromJSON;
/** @internal */
exports.GetGenerationsByUserIdResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.GetGenerationsByUserIdResponseBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.GetGenerationsByUserIdResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.GetGenerationsByUserIdResponseBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetGenerationsByUserIdResponse$;
(function (GetGenerationsByUserIdResponse$) {
    /** @deprecated use `GetGenerationsByUserIdResponse$inboundSchema` instead. */
    GetGenerationsByUserIdResponse$.inboundSchema = exports.GetGenerationsByUserIdResponse$inboundSchema;
    /** @deprecated use `GetGenerationsByUserIdResponse$outboundSchema` instead. */
    GetGenerationsByUserIdResponse$.outboundSchema = exports.GetGenerationsByUserIdResponse$outboundSchema;
})(GetGenerationsByUserIdResponse$ || (exports.GetGenerationsByUserIdResponse$ = GetGenerationsByUserIdResponse$ = {}));
function getGenerationsByUserIdResponseToJSON(getGenerationsByUserIdResponse) {
    return JSON.stringify(exports.GetGenerationsByUserIdResponse$outboundSchema.parse(getGenerationsByUserIdResponse));
}
exports.getGenerationsByUserIdResponseToJSON = getGenerationsByUserIdResponseToJSON;
function getGenerationsByUserIdResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetGenerationsByUserIdResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetGenerationsByUserIdResponse' from JSON`);
}
exports.getGenerationsByUserIdResponseFromJSON = getGenerationsByUserIdResponseFromJSON;
//# sourceMappingURL=getgenerationsbyuserid.js.map