"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptRandomResponseFromJSON = exports.promptRandomResponseToJSON = exports.PromptRandomResponse$ = exports.PromptRandomResponse$outboundSchema = exports.PromptRandomResponse$inboundSchema = exports.promptRandomResponseBodyFromJSON = exports.promptRandomResponseBodyToJSON = exports.PromptRandomResponseBody$ = exports.PromptRandomResponseBody$outboundSchema = exports.PromptRandomResponseBody$inboundSchema = exports.promptRandomPromptGenerationOutputFromJSON = exports.promptRandomPromptGenerationOutputToJSON = exports.PromptRandomPromptGenerationOutput$ = exports.PromptRandomPromptGenerationOutput$outboundSchema = exports.PromptRandomPromptGenerationOutput$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.PromptRandomPromptGenerationOutput$inboundSchema = z.object({
    apiCreditCost: z.number().int().default(4),
    prompt: z.string().default("The random prompt generated."),
});
/** @internal */
exports.PromptRandomPromptGenerationOutput$outboundSchema = z.object({
    apiCreditCost: z.number().int().default(4),
    prompt: z.string().default("The random prompt generated."),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptRandomPromptGenerationOutput$;
(function (PromptRandomPromptGenerationOutput$) {
    /** @deprecated use `PromptRandomPromptGenerationOutput$inboundSchema` instead. */
    PromptRandomPromptGenerationOutput$.inboundSchema = exports.PromptRandomPromptGenerationOutput$inboundSchema;
    /** @deprecated use `PromptRandomPromptGenerationOutput$outboundSchema` instead. */
    PromptRandomPromptGenerationOutput$.outboundSchema = exports.PromptRandomPromptGenerationOutput$outboundSchema;
})(PromptRandomPromptGenerationOutput$ || (exports.PromptRandomPromptGenerationOutput$ = PromptRandomPromptGenerationOutput$ = {}));
function promptRandomPromptGenerationOutputToJSON(promptRandomPromptGenerationOutput) {
    return JSON.stringify(exports.PromptRandomPromptGenerationOutput$outboundSchema.parse(promptRandomPromptGenerationOutput));
}
exports.promptRandomPromptGenerationOutputToJSON = promptRandomPromptGenerationOutputToJSON;
function promptRandomPromptGenerationOutputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptRandomPromptGenerationOutput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptRandomPromptGenerationOutput' from JSON`);
}
exports.promptRandomPromptGenerationOutputFromJSON = promptRandomPromptGenerationOutputFromJSON;
/** @internal */
exports.PromptRandomResponseBody$inboundSchema = z.object({
    promptGeneration: z.lazy(() => exports.PromptRandomPromptGenerationOutput$inboundSchema).optional(),
});
/** @internal */
exports.PromptRandomResponseBody$outboundSchema = z.object({
    promptGeneration: z.lazy(() => exports.PromptRandomPromptGenerationOutput$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptRandomResponseBody$;
(function (PromptRandomResponseBody$) {
    /** @deprecated use `PromptRandomResponseBody$inboundSchema` instead. */
    PromptRandomResponseBody$.inboundSchema = exports.PromptRandomResponseBody$inboundSchema;
    /** @deprecated use `PromptRandomResponseBody$outboundSchema` instead. */
    PromptRandomResponseBody$.outboundSchema = exports.PromptRandomResponseBody$outboundSchema;
})(PromptRandomResponseBody$ || (exports.PromptRandomResponseBody$ = PromptRandomResponseBody$ = {}));
function promptRandomResponseBodyToJSON(promptRandomResponseBody) {
    return JSON.stringify(exports.PromptRandomResponseBody$outboundSchema.parse(promptRandomResponseBody));
}
exports.promptRandomResponseBodyToJSON = promptRandomResponseBodyToJSON;
function promptRandomResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptRandomResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptRandomResponseBody' from JSON`);
}
exports.promptRandomResponseBodyFromJSON = promptRandomResponseBodyFromJSON;
/** @internal */
exports.PromptRandomResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    object: z.lazy(() => exports.PromptRandomResponseBody$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.PromptRandomResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    object: z.lazy(() => exports.PromptRandomResponseBody$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PromptRandomResponse$;
(function (PromptRandomResponse$) {
    /** @deprecated use `PromptRandomResponse$inboundSchema` instead. */
    PromptRandomResponse$.inboundSchema = exports.PromptRandomResponse$inboundSchema;
    /** @deprecated use `PromptRandomResponse$outboundSchema` instead. */
    PromptRandomResponse$.outboundSchema = exports.PromptRandomResponse$outboundSchema;
})(PromptRandomResponse$ || (exports.PromptRandomResponse$ = PromptRandomResponse$ = {}));
function promptRandomResponseToJSON(promptRandomResponse) {
    return JSON.stringify(exports.PromptRandomResponse$outboundSchema.parse(promptRandomResponse));
}
exports.promptRandomResponseToJSON = promptRandomResponseToJSON;
function promptRandomResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PromptRandomResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PromptRandomResponse' from JSON`);
}
exports.promptRandomResponseFromJSON = promptRandomResponseFromJSON;
//# sourceMappingURL=promptrandom.js.map