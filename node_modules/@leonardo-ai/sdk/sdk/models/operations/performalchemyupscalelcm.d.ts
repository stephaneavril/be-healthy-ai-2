import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * Query parameters can also be provided in the request body as a JSON object
 */
export type PerformAlchemyUpscaleLCMRequestBody = {
    /**
     * How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20.
     */
    guidance?: number | null | undefined;
    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    height?: number | null | undefined;
    /**
     * Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`
     */
    imageDataUrl: string;
    /**
     * The prompt used to generate images
     */
    prompt: string;
    /**
     * Refine creative
     */
    refineCreative?: boolean | null | undefined;
    /**
     * Must be a float between 0.5 and 0.9.
     */
    refineStrength?: number | null | undefined;
    requestTimestamp?: string | undefined;
    /**
     * Apply a fixed seed to maintain consistency across generation sets. The maximum seed value is 2147483637 for Flux and 9999999998 for other models
     */
    seed?: number | null | undefined;
    /**
     * The number of steps to use for the generation. Must be between 4 and 16.
     */
    steps?: number | null | undefined;
    /**
     * Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1.
     */
    strength?: number | null | undefined;
    /**
     * The style to generate LCM images with.
     */
    style?: shared.LcmGenerationStyle | null | undefined;
    /**
     * The output width of the image. Must be 512, 640 or 1024.
     */
    width?: number | null | undefined;
};
export type PerformAlchemyUpscaleLCMLCMGenerationOutput = {
    /**
     * API credits cost, available for Production API users.
     */
    apiCreditCost?: number | null | undefined;
    generatedImageId?: string | undefined;
    generationId?: Array<string> | undefined;
    imageDataUrl?: Array<string> | undefined;
    requestTimestamp?: string | undefined;
    variationId?: Array<string> | undefined;
};
/**
 * Responses for POST /lcm-upscale
 */
export type PerformAlchemyUpscaleLCMResponseBody = {
    lcmGenerationJob?: PerformAlchemyUpscaleLCMLCMGenerationOutput | null | undefined;
};
export type PerformAlchemyUpscaleLCMResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Responses for POST /lcm-upscale
     */
    object?: PerformAlchemyUpscaleLCMResponseBody | undefined;
};
/** @internal */
export declare const PerformAlchemyUpscaleLCMRequestBody$inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformAlchemyUpscaleLCMRequestBody$Outbound = {
    guidance?: number | null | undefined;
    height: number | null;
    imageDataUrl: string;
    prompt: string;
    refineCreative?: boolean | null | undefined;
    refineStrength?: number | null | undefined;
    requestTimestamp?: string | undefined;
    seed?: number | null | undefined;
    steps?: number | null | undefined;
    strength?: number | null | undefined;
    style?: string | null | undefined;
    width: number | null;
};
/** @internal */
export declare const PerformAlchemyUpscaleLCMRequestBody$outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMRequestBody$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformAlchemyUpscaleLCMRequestBody$ {
    /** @deprecated use `PerformAlchemyUpscaleLCMRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformAlchemyUpscaleLCMRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMRequestBody$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMRequestBody>;
    /** @deprecated use `PerformAlchemyUpscaleLCMRequestBody$Outbound` instead. */
    type Outbound = PerformAlchemyUpscaleLCMRequestBody$Outbound;
}
export declare function performAlchemyUpscaleLCMRequestBodyToJSON(performAlchemyUpscaleLCMRequestBody: PerformAlchemyUpscaleLCMRequestBody): string;
export declare function performAlchemyUpscaleLCMRequestBodyFromJSON(jsonString: string): SafeParseResult<PerformAlchemyUpscaleLCMRequestBody, SDKValidationError>;
/** @internal */
export declare const PerformAlchemyUpscaleLCMLCMGenerationOutput$inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMLCMGenerationOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound = {
    apiCreditCost?: number | null | undefined;
    generatedImageId?: string | undefined;
    generationId?: Array<string> | undefined;
    imageDataUrl?: Array<string> | undefined;
    requestTimestamp?: string | undefined;
    variationId?: Array<string> | undefined;
};
/** @internal */
export declare const PerformAlchemyUpscaleLCMLCMGenerationOutput$outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMLCMGenerationOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformAlchemyUpscaleLCMLCMGenerationOutput$ {
    /** @deprecated use `PerformAlchemyUpscaleLCMLCMGenerationOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMLCMGenerationOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformAlchemyUpscaleLCMLCMGenerationOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMLCMGenerationOutput>;
    /** @deprecated use `PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound` instead. */
    type Outbound = PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound;
}
export declare function performAlchemyUpscaleLCMLCMGenerationOutputToJSON(performAlchemyUpscaleLCMLCMGenerationOutput: PerformAlchemyUpscaleLCMLCMGenerationOutput): string;
export declare function performAlchemyUpscaleLCMLCMGenerationOutputFromJSON(jsonString: string): SafeParseResult<PerformAlchemyUpscaleLCMLCMGenerationOutput, SDKValidationError>;
/** @internal */
export declare const PerformAlchemyUpscaleLCMResponseBody$inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformAlchemyUpscaleLCMResponseBody$Outbound = {
    lcmGenerationJob?: PerformAlchemyUpscaleLCMLCMGenerationOutput$Outbound | null | undefined;
};
/** @internal */
export declare const PerformAlchemyUpscaleLCMResponseBody$outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponseBody$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformAlchemyUpscaleLCMResponseBody$ {
    /** @deprecated use `PerformAlchemyUpscaleLCMResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformAlchemyUpscaleLCMResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponseBody$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMResponseBody>;
    /** @deprecated use `PerformAlchemyUpscaleLCMResponseBody$Outbound` instead. */
    type Outbound = PerformAlchemyUpscaleLCMResponseBody$Outbound;
}
export declare function performAlchemyUpscaleLCMResponseBodyToJSON(performAlchemyUpscaleLCMResponseBody: PerformAlchemyUpscaleLCMResponseBody): string;
export declare function performAlchemyUpscaleLCMResponseBodyFromJSON(jsonString: string): SafeParseResult<PerformAlchemyUpscaleLCMResponseBody, SDKValidationError>;
/** @internal */
export declare const PerformAlchemyUpscaleLCMResponse$inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type PerformAlchemyUpscaleLCMResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    object?: PerformAlchemyUpscaleLCMResponseBody$Outbound | undefined;
};
/** @internal */
export declare const PerformAlchemyUpscaleLCMResponse$outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponse$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PerformAlchemyUpscaleLCMResponse$ {
    /** @deprecated use `PerformAlchemyUpscaleLCMResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `PerformAlchemyUpscaleLCMResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PerformAlchemyUpscaleLCMResponse$Outbound, z.ZodTypeDef, PerformAlchemyUpscaleLCMResponse>;
    /** @deprecated use `PerformAlchemyUpscaleLCMResponse$Outbound` instead. */
    type Outbound = PerformAlchemyUpscaleLCMResponse$Outbound;
}
export declare function performAlchemyUpscaleLCMResponseToJSON(performAlchemyUpscaleLCMResponse: PerformAlchemyUpscaleLCMResponse): string;
export declare function performAlchemyUpscaleLCMResponseFromJSON(jsonString: string): SafeParseResult<PerformAlchemyUpscaleLCMResponse, SDKValidationError>;
//# sourceMappingURL=performalchemyupscalelcm.d.ts.map