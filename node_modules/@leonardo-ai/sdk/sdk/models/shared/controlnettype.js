"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlnetType$ = exports.ControlnetType$outboundSchema = exports.ControlnetType$inboundSchema = exports.ControlnetType = void 0;
const z = __importStar(require("zod"));
/**
 * This parameter will be deprecated in September 2024. Please use the controlnets array instead.
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
var ControlnetType;
(function (ControlnetType) {
    ControlnetType["Pose"] = "POSE";
    ControlnetType["Canny"] = "CANNY";
    ControlnetType["Depth"] = "DEPTH";
})(ControlnetType || (exports.ControlnetType = ControlnetType = {}));
/** @internal */
exports.ControlnetType$inboundSchema = z.nativeEnum(ControlnetType);
/** @internal */
exports.ControlnetType$outboundSchema = exports.ControlnetType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ControlnetType$;
(function (ControlnetType$) {
    /** @deprecated use `ControlnetType$inboundSchema` instead. */
    ControlnetType$.inboundSchema = exports.ControlnetType$inboundSchema;
    /** @deprecated use `ControlnetType$outboundSchema` instead. */
    ControlnetType$.outboundSchema = exports.ControlnetType$outboundSchema;
})(ControlnetType$ || (exports.ControlnetType$ = ControlnetType$ = {}));
//# sourceMappingURL=controlnettype.js.map