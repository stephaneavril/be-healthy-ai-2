"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.controlnetInputFromJSON = exports.controlnetInputToJSON = exports.ControlnetInput$ = exports.ControlnetInput$outboundSchema = exports.ControlnetInput$inboundSchema = exports.StrengthType$ = exports.StrengthType$outboundSchema = exports.StrengthType$inboundSchema = exports.InitImageType$ = exports.InitImageType$outboundSchema = exports.InitImageType$inboundSchema = exports.StrengthType = exports.InitImageType = void 0;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../../lib/schemas.js");
/**
 * Type indicating whether the init image is uploaded or generated.
 */
var InitImageType;
(function (InitImageType) {
    InitImageType["Generated"] = "GENERATED";
    InitImageType["Uploaded"] = "UPLOADED";
})(InitImageType || (exports.InitImageType = InitImageType = {}));
/**
 * Strength type for the controlnet. Can only be used for Style, Character and Content Reference controlnets.
 */
var StrengthType;
(function (StrengthType) {
    StrengthType["Low"] = "Low";
    StrengthType["Mid"] = "Mid";
    StrengthType["High"] = "High";
    StrengthType["Ultra"] = "Ultra";
    StrengthType["Max"] = "Max";
})(StrengthType || (exports.StrengthType = StrengthType = {}));
/** @internal */
exports.InitImageType$inboundSchema = z.nativeEnum(InitImageType);
/** @internal */
exports.InitImageType$outboundSchema = exports.InitImageType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitImageType$;
(function (InitImageType$) {
    /** @deprecated use `InitImageType$inboundSchema` instead. */
    InitImageType$.inboundSchema = exports.InitImageType$inboundSchema;
    /** @deprecated use `InitImageType$outboundSchema` instead. */
    InitImageType$.outboundSchema = exports.InitImageType$outboundSchema;
})(InitImageType$ || (exports.InitImageType$ = InitImageType$ = {}));
/** @internal */
exports.StrengthType$inboundSchema = z.nativeEnum(StrengthType);
/** @internal */
exports.StrengthType$outboundSchema = exports.StrengthType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StrengthType$;
(function (StrengthType$) {
    /** @deprecated use `StrengthType$inboundSchema` instead. */
    StrengthType$.inboundSchema = exports.StrengthType$inboundSchema;
    /** @deprecated use `StrengthType$outboundSchema` instead. */
    StrengthType$.outboundSchema = exports.StrengthType$outboundSchema;
})(StrengthType$ || (exports.StrengthType$ = StrengthType$ = {}));
/** @internal */
exports.ControlnetInput$inboundSchema = z.object({
    initImageId: z.string().optional(),
    initImageType: exports.InitImageType$inboundSchema.optional(),
    preprocessorId: z.number().optional(),
    strengthType: z.nullable(exports.StrengthType$inboundSchema).optional(),
    weight: z.nullable(z.number()).optional(),
});
/** @internal */
exports.ControlnetInput$outboundSchema = z.object({
    initImageId: z.string().optional(),
    initImageType: exports.InitImageType$outboundSchema.optional(),
    preprocessorId: z.number().optional(),
    strengthType: z.nullable(exports.StrengthType$outboundSchema).optional(),
    weight: z.nullable(z.number()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ControlnetInput$;
(function (ControlnetInput$) {
    /** @deprecated use `ControlnetInput$inboundSchema` instead. */
    ControlnetInput$.inboundSchema = exports.ControlnetInput$inboundSchema;
    /** @deprecated use `ControlnetInput$outboundSchema` instead. */
    ControlnetInput$.outboundSchema = exports.ControlnetInput$outboundSchema;
})(ControlnetInput$ || (exports.ControlnetInput$ = ControlnetInput$ = {}));
function controlnetInputToJSON(controlnetInput) {
    return JSON.stringify(exports.ControlnetInput$outboundSchema.parse(controlnetInput));
}
exports.controlnetInputToJSON = controlnetInputToJSON;
function controlnetInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ControlnetInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ControlnetInput' from JSON`);
}
exports.controlnetInputFromJSON = controlnetInputFromJSON;
//# sourceMappingURL=controlnetinput.js.map