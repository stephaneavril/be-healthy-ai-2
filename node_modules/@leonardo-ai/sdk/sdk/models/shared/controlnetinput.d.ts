import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Type indicating whether the init image is uploaded or generated.
 */
export declare enum InitImageType {
    Generated = "GENERATED",
    Uploaded = "UPLOADED"
}
/**
 * Strength type for the controlnet. Can only be used for Style, Character and Content Reference controlnets.
 */
export declare enum StrengthType {
    Low = "Low",
    Mid = "Mid",
    High = "High",
    Ultra = "Ultra",
    Max = "Max"
}
export type ControlnetInput = {
    /**
     * The ID of the init image
     */
    initImageId?: string | undefined;
    /**
     * Type indicating whether the init image is uploaded or generated.
     */
    initImageType?: InitImageType | undefined;
    /**
     * ID of the controlnet. A list of compatible IDs can be found in our guides.
     */
    preprocessorId?: number | undefined;
    /**
     * Strength type for the controlnet. Can only be used for Style, Character and Content Reference controlnets.
     */
    strengthType?: StrengthType | null | undefined;
    /**
     * Weight for the controlnet
     */
    weight?: number | null | undefined;
};
/** @internal */
export declare const InitImageType$inboundSchema: z.ZodNativeEnum<typeof InitImageType>;
/** @internal */
export declare const InitImageType$outboundSchema: z.ZodNativeEnum<typeof InitImageType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitImageType$ {
    /** @deprecated use `InitImageType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof InitImageType>;
    /** @deprecated use `InitImageType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof InitImageType>;
}
/** @internal */
export declare const StrengthType$inboundSchema: z.ZodNativeEnum<typeof StrengthType>;
/** @internal */
export declare const StrengthType$outboundSchema: z.ZodNativeEnum<typeof StrengthType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StrengthType$ {
    /** @deprecated use `StrengthType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof StrengthType>;
    /** @deprecated use `StrengthType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof StrengthType>;
}
/** @internal */
export declare const ControlnetInput$inboundSchema: z.ZodType<ControlnetInput, z.ZodTypeDef, unknown>;
/** @internal */
export type ControlnetInput$Outbound = {
    initImageId?: string | undefined;
    initImageType?: string | undefined;
    preprocessorId?: number | undefined;
    strengthType?: string | null | undefined;
    weight?: number | null | undefined;
};
/** @internal */
export declare const ControlnetInput$outboundSchema: z.ZodType<ControlnetInput$Outbound, z.ZodTypeDef, ControlnetInput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ControlnetInput$ {
    /** @deprecated use `ControlnetInput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ControlnetInput, z.ZodTypeDef, unknown>;
    /** @deprecated use `ControlnetInput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ControlnetInput$Outbound, z.ZodTypeDef, ControlnetInput>;
    /** @deprecated use `ControlnetInput$Outbound` instead. */
    type Outbound = ControlnetInput$Outbound;
}
export declare function controlnetInputToJSON(controlnetInput: ControlnetInput): string;
export declare function controlnetInputFromJSON(jsonString: string): SafeParseResult<ControlnetInput, SDKValidationError>;
//# sourceMappingURL=controlnetinput.d.ts.map