"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdVersions$ = exports.SdVersions$outboundSchema = exports.SdVersions$inboundSchema = exports.SdVersions = void 0;
const z = __importStar(require("zod"));
/**
 * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models
 */
var SdVersions;
(function (SdVersions) {
    SdVersions["V15"] = "v1_5";
    SdVersions["V2"] = "v2";
    SdVersions["V3"] = "v3";
    SdVersions["Sdxl08"] = "SDXL_0_8";
    SdVersions["Sdxl09"] = "SDXL_0_9";
    SdVersions["Sdxl10"] = "SDXL_1_0";
    SdVersions["SdxlLightning"] = "SDXL_LIGHTNING";
    SdVersions["Phoenix"] = "PHOENIX";
    SdVersions["Flux"] = "FLUX";
    SdVersions["FluxDev"] = "FLUX_DEV";
})(SdVersions || (exports.SdVersions = SdVersions = {}));
/** @internal */
exports.SdVersions$inboundSchema = z
    .nativeEnum(SdVersions);
/** @internal */
exports.SdVersions$outboundSchema = exports.SdVersions$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SdVersions$;
(function (SdVersions$) {
    /** @deprecated use `SdVersions$inboundSchema` instead. */
    SdVersions$.inboundSchema = exports.SdVersions$inboundSchema;
    /** @deprecated use `SdVersions$outboundSchema` instead. */
    SdVersions$.outboundSchema = exports.SdVersions$outboundSchema;
})(SdVersions$ || (exports.SdVersions$ = SdVersions$ = {}));
//# sourceMappingURL=sdversions.js.map