"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dataset = void 0;
const datasetCreateDataset_js_1 = require("../funcs/datasetCreateDataset.js");
const datasetDeleteDatasetById_js_1 = require("../funcs/datasetDeleteDatasetById.js");
const datasetGetDatasetById_js_1 = require("../funcs/datasetGetDatasetById.js");
const datasetUploadDatasetImage_js_1 = require("../funcs/datasetUploadDatasetImage.js");
const datasetUploadDatasetImageFromGen_js_1 = require("../funcs/datasetUploadDatasetImageFromGen.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("./types/fp.js");
class Dataset extends sdks_js_1.ClientSDK {
    /**
     * Create a Dataset
     *
     * @remarks
     * This endpoint creates a new dataset
     */
    async createDataset(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, datasetCreateDataset_js_1.datasetCreateDataset)(this, request, options));
    }
    /**
     * Delete a Single Dataset by ID
     *
     * @remarks
     * This endpoint deletes the specific dataset
     */
    async deleteDatasetById(id, options) {
        return (0, fp_js_1.unwrapAsync)((0, datasetDeleteDatasetById_js_1.datasetDeleteDatasetById)(this, id, options));
    }
    /**
     * Get a Single Dataset by ID
     *
     * @remarks
     * This endpoint gets the specific dataset
     */
    async getDatasetById(id, options) {
        return (0, fp_js_1.unwrapAsync)((0, datasetGetDatasetById_js_1.datasetGetDatasetById)(this, id, options));
    }
    /**
     * Upload dataset image
     *
     * @remarks
     * This endpoint returns presigned details to upload a dataset image to S3
     */
    async uploadDatasetImage(requestBody, datasetId, options) {
        return (0, fp_js_1.unwrapAsync)((0, datasetUploadDatasetImage_js_1.datasetUploadDatasetImage)(this, requestBody, datasetId, options));
    }
    /**
     * Upload a Single Generated Image to a Dataset
     *
     * @remarks
     * This endpoint will upload a previously generated image to the dataset
     */
    async uploadDatasetImageFromGen(requestBody, datasetId, options) {
        return (0, fp_js_1.unwrapAsync)((0, datasetUploadDatasetImageFromGen_js_1.datasetUploadDatasetImageFromGen)(this, requestBody, datasetId, options));
    }
}
exports.Dataset = Dataset;
//# sourceMappingURL=dataset.js.map